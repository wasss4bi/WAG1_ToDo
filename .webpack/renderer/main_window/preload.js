/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebSocketClient)\n/* harmony export */ });\n/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js\");\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar WebSocketClient = /*#__PURE__*/function () {\n  /**\n   * @param {string} url\n   */\n  function WebSocketClient(url) {\n    _classCallCheck(this, WebSocketClient);\n    this.client = new WebSocket(url);\n    this.client.onerror = function (error) {\n      _utils_log_js__WEBPACK_IMPORTED_MODULE_0__.log.error(error);\n    };\n  }\n\n  /**\n   * @param {(...args: any[]) => void} f\n   */\n  _createClass(WebSocketClient, [{\n    key: \"onOpen\",\n    value: function onOpen(f) {\n      this.client.onopen = f;\n    }\n\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(f) {\n      this.client.onclose = f;\n    }\n\n    // call f with the message string as the first argument\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(f) {\n      this.client.onmessage = function (e) {\n        f(e.data);\n      };\n    }\n  }]);\n  return WebSocketClient;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L2NsaWVudHMvV2ViU29ja2V0Q2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDc0M7QUFDdEM7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw4Q0FBRztBQUNUO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLDBCQUEwQjtBQUN6QztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L2NsaWVudHMvV2ViU29ja2V0Q2xpZW50LmpzP2EzZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIF90b1Byb3BlcnR5S2V5KGRlc2NyaXB0b3Iua2V5KSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7XG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHtcbiAgdmFyIGtleSA9IF90b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gdHlwZW9mIGtleSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpO1xufVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKGlucHV0LCBoaW50KSB7XG4gIGlmICh0eXBlb2YgaW5wdXQgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDtcbiAgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKHR5cGVvZiByZXMgIT09IFwib2JqZWN0XCIpIHJldHVybiByZXM7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpO1xufVxuaW1wb3J0IHsgbG9nIH0gZnJvbSBcIi4uL3V0aWxzL2xvZy5qc1wiO1xudmFyIFdlYlNvY2tldENsaWVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gICAqL1xuICBmdW5jdGlvbiBXZWJTb2NrZXRDbGllbnQodXJsKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFdlYlNvY2tldENsaWVudCk7XG4gICAgdGhpcy5jbGllbnQgPSBuZXcgV2ViU29ja2V0KHVybCk7XG4gICAgdGhpcy5jbGllbnQub25lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgbG9nLmVycm9yKGVycm9yKTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7KC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkfSBmXG4gICAqL1xuICBfY3JlYXRlQ2xhc3MoV2ViU29ja2V0Q2xpZW50LCBbe1xuICAgIGtleTogXCJvbk9wZW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25PcGVuKGYpIHtcbiAgICAgIHRoaXMuY2xpZW50Lm9ub3BlbiA9IGY7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHsoLi4uYXJnczogYW55W10pID0+IHZvaWR9IGZcbiAgICAgKi9cbiAgfSwge1xuICAgIGtleTogXCJvbkNsb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2xvc2UoZikge1xuICAgICAgdGhpcy5jbGllbnQub25jbG9zZSA9IGY7XG4gICAgfVxuXG4gICAgLy8gY2FsbCBmIHdpdGggdGhlIG1lc3NhZ2Ugc3RyaW5nIGFzIHRoZSBmaXJzdCBhcmd1bWVudFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7KC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkfSBmXG4gICAgICovXG4gIH0sIHtcbiAgICBrZXk6IFwib25NZXNzYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uTWVzc2FnZShmKSB7XG4gICAgICB0aGlzLmNsaWVudC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBmKGUuZGF0YSk7XG4gICAgICB9O1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gV2ViU29ja2V0Q2xpZW50O1xufSgpO1xuZXhwb3J0IHsgV2ViU29ja2V0Q2xpZW50IGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&overlay=true&reconnect=10&hot=true&live-reload=true":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&overlay=true&reconnect=10&hot=true&live-reload=true ***!
  \*******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var __resourceQuery = \"?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&overlay=true&reconnect=10&hot=true&live-reload=true\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/log.js */ \"./node_modules/webpack/hot/log.js\");\n/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/stripAnsi.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/stripAnsi.js\");\n/* harmony import */ var _utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/parseURL.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/parseURL.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/socket.js\");\n/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./overlay.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay.js\");\n/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/log.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js\");\n/* harmony import */ var _utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/sendMessage.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/sendMessage.js\");\n/* harmony import */ var _utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/reloadApp.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/reloadApp.js\");\n/* harmony import */ var _utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/createSocketURL.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/createSocketURL.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/* global __resourceQuery, __webpack_hash__ */\n/// <reference types=\"webpack/module\" />\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {Object} OverlayOptions\n * @property {boolean | (error: Error) => boolean} [warnings]\n * @property {boolean | (error: Error) => boolean} [errors]\n * @property {boolean | (error: Error) => boolean} [runtimeErrors]\n * @property {string} [trustedTypesPolicyName]\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} hot\n * @property {boolean} liveReload\n * @property {boolean} progress\n * @property {boolean | OverlayOptions} overlay\n * @property {string} [logging]\n * @property {number} [reconnect]\n */\n\n/**\n * @typedef {Object} Status\n * @property {boolean} isUnloading\n * @property {string} currentHash\n * @property {string} [previousHash]\n */\n\n/**\n * @param {boolean | { warnings?: boolean | string; errors?: boolean | string; runtimeErrors?: boolean | string; }} overlayOptions\n */\nvar decodeOverlayOptions = function decodeOverlayOptions(overlayOptions) {\n  if (typeof overlayOptions === \"object\") {\n    [\"warnings\", \"errors\", \"runtimeErrors\"].forEach(function (property) {\n      if (typeof overlayOptions[property] === \"string\") {\n        var overlayFilterFunctionString = decodeURIComponent(overlayOptions[property]);\n\n        // eslint-disable-next-line no-new-func\n        var overlayFilterFunction = new Function(\"message\", \"var callback = \".concat(overlayFilterFunctionString, \"\\n        return callback(message)\"));\n        overlayOptions[property] = overlayFilterFunction;\n      }\n    });\n  }\n};\n\n/**\n * @type {Status}\n */\nvar status = {\n  isUnloading: false,\n  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n  // eslint-disable-next-line camelcase\n  currentHash:  true ? __webpack_require__.h() : 0\n};\n\n/** @type {Options} */\nvar options = {\n  hot: false,\n  liveReload: false,\n  progress: false,\n  overlay: false\n};\nvar parsedResourceQuery = (0,_utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(__resourceQuery);\nvar enabledFeatures = {\n  \"Hot Module Replacement\": false,\n  \"Live Reloading\": false,\n  Progress: false,\n  Overlay: false\n};\nif (parsedResourceQuery.hot === \"true\") {\n  options.hot = true;\n  enabledFeatures[\"Hot Module Replacement\"] = true;\n}\nif (parsedResourceQuery[\"live-reload\"] === \"true\") {\n  options.liveReload = true;\n  enabledFeatures[\"Live Reloading\"] = true;\n}\nif (parsedResourceQuery.progress === \"true\") {\n  options.progress = true;\n  enabledFeatures.Progress = true;\n}\nif (parsedResourceQuery.overlay) {\n  try {\n    options.overlay = JSON.parse(parsedResourceQuery.overlay);\n  } catch (e) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(\"Error parsing overlay options from resource query:\", e);\n  }\n\n  // Fill in default \"true\" params for partially-specified objects.\n  if (typeof options.overlay === \"object\") {\n    options.overlay = _objectSpread({\n      errors: true,\n      warnings: true,\n      runtimeErrors: true\n    }, options.overlay);\n    decodeOverlayOptions(options.overlay);\n  }\n  enabledFeatures.Overlay = true;\n}\nif (parsedResourceQuery.logging) {\n  options.logging = parsedResourceQuery.logging;\n}\nif (typeof parsedResourceQuery.reconnect !== \"undefined\") {\n  options.reconnect = Number(parsedResourceQuery.reconnect);\n}\n\n/**\n * @param {string} level\n */\nfunction setAllLogLevel(level) {\n  // This is needed because the HMR logger operate separately from dev server logger\n  webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default().setLogLevel(level === \"verbose\" || level === \"log\" ? \"info\" : level);\n  (0,_utils_log_js__WEBPACK_IMPORTED_MODULE_5__.setLogLevel)(level);\n}\nif (options.logging) {\n  setAllLogLevel(options.logging);\n}\n(0,_utils_log_js__WEBPACK_IMPORTED_MODULE_5__.logEnabledFeatures)(enabledFeatures);\nself.addEventListener(\"beforeunload\", function () {\n  status.isUnloading = true;\n});\nvar overlay = typeof window !== \"undefined\" ? (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.createOverlay)(typeof options.overlay === \"object\" ? {\n  trustedTypesPolicyName: options.overlay.trustedTypesPolicyName,\n  catchRuntimeError: options.overlay.runtimeErrors\n} : {\n  trustedTypesPolicyName: false,\n  catchRuntimeError: options.overlay\n}) : {\n  send: function send() {}\n};\nvar onSocketMessage = {\n  hot: function hot() {\n    if (parsedResourceQuery.hot === \"false\") {\n      return;\n    }\n    options.hot = true;\n  },\n  liveReload: function liveReload() {\n    if (parsedResourceQuery[\"live-reload\"] === \"false\") {\n      return;\n    }\n    options.liveReload = true;\n  },\n  invalid: function invalid() {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"App updated. Recompiling...\");\n\n    // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Invalid\");\n  },\n  /**\n   * @param {string} hash\n   */\n  hash: function hash(_hash) {\n    status.previousHash = status.currentHash;\n    status.currentHash = _hash;\n  },\n  logging: setAllLogLevel,\n  /**\n   * @param {boolean} value\n   */\n  overlay: function overlay(value) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n    options.overlay = value;\n    decodeOverlayOptions(options.overlay);\n  },\n  /**\n   * @param {number} value\n   */\n  reconnect: function reconnect(value) {\n    if (parsedResourceQuery.reconnect === \"false\") {\n      return;\n    }\n    options.reconnect = value;\n  },\n  /**\n   * @param {boolean} value\n   */\n  progress: function progress(value) {\n    options.progress = value;\n  },\n  /**\n   * @param {{ pluginName?: string, percent: number, msg: string }} data\n   */\n  \"progress-update\": function progressUpdate(data) {\n    if (options.progress) {\n      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"\".concat(data.pluginName ? \"[\".concat(data.pluginName, \"] \") : \"\").concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Progress\", data);\n  },\n  \"still-ok\": function stillOk() {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"Nothing changed.\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"StillOk\");\n  },\n  ok: function ok() {\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Ok\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(options, status);\n  },\n  // TODO: remove in v5 in favor of 'static-changed'\n  /**\n   * @param {string} file\n   */\n  \"content-changed\": function contentChanged(file) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {string} file\n   */\n  \"static-changed\": function staticChanged(file) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {Error[]} warnings\n   * @param {any} params\n   */\n  warnings: function warnings(_warnings, params) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn(\"Warnings while compiling.\");\n    var printableWarnings = _warnings.map(function (error) {\n      var _formatProblem = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)(\"warning\", error),\n        header = _formatProblem.header,\n        body = _formatProblem.body;\n      return \"\".concat(header, \"\\n\").concat((0,_utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(body));\n    });\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Warnings\", printableWarnings);\n    for (var i = 0; i < printableWarnings.length; i++) {\n      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn(printableWarnings[i]);\n    }\n    var overlayWarningsSetting = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.warnings;\n    if (overlayWarningsSetting) {\n      var warningsToDisplay = typeof overlayWarningsSetting === \"function\" ? _warnings.filter(overlayWarningsSetting) : _warnings;\n      if (warningsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"warning\",\n          messages: _warnings\n        });\n      }\n    }\n    if (params && params.preventReloading) {\n      return;\n    }\n    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(options, status);\n  },\n  /**\n   * @param {Error[]} errors\n   */\n  errors: function errors(_errors) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(\"Errors while compiling. Reload prevented.\");\n    var printableErrors = _errors.map(function (error) {\n      var _formatProblem2 = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)(\"error\", error),\n        header = _formatProblem2.header,\n        body = _formatProblem2.body;\n      return \"\".concat(header, \"\\n\").concat((0,_utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(body));\n    });\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Errors\", printableErrors);\n    for (var i = 0; i < printableErrors.length; i++) {\n      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(printableErrors[i]);\n    }\n    var overlayErrorsSettings = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.errors;\n    if (overlayErrorsSettings) {\n      var errorsToDisplay = typeof overlayErrorsSettings === \"function\" ? _errors.filter(overlayErrorsSettings) : _errors;\n      if (errorsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"error\",\n          messages: _errors\n        });\n      }\n    }\n  },\n  /**\n   * @param {Error} error\n   */\n  error: function error(_error) {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(_error);\n  },\n  close: function close() {\n    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info(\"Disconnected!\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"Close\");\n  }\n};\nvar socketURL = (0,_utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(parsedResourceQuery);\n(0,_socket_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(socketURL, onSocketMessage, options.reconnect);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&overlay=true&reconnect=10&hot=true&live-reload=true\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/modules/logger/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/modules/logger/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./client-src/modules/logger/SyncBailHookFake.js\": (\n    /*!*******************************************************!*\\\n      !*** ./client-src/modules/logger/SyncBailHookFake.js ***!\n      \\*******************************************************/\n    /***/\n    function (module) {\n      /**\n       * Client stub for tapable SyncBailHook\n       */\n      module.exports = function clientTapableSyncBailHook() {\n        return {\n          call: function call() {}\n        };\n      };\n\n      /***/\n    }),\n    /***/\"./node_modules/webpack/lib/logging/Logger.js\": (\n    /*!****************************************************!*\\\n      !*** ./node_modules/webpack/lib/logging/Logger.js ***!\n      \\****************************************************/\n    /***/\n    function (__unused_webpack_module, exports) {\n      /*\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\n      \tAuthor Tobias Koppers @sokra\n      */\n\n      function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n      }\n      function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _iterableToArray(iter) {\n        if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n          return i;\n        }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n          return i;\n        }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n      }\n      function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n        return arr2;\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        Object.defineProperty(Constructor, \"prototype\", {\n          writable: false\n        });\n        return Constructor;\n      }\n      function _toPropertyKey(arg) {\n        var key = _toPrimitive(arg, \"string\");\n        return typeof key === \"symbol\" ? key : String(key);\n      }\n      function _toPrimitive(input, hint) {\n        if (typeof input !== \"object\" || input === null) return input;\n        var prim = input[(typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n          return i;\n        }).toPrimitive];\n        if (prim !== undefined) {\n          var res = prim.call(input, hint || \"default\");\n          if (typeof res !== \"object\") return res;\n          throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return (hint === \"string\" ? String : Number)(input);\n      }\n      var LogType = Object.freeze({\n        error: /** @type {\"error\"} */\"error\",\n        // message, c style arguments\n        warn: /** @type {\"warn\"} */\"warn\",\n        // message, c style arguments\n        info: /** @type {\"info\"} */\"info\",\n        // message, c style arguments\n        log: /** @type {\"log\"} */\"log\",\n        // message, c style arguments\n        debug: /** @type {\"debug\"} */\"debug\",\n        // message, c style arguments\n\n        trace: /** @type {\"trace\"} */\"trace\",\n        // no arguments\n\n        group: /** @type {\"group\"} */\"group\",\n        // [label]\n        groupCollapsed: /** @type {\"groupCollapsed\"} */\"groupCollapsed\",\n        // [label]\n        groupEnd: /** @type {\"groupEnd\"} */\"groupEnd\",\n        // [label]\n\n        profile: /** @type {\"profile\"} */\"profile\",\n        // [profileName]\n        profileEnd: /** @type {\"profileEnd\"} */\"profileEnd\",\n        // [profileName]\n\n        time: /** @type {\"time\"} */\"time\",\n        // name, time as [seconds, nanoseconds]\n\n        clear: /** @type {\"clear\"} */\"clear\",\n        // no arguments\n        status: /** @type {\"status\"} */\"status\" // message, arguments\n      });\n      exports.LogType = LogType;\n\n      /** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\n      var LOG_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n        return i;\n      })(\"webpack logger raw log method\");\n      var TIMERS_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n        return i;\n      })(\"webpack logger times\");\n      var TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n        return i;\n      })(\"webpack logger aggregated times\");\n      var WebpackLogger = /*#__PURE__*/function () {\n        /**\n         * @param {function(LogTypeEnum, any[]=): void} log log function\n         * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n         */\n        function WebpackLogger(log, getChildLogger) {\n          _classCallCheck(this, WebpackLogger);\n          this[LOG_SYMBOL] = log;\n          this.getChildLogger = getChildLogger;\n        }\n        _createClass(WebpackLogger, [{\n          key: \"error\",\n          value: function error() {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            this[LOG_SYMBOL](LogType.error, args);\n          }\n        }, {\n          key: \"warn\",\n          value: function warn() {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n            this[LOG_SYMBOL](LogType.warn, args);\n          }\n        }, {\n          key: \"info\",\n          value: function info() {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n            this[LOG_SYMBOL](LogType.info, args);\n          }\n        }, {\n          key: \"log\",\n          value: function log() {\n            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              args[_key4] = arguments[_key4];\n            }\n            this[LOG_SYMBOL](LogType.log, args);\n          }\n        }, {\n          key: \"debug\",\n          value: function debug() {\n            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n              args[_key5] = arguments[_key5];\n            }\n            this[LOG_SYMBOL](LogType.debug, args);\n          }\n        }, {\n          key: \"assert\",\n          value: function assert(assertion) {\n            if (!assertion) {\n              for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n                args[_key6 - 1] = arguments[_key6];\n              }\n              this[LOG_SYMBOL](LogType.error, args);\n            }\n          }\n        }, {\n          key: \"trace\",\n          value: function trace() {\n            this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this[LOG_SYMBOL](LogType.clear);\n          }\n        }, {\n          key: \"status\",\n          value: function status() {\n            for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n              args[_key7] = arguments[_key7];\n            }\n            this[LOG_SYMBOL](LogType.status, args);\n          }\n        }, {\n          key: \"group\",\n          value: function group() {\n            for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n              args[_key8] = arguments[_key8];\n            }\n            this[LOG_SYMBOL](LogType.group, args);\n          }\n        }, {\n          key: \"groupCollapsed\",\n          value: function groupCollapsed() {\n            for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n              args[_key9] = arguments[_key9];\n            }\n            this[LOG_SYMBOL](LogType.groupCollapsed, args);\n          }\n        }, {\n          key: \"groupEnd\",\n          value: function groupEnd() {\n            for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n              args[_key10] = arguments[_key10];\n            }\n            this[LOG_SYMBOL](LogType.groupEnd, args);\n          }\n        }, {\n          key: \"profile\",\n          value: function profile(label) {\n            this[LOG_SYMBOL](LogType.profile, [label]);\n          }\n        }, {\n          key: \"profileEnd\",\n          value: function profileEnd(label) {\n            this[LOG_SYMBOL](LogType.profileEnd, [label]);\n          }\n        }, {\n          key: \"time\",\n          value: function time(label) {\n            this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n            this[TIMERS_SYMBOL].set(label, process.hrtime());\n          }\n        }, {\n          key: \"timeLog\",\n          value: function timeLog(label) {\n            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n            if (!prev) {\n              throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeLog()\"));\n            }\n            var time = process.hrtime(prev);\n            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n          }\n        }, {\n          key: \"timeEnd\",\n          value: function timeEnd(label) {\n            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n            if (!prev) {\n              throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeEnd()\"));\n            }\n            var time = process.hrtime(prev);\n            this[TIMERS_SYMBOL].delete(label);\n            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n          }\n        }, {\n          key: \"timeAggregate\",\n          value: function timeAggregate(label) {\n            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n            if (!prev) {\n              throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeAggregate()\"));\n            }\n            var time = process.hrtime(prev);\n            this[TIMERS_SYMBOL].delete(label);\n            this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n            var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n            if (current !== undefined) {\n              if (time[1] + current[1] > 1e9) {\n                time[0] += current[0] + 1;\n                time[1] = time[1] - 1e9 + current[1];\n              } else {\n                time[0] += current[0];\n                time[1] += current[1];\n              }\n            }\n            this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n          }\n        }, {\n          key: \"timeAggregateEnd\",\n          value: function timeAggregateEnd(label) {\n            if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n            var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n            if (time === undefined) return;\n            this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n          }\n        }]);\n        return WebpackLogger;\n      }();\n      exports.Logger = WebpackLogger;\n\n      /***/\n    }),\n    /***/\"./node_modules/webpack/lib/logging/createConsoleLogger.js\": (\n    /*!*****************************************************************!*\\\n      !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!\n      \\*****************************************************************/\n    /***/\n    function (module, __unused_webpack_exports, __nested_webpack_require_13160__) {\n      /*\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\n      \tAuthor Tobias Koppers @sokra\n      */\n\n      function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n      }\n      function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _iterableToArray(iter) {\n        if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n          return i;\n        }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) {\n          return i;\n        }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n      }\n      function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n        return arr2;\n      }\n      var _require = __nested_webpack_require_13160__(/*! ./Logger */\"./node_modules/webpack/lib/logging/Logger.js\"),\n        LogType = _require.LogType;\n\n      /** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n      /** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n      /** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n      /** @typedef {function(string): boolean} FilterFunction */\n\n      /**\n       * @typedef {Object} LoggerConsole\n       * @property {function(): void} clear\n       * @property {function(): void} trace\n       * @property {(...args: any[]) => void} info\n       * @property {(...args: any[]) => void} log\n       * @property {(...args: any[]) => void} warn\n       * @property {(...args: any[]) => void} error\n       * @property {(...args: any[]) => void=} debug\n       * @property {(...args: any[]) => void=} group\n       * @property {(...args: any[]) => void=} groupCollapsed\n       * @property {(...args: any[]) => void=} groupEnd\n       * @property {(...args: any[]) => void=} status\n       * @property {(...args: any[]) => void=} profile\n       * @property {(...args: any[]) => void=} profileEnd\n       * @property {(...args: any[]) => void=} logTime\n       */\n\n      /**\n       * @typedef {Object} LoggerOptions\n       * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n       * @property {FilterTypes|boolean} debug filter for debug logging\n       * @property {LoggerConsole} console the console to log to\n       */\n\n      /**\n       * @param {FilterItemTypes} item an input item\n       * @returns {FilterFunction} filter function\n       */\n      var filterToFunction = function filterToFunction(item) {\n        if (typeof item === \"string\") {\n          var regExp = new RegExp(\"[\\\\\\\\/]\".concat(item.replace(\n          // eslint-disable-next-line no-useless-escape\n          /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\"), \"([\\\\\\\\/]|$|!|\\\\?)\"));\n          return function (ident) {\n            return regExp.test(ident);\n          };\n        }\n        if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n          return function (ident) {\n            return item.test(ident);\n          };\n        }\n        if (typeof item === \"function\") {\n          return item;\n        }\n        if (typeof item === \"boolean\") {\n          return function () {\n            return item;\n          };\n        }\n      };\n\n      /**\n       * @enum {number}\n       */\n      var LogLevel = {\n        none: 6,\n        false: 6,\n        error: 5,\n        warn: 4,\n        info: 3,\n        log: 2,\n        true: 2,\n        verbose: 1\n      };\n\n      /**\n       * @param {LoggerOptions} options options object\n       * @returns {function(string, LogTypeEnum, any[]): void} logging function\n       */\n      module.exports = function (_ref) {\n        var _ref$level = _ref.level,\n          level = _ref$level === void 0 ? \"info\" : _ref$level,\n          _ref$debug = _ref.debug,\n          debug = _ref$debug === void 0 ? false : _ref$debug,\n          console = _ref.console;\n        var debugFilters = typeof debug === \"boolean\" ? [function () {\n          return debug;\n        }] : /** @type {FilterItemTypes[]} */[].concat(debug).map(filterToFunction);\n        /** @type {number} */\n        var loglevel = LogLevel[\"\".concat(level)] || 0;\n\n        /**\n         * @param {string} name name of the logger\n         * @param {LogTypeEnum} type type of the log entry\n         * @param {any[]} args arguments of the log entry\n         * @returns {void}\n         */\n        var logger = function logger(name, type, args) {\n          var labeledArgs = function labeledArgs() {\n            if (Array.isArray(args)) {\n              if (args.length > 0 && typeof args[0] === \"string\") {\n                return [\"[\".concat(name, \"] \").concat(args[0])].concat(_toConsumableArray(args.slice(1)));\n              } else {\n                return [\"[\".concat(name, \"]\")].concat(_toConsumableArray(args));\n              }\n            } else {\n              return [];\n            }\n          };\n          var debug = debugFilters.some(function (f) {\n            return f(name);\n          });\n          switch (type) {\n            case LogType.debug:\n              if (!debug) return;\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.debug === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.debug.apply(console, _toConsumableArray(labeledArgs()));\n              } else {\n                console.log.apply(console, _toConsumableArray(labeledArgs()));\n              }\n              break;\n            case LogType.log:\n              if (!debug && loglevel > LogLevel.log) return;\n              console.log.apply(console, _toConsumableArray(labeledArgs()));\n              break;\n            case LogType.info:\n              if (!debug && loglevel > LogLevel.info) return;\n              console.info.apply(console, _toConsumableArray(labeledArgs()));\n              break;\n            case LogType.warn:\n              if (!debug && loglevel > LogLevel.warn) return;\n              console.warn.apply(console, _toConsumableArray(labeledArgs()));\n              break;\n            case LogType.error:\n              if (!debug && loglevel > LogLevel.error) return;\n              console.error.apply(console, _toConsumableArray(labeledArgs()));\n              break;\n            case LogType.trace:\n              if (!debug) return;\n              console.trace();\n              break;\n            case LogType.groupCollapsed:\n              if (!debug && loglevel > LogLevel.log) return;\n              if (!debug && loglevel > LogLevel.verbose) {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                if (typeof console.groupCollapsed === \"function\") {\n                  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                  console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));\n                } else {\n                  console.log.apply(console, _toConsumableArray(labeledArgs()));\n                }\n                break;\n              }\n            // falls through\n            case LogType.group:\n              if (!debug && loglevel > LogLevel.log) return;\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.group === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.group.apply(console, _toConsumableArray(labeledArgs()));\n              } else {\n                console.log.apply(console, _toConsumableArray(labeledArgs()));\n              }\n              break;\n            case LogType.groupEnd:\n              if (!debug && loglevel > LogLevel.log) return;\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.groupEnd === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.groupEnd();\n              }\n              break;\n            case LogType.time:\n              {\n                if (!debug && loglevel > LogLevel.log) return;\n                var ms = args[1] * 1000 + args[2] / 1000000;\n                var msg = \"[\".concat(name, \"] \").concat(args[0], \": \").concat(ms, \" ms\");\n                if (typeof console.logTime === \"function\") {\n                  console.logTime(msg);\n                } else {\n                  console.log(msg);\n                }\n                break;\n              }\n            case LogType.profile:\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.profile === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.profile.apply(console, _toConsumableArray(labeledArgs()));\n              }\n              break;\n            case LogType.profileEnd:\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.profileEnd === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));\n              }\n              break;\n            case LogType.clear:\n              if (!debug && loglevel > LogLevel.log) return;\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              if (typeof console.clear === \"function\") {\n                // eslint-disable-next-line node/no-unsupported-features/node-builtins\n                console.clear();\n              }\n              break;\n            case LogType.status:\n              if (!debug && loglevel > LogLevel.info) return;\n              if (typeof console.status === \"function\") {\n                if (args.length === 0) {\n                  console.status();\n                } else {\n                  console.status.apply(console, _toConsumableArray(labeledArgs()));\n                }\n              } else {\n                if (args.length !== 0) {\n                  console.info.apply(console, _toConsumableArray(labeledArgs()));\n                }\n              }\n              break;\n            default:\n              throw new Error(\"Unexpected LogType \".concat(type));\n          }\n        };\n        return logger;\n      };\n\n      /***/\n    }),\n    /***/\"./node_modules/webpack/lib/logging/runtime.js\": (\n    /*!*****************************************************!*\\\n      !*** ./node_modules/webpack/lib/logging/runtime.js ***!\n      \\*****************************************************/\n    /***/\n    function (__unused_webpack_module, exports, __nested_webpack_require_24775__) {\n      /*\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\n      \tAuthor Tobias Koppers @sokra\n      */\n\n      function _extends() {\n        _extends = Object.assign ? Object.assign.bind() : function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n          return target;\n        };\n        return _extends.apply(this, arguments);\n      }\n      var SyncBailHook = __nested_webpack_require_24775__(/*! tapable/lib/SyncBailHook */\"./client-src/modules/logger/SyncBailHookFake.js\");\n      var _require = __nested_webpack_require_24775__(/*! ./Logger */\"./node_modules/webpack/lib/logging/Logger.js\"),\n        Logger = _require.Logger;\n      var createConsoleLogger = __nested_webpack_require_24775__(/*! ./createConsoleLogger */\"./node_modules/webpack/lib/logging/createConsoleLogger.js\");\n\n      /** @type {createConsoleLogger.LoggerOptions} */\n      var currentDefaultLoggerOptions = {\n        level: \"info\",\n        debug: false,\n        console: console\n      };\n      var currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n\n      /**\n       * @param {string} name name of the logger\n       * @returns {Logger} a logger\n       */\n      exports.getLogger = function (name) {\n        return new Logger(function (type, args) {\n          if (exports.hooks.log.call(name, type, args) === undefined) {\n            currentDefaultLogger(name, type, args);\n          }\n        }, function (childName) {\n          return exports.getLogger(\"\".concat(name, \"/\").concat(childName));\n        });\n      };\n\n      /**\n       * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options\n       * @returns {void}\n       */\n      exports.configureDefaultLogger = function (options) {\n        _extends(currentDefaultLoggerOptions, options);\n        currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n      };\n      exports.hooks = {\n        log: new SyncBailHook([\"origin\", \"type\", \"args\"])\n      };\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/ // The module cache\n  /******/\n  var __webpack_module_cache__ = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __nested_webpack_require_27238__(moduleId) {\n    /******/ // Check if module is in cache\n    /******/var cachedModule = __webpack_module_cache__[moduleId];\n    /******/\n    if (cachedModule !== undefined) {\n      /******/return cachedModule.exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = __webpack_module_cache__[moduleId] = {\n      /******/ // no module.id needed\n      /******/ // no module.loaded needed\n      /******/exports: {}\n      /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    __webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_27238__);\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /************************************************************************/\n  /******/ /* webpack/runtime/define property getters */\n  /******/\n  !function () {\n    /******/ // define getter functions for harmony exports\n    /******/__nested_webpack_require_27238__.d = function (exports, definition) {\n      /******/for (var key in definition) {\n        /******/if (__nested_webpack_require_27238__.o(definition, key) && !__nested_webpack_require_27238__.o(exports, key)) {\n          /******/Object.defineProperty(exports, key, {\n            enumerable: true,\n            get: definition[key]\n          });\n          /******/\n        }\n        /******/\n      }\n      /******/\n    };\n    /******/\n  }();\n  /******/\n  /******/ /* webpack/runtime/hasOwnProperty shorthand */\n  /******/\n  !function () {\n    /******/__nested_webpack_require_27238__.o = function (obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n    /******/\n  }();\n  /******/\n  /******/ /* webpack/runtime/make namespace object */\n  /******/\n  !function () {\n    /******/ // define __esModule on exports\n    /******/__nested_webpack_require_27238__.r = function (exports) {\n      /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n  }();\n  /******/\n  /************************************************************************/\n  var __nested_webpack_exports__ = {};\n  // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n  !function () {\n    /*!********************************************!*\\\n      !*** ./client-src/modules/logger/index.js ***!\n      \\********************************************/\n    __nested_webpack_require_27238__.r(__nested_webpack_exports__);\n    /* harmony export */\n    __nested_webpack_require_27238__.d(__nested_webpack_exports__, {\n      /* harmony export */\"default\": function () {\n        return /* reexport default export from named module */webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__;\n      }\n      /* harmony export */\n    });\n    /* harmony import */\n    var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_27238__(/*! webpack/lib/logging/runtime.js */\"./node_modules/webpack/lib/logging/runtime.js\");\n  }();\n  var __webpack_export_target__ = exports;\n  for (var i in __nested_webpack_exports__) __webpack_export_target__[i] = __nested_webpack_exports__[i];\n  if (__nested_webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \"__esModule\", {\n    value: true\n  });\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/modules/logger/index.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOverlay: () => (/* binding */ createOverlay),\n/* harmony export */   formatProblem: () => (/* binding */ formatProblem)\n/* harmony export */ });\n/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ansi-html-community */ \"./node_modules/ansi-html-community/index.js\");\n/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ansi_html_community__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! html-entities */ \"./node_modules/html-entities/lib/index.js\");\n/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(html_entities__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./overlay/runtime-error.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/runtime-error.js\");\n/* harmony import */ var _overlay_state_machine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overlay/state-machine.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/state-machine.js\");\n/* harmony import */ var _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./overlay/styles.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/styles.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n\n\n\n\n\n\nvar colors = {\n  reset: [\"transparent\", \"transparent\"],\n  black: \"181818\",\n  red: \"E36049\",\n  green: \"B3CB74\",\n  yellow: \"FFD080\",\n  blue: \"7CAFC2\",\n  magenta: \"7FACCA\",\n  cyan: \"C3C2EF\",\n  lightgrey: \"EBE7E3\",\n  darkgrey: \"6D7891\"\n};\nansi_html_community__WEBPACK_IMPORTED_MODULE_0___default().setColors(colors);\n\n/**\n * @param {string} type\n * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string; stack?: string[] }} item\n * @returns {{ header: string, body: string }}\n */\nfunction formatProblem(type, item) {\n  var header = type === \"warning\" ? \"WARNING\" : \"ERROR\";\n  var body = \"\";\n  if (typeof item === \"string\") {\n    body += item;\n  } else {\n    var file = item.file || \"\";\n    // eslint-disable-next-line no-nested-ternary\n    var moduleName = item.moduleName ? item.moduleName.indexOf(\"!\") !== -1 ? \"\".concat(item.moduleName.replace(/^(\\s|\\S)*!/, \"\"), \" (\").concat(item.moduleName, \")\") : \"\".concat(item.moduleName) : \"\";\n    var loc = item.loc;\n    header += \"\".concat(moduleName || file ? \" in \".concat(moduleName ? \"\".concat(moduleName).concat(file ? \" (\".concat(file, \")\") : \"\") : file).concat(loc ? \" \".concat(loc) : \"\") : \"\");\n    body += item.message || \"\";\n  }\n  if (Array.isArray(item.stack)) {\n    item.stack.forEach(function (stack) {\n      if (typeof stack === \"string\") {\n        body += \"\\r\\n\".concat(stack);\n      }\n    });\n  }\n  return {\n    header: header,\n    body: body\n  };\n}\n\n/**\n * @typedef {Object} CreateOverlayOptions\n * @property {string | null} trustedTypesPolicyName\n * @property {boolean | (error: Error) => void} [catchRuntimeError]\n */\n\n/**\n *\n * @param {CreateOverlayOptions} options\n */\nvar createOverlay = function createOverlay(options) {\n  /** @type {HTMLIFrameElement | null | undefined} */\n  var iframeContainerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var containerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var headerElement;\n  /** @type {Array<(element: HTMLDivElement) => void>} */\n  var onLoadQueue = [];\n  /** @type {TrustedTypePolicy | undefined} */\n  var overlayTrustedTypesPolicy;\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {CSSStyleDeclaration} style\n   */\n  function applyStyle(element, style) {\n    Object.keys(style).forEach(function (prop) {\n      element.style[prop] = style[prop];\n    });\n  }\n\n  /**\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function createContainer(trustedTypesPolicyName) {\n    // Enable Trusted Types if they are available in the current browser.\n    if (window.trustedTypes) {\n      overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || \"webpack-dev-server#overlay\", {\n        createHTML: function createHTML(value) {\n          return value;\n        }\n      });\n    }\n    iframeContainerElement = document.createElement(\"iframe\");\n    iframeContainerElement.id = \"webpack-dev-server-client-overlay\";\n    iframeContainerElement.src = \"about:blank\";\n    applyStyle(iframeContainerElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.iframeStyle);\n    iframeContainerElement.onload = function () {\n      var contentElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      containerElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      contentElement.id = \"webpack-dev-server-client-overlay-div\";\n      applyStyle(contentElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.containerStyle);\n      headerElement = document.createElement(\"div\");\n      headerElement.innerText = \"Compiled with problems:\";\n      applyStyle(headerElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.headerStyle);\n      var closeButtonElement = document.createElement(\"button\");\n      applyStyle(closeButtonElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.dismissButtonStyle);\n      closeButtonElement.innerText = \"×\";\n      closeButtonElement.ariaLabel = \"Dismiss\";\n      closeButtonElement.addEventListener(\"click\", function () {\n        // eslint-disable-next-line no-use-before-define\n        overlayService.send({\n          type: \"DISMISS\"\n        });\n      });\n      contentElement.appendChild(headerElement);\n      contentElement.appendChild(closeButtonElement);\n      contentElement.appendChild(containerElement);\n\n      /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.body.appendChild(contentElement);\n      onLoadQueue.forEach(function (onLoad) {\n        onLoad(/** @type {HTMLDivElement} */contentElement);\n      });\n      onLoadQueue = [];\n\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.onload = null;\n    };\n    document.body.appendChild(iframeContainerElement);\n  }\n\n  /**\n   * @param {(element: HTMLDivElement) => void} callback\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function ensureOverlayExists(callback, trustedTypesPolicyName) {\n    if (containerElement) {\n      containerElement.innerHTML = \"\";\n      // Everything is ready, call the callback right away.\n      callback(containerElement);\n      return;\n    }\n    onLoadQueue.push(callback);\n    if (iframeContainerElement) {\n      return;\n    }\n    createContainer(trustedTypesPolicyName);\n  }\n\n  // Successful compilation.\n  function hide() {\n    if (!iframeContainerElement) {\n      return;\n    }\n\n    // Clean up and reset internal state.\n    document.body.removeChild(iframeContainerElement);\n    iframeContainerElement = null;\n    containerElement = null;\n  }\n\n  // Compilation with errors (e.g. syntax error or missing modules).\n  /**\n   * @param {string} type\n   * @param {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n   * @param {string | null} trustedTypesPolicyName\n   * @param {'build' | 'runtime'} messageSource\n   */\n  function show(type, messages, trustedTypesPolicyName, messageSource) {\n    ensureOverlayExists(function () {\n      headerElement.innerText = messageSource === \"runtime\" ? \"Uncaught runtime errors:\" : \"Compiled with problems:\";\n      messages.forEach(function (message) {\n        var entryElement = document.createElement(\"div\");\n        var msgStyle = type === \"warning\" ? _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgStyles.warning : _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgStyles.error;\n        applyStyle(entryElement, _objectSpread(_objectSpread({}, msgStyle), {}, {\n          padding: \"1rem 1rem 1.5rem 1rem\"\n        }));\n        var typeElement = document.createElement(\"div\");\n        var _formatProblem = formatProblem(type, message),\n          header = _formatProblem.header,\n          body = _formatProblem.body;\n        typeElement.innerText = header;\n        applyStyle(typeElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgTypeStyle);\n        if (message.moduleIdentifier) {\n          applyStyle(typeElement, {\n            cursor: \"pointer\"\n          });\n          // element.dataset not supported in IE\n          typeElement.setAttribute(\"data-can-open\", true);\n          typeElement.addEventListener(\"click\", function () {\n            fetch(\"/webpack-dev-server/open-editor?fileName=\".concat(message.moduleIdentifier));\n          });\n        }\n\n        // Make it look similar to our terminal.\n        var text = ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default()((0,html_entities__WEBPACK_IMPORTED_MODULE_4__.encode)(body));\n        var messageTextNode = document.createElement(\"div\");\n        applyStyle(messageTextNode, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgTextStyle);\n        messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;\n        entryElement.appendChild(typeElement);\n        entryElement.appendChild(messageTextNode);\n\n        /** @type {HTMLDivElement} */\n        containerElement.appendChild(entryElement);\n      });\n    }, trustedTypesPolicyName);\n  }\n  var overlayService = (0,_overlay_state_machine_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n    showOverlay: function showOverlay(_ref) {\n      var _ref$level = _ref.level,\n        level = _ref$level === void 0 ? \"error\" : _ref$level,\n        messages = _ref.messages,\n        messageSource = _ref.messageSource;\n      return show(level, messages, options.trustedTypesPolicyName, messageSource);\n    },\n    hideOverlay: hide\n  });\n  if (options.catchRuntimeError) {\n    /**\n     * @param {Error | undefined} error\n     * @param {string} fallbackMessage\n     */\n    var handleError = function handleError(error, fallbackMessage) {\n      var errorObject = error instanceof Error ? error : new Error(error || fallbackMessage);\n      var shouldDisplay = typeof options.catchRuntimeError === \"function\" ? options.catchRuntimeError(errorObject) : true;\n      if (shouldDisplay) {\n        overlayService.send({\n          type: \"RUNTIME_ERROR\",\n          messages: [{\n            message: errorObject.message,\n            stack: (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.parseErrorToStacks)(errorObject)\n          }]\n        });\n      }\n    };\n    (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.listenToRuntimeError)(function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    });\n    (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.listenToUnhandledRejection)(function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    });\n  }\n  return overlayService;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/fsm.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/fsm.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * @typedef {Object} StateDefinitions\n * @property {{[event: string]: { target: string; actions?: Array<string> }}} [on]\n */\n\n/**\n * @typedef {Object} Options\n * @property {{[state: string]: StateDefinitions}} states\n * @property {object} context;\n * @property {string} initial\n */\n\n/**\n * @typedef {Object} Implementation\n * @property {{[actionName: string]: (ctx: object, event: any) => object}} actions\n */\n\n/**\n * A simplified `createMachine` from `@xstate/fsm` with the following differences:\n *\n *  - the returned machine is technically a \"service\". No `interpret(machine).start()` is needed.\n *  - the state definition only support `on` and target must be declared with { target: 'nextState', actions: [] } explicitly.\n *  - event passed to `send` must be an object with `type` property.\n *  - actions implementation will be [assign action](https://xstate.js.org/docs/guides/context.html#assign-action) if you return any value.\n *  Do not return anything if you just want to invoke side effect.\n *\n * The goal of this custom function is to avoid installing the entire `'xstate/fsm'` package, while enabling modeling using\n * state machine. You can copy the first parameter into the editor at https://stately.ai/viz to visualize the state machine.\n *\n * @param {Options} options\n * @param {Implementation} implementation\n */\nfunction createMachine(_ref, _ref2) {\n  var states = _ref.states,\n    context = _ref.context,\n    initial = _ref.initial;\n  var actions = _ref2.actions;\n  var currentState = initial;\n  var currentContext = context;\n  return {\n    send: function send(event) {\n      var currentStateOn = states[currentState].on;\n      var transitionConfig = currentStateOn && currentStateOn[event.type];\n      if (transitionConfig) {\n        currentState = transitionConfig.target;\n        if (transitionConfig.actions) {\n          transitionConfig.actions.forEach(function (actName) {\n            var actionImpl = actions[actName];\n            var nextContextValue = actionImpl && actionImpl(currentContext, event);\n            if (nextContextValue) {\n              currentContext = _objectSpread(_objectSpread({}, currentContext), nextContextValue);\n            }\n          });\n        }\n      }\n    }\n  };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createMachine);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkvZnNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlLG1CQUFtQixnQkFBZ0IsNEJBQTRCO0FBQzlFOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGVBQWUsb0NBQW9DO0FBQ25ELGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7O0FBRUE7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSw0REFBNEQ7QUFDM0U7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0YsbUNBQW1DO0FBQ25IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy9AZWxlY3Ryb24tZm9yZ2UvcGx1Z2luLXdlYnBhY2svbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvb3ZlcmxheS9mc20uanM/ZDMzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuICAgIGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cbiAgcmV0dXJuIGtleXM7XG59XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuICAgIGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB0YXJnZXQ7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHtcbiAgdmFyIGtleSA9IF90b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gdHlwZW9mIGtleSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpO1xufVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKGlucHV0LCBoaW50KSB7XG4gIGlmICh0eXBlb2YgaW5wdXQgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDtcbiAgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKHR5cGVvZiByZXMgIT09IFwib2JqZWN0XCIpIHJldHVybiByZXM7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpO1xufVxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBTdGF0ZURlZmluaXRpb25zXG4gKiBAcHJvcGVydHkge3tbZXZlbnQ6IHN0cmluZ106IHsgdGFyZ2V0OiBzdHJpbmc7IGFjdGlvbnM/OiBBcnJheTxzdHJpbmc+IH19fSBbb25dXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBPcHRpb25zXG4gKiBAcHJvcGVydHkge3tbc3RhdGU6IHN0cmluZ106IFN0YXRlRGVmaW5pdGlvbnN9fSBzdGF0ZXNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBjb250ZXh0O1xuICogQHByb3BlcnR5IHtzdHJpbmd9IGluaXRpYWxcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IEltcGxlbWVudGF0aW9uXG4gKiBAcHJvcGVydHkge3tbYWN0aW9uTmFtZTogc3RyaW5nXTogKGN0eDogb2JqZWN0LCBldmVudDogYW55KSA9PiBvYmplY3R9fSBhY3Rpb25zXG4gKi9cblxuLyoqXG4gKiBBIHNpbXBsaWZpZWQgYGNyZWF0ZU1hY2hpbmVgIGZyb20gYEB4c3RhdGUvZnNtYCB3aXRoIHRoZSBmb2xsb3dpbmcgZGlmZmVyZW5jZXM6XG4gKlxuICogIC0gdGhlIHJldHVybmVkIG1hY2hpbmUgaXMgdGVjaG5pY2FsbHkgYSBcInNlcnZpY2VcIi4gTm8gYGludGVycHJldChtYWNoaW5lKS5zdGFydCgpYCBpcyBuZWVkZWQuXG4gKiAgLSB0aGUgc3RhdGUgZGVmaW5pdGlvbiBvbmx5IHN1cHBvcnQgYG9uYCBhbmQgdGFyZ2V0IG11c3QgYmUgZGVjbGFyZWQgd2l0aCB7IHRhcmdldDogJ25leHRTdGF0ZScsIGFjdGlvbnM6IFtdIH0gZXhwbGljaXRseS5cbiAqICAtIGV2ZW50IHBhc3NlZCB0byBgc2VuZGAgbXVzdCBiZSBhbiBvYmplY3Qgd2l0aCBgdHlwZWAgcHJvcGVydHkuXG4gKiAgLSBhY3Rpb25zIGltcGxlbWVudGF0aW9uIHdpbGwgYmUgW2Fzc2lnbiBhY3Rpb25dKGh0dHBzOi8veHN0YXRlLmpzLm9yZy9kb2NzL2d1aWRlcy9jb250ZXh0Lmh0bWwjYXNzaWduLWFjdGlvbikgaWYgeW91IHJldHVybiBhbnkgdmFsdWUuXG4gKiAgRG8gbm90IHJldHVybiBhbnl0aGluZyBpZiB5b3UganVzdCB3YW50IHRvIGludm9rZSBzaWRlIGVmZmVjdC5cbiAqXG4gKiBUaGUgZ29hbCBvZiB0aGlzIGN1c3RvbSBmdW5jdGlvbiBpcyB0byBhdm9pZCBpbnN0YWxsaW5nIHRoZSBlbnRpcmUgYCd4c3RhdGUvZnNtJ2AgcGFja2FnZSwgd2hpbGUgZW5hYmxpbmcgbW9kZWxpbmcgdXNpbmdcbiAqIHN0YXRlIG1hY2hpbmUuIFlvdSBjYW4gY29weSB0aGUgZmlyc3QgcGFyYW1ldGVyIGludG8gdGhlIGVkaXRvciBhdCBodHRwczovL3N0YXRlbHkuYWkvdml6IHRvIHZpc3VhbGl6ZSB0aGUgc3RhdGUgbWFjaGluZS5cbiAqXG4gKiBAcGFyYW0ge09wdGlvbnN9IG9wdGlvbnNcbiAqIEBwYXJhbSB7SW1wbGVtZW50YXRpb259IGltcGxlbWVudGF0aW9uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU1hY2hpbmUoX3JlZiwgX3JlZjIpIHtcbiAgdmFyIHN0YXRlcyA9IF9yZWYuc3RhdGVzLFxuICAgIGNvbnRleHQgPSBfcmVmLmNvbnRleHQsXG4gICAgaW5pdGlhbCA9IF9yZWYuaW5pdGlhbDtcbiAgdmFyIGFjdGlvbnMgPSBfcmVmMi5hY3Rpb25zO1xuICB2YXIgY3VycmVudFN0YXRlID0gaW5pdGlhbDtcbiAgdmFyIGN1cnJlbnRDb250ZXh0ID0gY29udGV4dDtcbiAgcmV0dXJuIHtcbiAgICBzZW5kOiBmdW5jdGlvbiBzZW5kKGV2ZW50KSB7XG4gICAgICB2YXIgY3VycmVudFN0YXRlT24gPSBzdGF0ZXNbY3VycmVudFN0YXRlXS5vbjtcbiAgICAgIHZhciB0cmFuc2l0aW9uQ29uZmlnID0gY3VycmVudFN0YXRlT24gJiYgY3VycmVudFN0YXRlT25bZXZlbnQudHlwZV07XG4gICAgICBpZiAodHJhbnNpdGlvbkNvbmZpZykge1xuICAgICAgICBjdXJyZW50U3RhdGUgPSB0cmFuc2l0aW9uQ29uZmlnLnRhcmdldDtcbiAgICAgICAgaWYgKHRyYW5zaXRpb25Db25maWcuYWN0aW9ucykge1xuICAgICAgICAgIHRyYW5zaXRpb25Db25maWcuYWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChhY3ROYW1lKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uSW1wbCA9IGFjdGlvbnNbYWN0TmFtZV07XG4gICAgICAgICAgICB2YXIgbmV4dENvbnRleHRWYWx1ZSA9IGFjdGlvbkltcGwgJiYgYWN0aW9uSW1wbChjdXJyZW50Q29udGV4dCwgZXZlbnQpO1xuICAgICAgICAgICAgaWYgKG5leHRDb250ZXh0VmFsdWUpIHtcbiAgICAgICAgICAgICAgY3VycmVudENvbnRleHQgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGN1cnJlbnRDb250ZXh0KSwgbmV4dENvbnRleHRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVNYWNoaW5lOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/fsm.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/runtime-error.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/runtime-error.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listenToRuntimeError: () => (/* binding */ listenToRuntimeError),\n/* harmony export */   listenToUnhandledRejection: () => (/* binding */ listenToUnhandledRejection),\n/* harmony export */   parseErrorToStacks: () => (/* binding */ parseErrorToStacks)\n/* harmony export */ });\n/**\n *\n * @param {Error} error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  }\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    });\n  }\n}\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent} error\n * @returns {void}\n */\n\n/**\n * @param {ErrorCallback} callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  };\n}\n\n/**\n * @callback UnhandledRejectionCallback\n * @param {PromiseRejectionEvent} rejectionEvent\n * @returns {void}\n */\n\n/**\n * @param {UnhandledRejectionCallback} callback\n */\nfunction listenToUnhandledRejection(callback) {\n  window.addEventListener(\"unhandledrejection\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"unhandledrejection\", callback);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkvcnVudGltZS1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjs7QUFFQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsYUFBYTtBQUNiOztBQUVBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9vdmVybGF5L3J1bnRpbWUtZXJyb3IuanM/OGU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvclxuICovXG5mdW5jdGlvbiBwYXJzZUVycm9yVG9TdGFja3MoZXJyb3IpIHtcbiAgaWYgKCFlcnJvciB8fCAhKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwicGFyc2VFcnJvclRvU3RhY2tzIGV4cGVjdHMgRXJyb3Igb2JqZWN0XCIpO1xuICB9XG4gIGlmICh0eXBlb2YgZXJyb3Iuc3RhY2sgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gZXJyb3Iuc3RhY2suc3BsaXQoXCJcXG5cIikuZmlsdGVyKGZ1bmN0aW9uIChzdGFjaykge1xuICAgICAgcmV0dXJuIHN0YWNrICE9PSBcIkVycm9yOiBcIi5jb25jYXQoZXJyb3IubWVzc2FnZSk7XG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBAY2FsbGJhY2sgRXJyb3JDYWxsYmFja1xuICogQHBhcmFtIHtFcnJvckV2ZW50fSBlcnJvclxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0Vycm9yQ2FsbGJhY2t9IGNhbGxiYWNrXG4gKi9cbmZ1bmN0aW9uIGxpc3RlblRvUnVudGltZUVycm9yKGNhbGxiYWNrKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgY2FsbGJhY2spO1xuICByZXR1cm4gZnVuY3Rpb24gY2xlYW51cCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIGNhbGxiYWNrKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBAY2FsbGJhY2sgVW5oYW5kbGVkUmVqZWN0aW9uQ2FsbGJhY2tcbiAqIEBwYXJhbSB7UHJvbWlzZVJlamVjdGlvbkV2ZW50fSByZWplY3Rpb25FdmVudFxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VuaGFuZGxlZFJlamVjdGlvbkNhbGxiYWNrfSBjYWxsYmFja1xuICovXG5mdW5jdGlvbiBsaXN0ZW5Ub1VuaGFuZGxlZFJlamVjdGlvbihjYWxsYmFjaykge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInVuaGFuZGxlZHJlamVjdGlvblwiLCBjYWxsYmFjayk7XG4gIHJldHVybiBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidW5oYW5kbGVkcmVqZWN0aW9uXCIsIGNhbGxiYWNrKTtcbiAgfTtcbn1cbmV4cG9ydCB7IGxpc3RlblRvUnVudGltZUVycm9yLCBsaXN0ZW5Ub1VuaGFuZGxlZFJlamVjdGlvbiwgcGFyc2VFcnJvclRvU3RhY2tzIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/runtime-error.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/state-machine.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/state-machine.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _fsm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fsm.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/fsm.js\");\n\n\n/**\n * @typedef {Object} ShowOverlayData\n * @property {'warning' | 'error'} level\n * @property {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n * @property {'build' | 'runtime'} messageSource\n */\n\n/**\n * @typedef {Object} CreateOverlayMachineOptions\n * @property {(data: ShowOverlayData) => void} showOverlay\n * @property {() => void} hideOverlay\n */\n\n/**\n * @param {CreateOverlayMachineOptions} options\n */\nvar createOverlayMachine = function createOverlayMachine(options) {\n  var hideOverlay = options.hideOverlay,\n    showOverlay = options.showOverlay;\n  var overlayMachine = (0,_fsm_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    initial: \"hidden\",\n    context: {\n      level: \"error\",\n      messages: [],\n      messageSource: \"build\"\n    },\n    states: {\n      hidden: {\n        on: {\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayBuildError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayRuntimeError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      dismissMessages: function dismissMessages() {\n        return {\n          messages: [],\n          level: \"error\",\n          messageSource: \"build\"\n        };\n      },\n      appendMessages: function appendMessages(context, event) {\n        return {\n          messages: context.messages.concat(event.messages),\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      setMessages: function setMessages(context, event) {\n        return {\n          messages: event.messages,\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      hideOverlay: hideOverlay,\n      showOverlay: showOverlay\n    }\n  });\n  return overlayMachine;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createOverlayMachine);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkvc3RhdGUtbWFjaGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQzs7QUFFckM7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxrQkFBa0IsZ0ZBQWdGLEdBQUc7QUFDbkgsY0FBYyxxQkFBcUI7QUFDbkM7O0FBRUE7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxpQ0FBaUM7QUFDL0MsY0FBYyxZQUFZO0FBQzFCOztBQUVBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbURBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGlFQUFlLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkvc3RhdGUtbWFjaGluZS5qcz9lZWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVNYWNoaW5lIGZyb20gXCIuL2ZzbS5qc1wiO1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFNob3dPdmVybGF5RGF0YVxuICogQHByb3BlcnR5IHsnd2FybmluZycgfCAnZXJyb3InfSBsZXZlbFxuICogQHByb3BlcnR5IHtBcnJheTxzdHJpbmcgIHwgeyBtb2R1bGVJZGVudGlmaWVyPzogc3RyaW5nLCBtb2R1bGVOYW1lPzogc3RyaW5nLCBsb2M/OiBzdHJpbmcsIG1lc3NhZ2U/OiBzdHJpbmcgfT59IG1lc3NhZ2VzXG4gKiBAcHJvcGVydHkgeydidWlsZCcgfCAncnVudGltZSd9IG1lc3NhZ2VTb3VyY2VcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IENyZWF0ZU92ZXJsYXlNYWNoaW5lT3B0aW9uc1xuICogQHByb3BlcnR5IHsoZGF0YTogU2hvd092ZXJsYXlEYXRhKSA9PiB2b2lkfSBzaG93T3ZlcmxheVxuICogQHByb3BlcnR5IHsoKSA9PiB2b2lkfSBoaWRlT3ZlcmxheVxuICovXG5cbi8qKlxuICogQHBhcmFtIHtDcmVhdGVPdmVybGF5TWFjaGluZU9wdGlvbnN9IG9wdGlvbnNcbiAqL1xudmFyIGNyZWF0ZU92ZXJsYXlNYWNoaW5lID0gZnVuY3Rpb24gY3JlYXRlT3ZlcmxheU1hY2hpbmUob3B0aW9ucykge1xuICB2YXIgaGlkZU92ZXJsYXkgPSBvcHRpb25zLmhpZGVPdmVybGF5LFxuICAgIHNob3dPdmVybGF5ID0gb3B0aW9ucy5zaG93T3ZlcmxheTtcbiAgdmFyIG92ZXJsYXlNYWNoaW5lID0gY3JlYXRlTWFjaGluZSh7XG4gICAgaW5pdGlhbDogXCJoaWRkZW5cIixcbiAgICBjb250ZXh0OiB7XG4gICAgICBsZXZlbDogXCJlcnJvclwiLFxuICAgICAgbWVzc2FnZXM6IFtdLFxuICAgICAgbWVzc2FnZVNvdXJjZTogXCJidWlsZFwiXG4gICAgfSxcbiAgICBzdGF0ZXM6IHtcbiAgICAgIGhpZGRlbjoge1xuICAgICAgICBvbjoge1xuICAgICAgICAgIEJVSUxEX0VSUk9SOiB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwiZGlzcGxheUJ1aWxkRXJyb3JcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldE1lc3NhZ2VzXCIsIFwic2hvd092ZXJsYXlcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFJVTlRJTUVfRVJST1I6IHtcbiAgICAgICAgICAgIHRhcmdldDogXCJkaXNwbGF5UnVudGltZUVycm9yXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRNZXNzYWdlc1wiLCBcInNob3dPdmVybGF5XCJdXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZGlzcGxheUJ1aWxkRXJyb3I6IHtcbiAgICAgICAgb246IHtcbiAgICAgICAgICBESVNNSVNTOiB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwiaGlkZGVuXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJkaXNtaXNzTWVzc2FnZXNcIiwgXCJoaWRlT3ZlcmxheVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgQlVJTERfRVJST1I6IHtcbiAgICAgICAgICAgIHRhcmdldDogXCJkaXNwbGF5QnVpbGRFcnJvclwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiYXBwZW5kTWVzc2FnZXNcIiwgXCJzaG93T3ZlcmxheVwiXVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRpc3BsYXlSdW50aW1lRXJyb3I6IHtcbiAgICAgICAgb246IHtcbiAgICAgICAgICBESVNNSVNTOiB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwiaGlkZGVuXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJkaXNtaXNzTWVzc2FnZXNcIiwgXCJoaWRlT3ZlcmxheVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgUlVOVElNRV9FUlJPUjoge1xuICAgICAgICAgICAgdGFyZ2V0OiBcImRpc3BsYXlSdW50aW1lRXJyb3JcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImFwcGVuZE1lc3NhZ2VzXCIsIFwic2hvd092ZXJsYXlcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIEJVSUxEX0VSUk9SOiB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwiZGlzcGxheUJ1aWxkRXJyb3JcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldE1lc3NhZ2VzXCIsIFwic2hvd092ZXJsYXlcIl1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBhY3Rpb25zOiB7XG4gICAgICBkaXNtaXNzTWVzc2FnZXM6IGZ1bmN0aW9uIGRpc21pc3NNZXNzYWdlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlczogW10sXG4gICAgICAgICAgbGV2ZWw6IFwiZXJyb3JcIixcbiAgICAgICAgICBtZXNzYWdlU291cmNlOiBcImJ1aWxkXCJcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBhcHBlbmRNZXNzYWdlczogZnVuY3Rpb24gYXBwZW5kTWVzc2FnZXMoY29udGV4dCwgZXZlbnQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlczogY29udGV4dC5tZXNzYWdlcy5jb25jYXQoZXZlbnQubWVzc2FnZXMpLFxuICAgICAgICAgIGxldmVsOiBldmVudC5sZXZlbCB8fCBjb250ZXh0LmxldmVsLFxuICAgICAgICAgIG1lc3NhZ2VTb3VyY2U6IGV2ZW50LnR5cGUgPT09IFwiUlVOVElNRV9FUlJPUlwiID8gXCJydW50aW1lXCIgOiBcImJ1aWxkXCJcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBzZXRNZXNzYWdlczogZnVuY3Rpb24gc2V0TWVzc2FnZXMoY29udGV4dCwgZXZlbnQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlczogZXZlbnQubWVzc2FnZXMsXG4gICAgICAgICAgbGV2ZWw6IGV2ZW50LmxldmVsIHx8IGNvbnRleHQubGV2ZWwsXG4gICAgICAgICAgbWVzc2FnZVNvdXJjZTogZXZlbnQudHlwZSA9PT0gXCJSVU5USU1FX0VSUk9SXCIgPyBcInJ1bnRpbWVcIiA6IFwiYnVpbGRcIlxuICAgICAgICB9O1xuICAgICAgfSxcbiAgICAgIGhpZGVPdmVybGF5OiBoaWRlT3ZlcmxheSxcbiAgICAgIHNob3dPdmVybGF5OiBzaG93T3ZlcmxheVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvdmVybGF5TWFjaGluZTtcbn07XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVPdmVybGF5TWFjaGluZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/state-machine.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/styles.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/styles.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   containerStyle: () => (/* binding */ containerStyle),\n/* harmony export */   dismissButtonStyle: () => (/* binding */ dismissButtonStyle),\n/* harmony export */   headerStyle: () => (/* binding */ headerStyle),\n/* harmony export */   iframeStyle: () => (/* binding */ iframeStyle),\n/* harmony export */   msgStyles: () => (/* binding */ msgStyles),\n/* harmony export */   msgTextStyle: () => (/* binding */ msgTextStyle),\n/* harmony export */   msgTypeStyle: () => (/* binding */ msgTypeStyle)\n/* harmony export */ });\n// styles are inspired by `react-error-overlay`\n\nvar msgStyles = {\n  error: {\n    backgroundColor: \"rgba(206, 17, 38, 0.1)\",\n    color: \"#fccfcf\"\n  },\n  warning: {\n    backgroundColor: \"rgba(251, 245, 180, 0.1)\",\n    color: \"#fbf5b4\"\n  }\n};\nvar iframeStyle = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"none\",\n  \"z-index\": 9999999999\n};\nvar containerStyle = {\n  position: \"fixed\",\n  boxSizing: \"border-box\",\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  fontSize: \"large\",\n  padding: \"2rem 2rem 4rem 2rem\",\n  lineHeight: \"1.2\",\n  whiteSpace: \"pre-wrap\",\n  overflow: \"auto\",\n  backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n  color: \"white\"\n};\nvar headerStyle = {\n  color: \"#e83b46\",\n  fontSize: \"2em\",\n  whiteSpace: \"pre-wrap\",\n  fontFamily: \"sans-serif\",\n  margin: \"0 2rem 2rem 0\",\n  flex: \"0 0 auto\",\n  maxHeight: \"50%\",\n  overflow: \"auto\"\n};\nvar dismissButtonStyle = {\n  color: \"#ffffff\",\n  lineHeight: \"1rem\",\n  fontSize: \"1.5rem\",\n  padding: \"1rem\",\n  cursor: \"pointer\",\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  backgroundColor: \"transparent\",\n  border: \"none\"\n};\nvar msgTypeStyle = {\n  color: \"#e83b46\",\n  fontSize: \"1.2em\",\n  marginBottom: \"1rem\",\n  fontFamily: \"sans-serif\"\n};\nvar msgTextStyle = {\n  lineHeight: \"1.5\",\n  fontSize: \"1rem\",\n  fontFamily: \"Menlo, Consolas, monospace\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkvc3R5bGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9vdmVybGF5L3N0eWxlcy5qcz9hZDE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlcyBhcmUgaW5zcGlyZWQgYnkgYHJlYWN0LWVycm9yLW92ZXJsYXlgXG5cbnZhciBtc2dTdHlsZXMgPSB7XG4gIGVycm9yOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjA2LCAxNywgMzgsIDAuMSlcIixcbiAgICBjb2xvcjogXCIjZmNjZmNmXCJcbiAgfSxcbiAgd2FybmluZzoge1xuICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1MSwgMjQ1LCAxODAsIDAuMSlcIixcbiAgICBjb2xvcjogXCIjZmJmNWI0XCJcbiAgfVxufTtcbnZhciBpZnJhbWVTdHlsZSA9IHtcbiAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgdG9wOiAwLFxuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgYm90dG9tOiAwLFxuICB3aWR0aDogXCIxMDB2d1wiLFxuICBoZWlnaHQ6IFwiMTAwdmhcIixcbiAgYm9yZGVyOiBcIm5vbmVcIixcbiAgXCJ6LWluZGV4XCI6IDk5OTk5OTk5OTlcbn07XG52YXIgY29udGFpbmVyU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gIGJveFNpemluZzogXCJib3JkZXItYm94XCIsXG4gIGxlZnQ6IDAsXG4gIHRvcDogMCxcbiAgcmlnaHQ6IDAsXG4gIGJvdHRvbTogMCxcbiAgd2lkdGg6IFwiMTAwdndcIixcbiAgaGVpZ2h0OiBcIjEwMHZoXCIsXG4gIGZvbnRTaXplOiBcImxhcmdlXCIsXG4gIHBhZGRpbmc6IFwiMnJlbSAycmVtIDRyZW0gMnJlbVwiLFxuICBsaW5lSGVpZ2h0OiBcIjEuMlwiLFxuICB3aGl0ZVNwYWNlOiBcInByZS13cmFwXCIsXG4gIG92ZXJmbG93OiBcImF1dG9cIixcbiAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMCwgMCwgMCwgMC45KVwiLFxuICBjb2xvcjogXCJ3aGl0ZVwiXG59O1xudmFyIGhlYWRlclN0eWxlID0ge1xuICBjb2xvcjogXCIjZTgzYjQ2XCIsXG4gIGZvbnRTaXplOiBcIjJlbVwiLFxuICB3aGl0ZVNwYWNlOiBcInByZS13cmFwXCIsXG4gIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiLFxuICBtYXJnaW46IFwiMCAycmVtIDJyZW0gMFwiLFxuICBmbGV4OiBcIjAgMCBhdXRvXCIsXG4gIG1heEhlaWdodDogXCI1MCVcIixcbiAgb3ZlcmZsb3c6IFwiYXV0b1wiXG59O1xudmFyIGRpc21pc3NCdXR0b25TdHlsZSA9IHtcbiAgY29sb3I6IFwiI2ZmZmZmZlwiLFxuICBsaW5lSGVpZ2h0OiBcIjFyZW1cIixcbiAgZm9udFNpemU6IFwiMS41cmVtXCIsXG4gIHBhZGRpbmc6IFwiMXJlbVwiLFxuICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICByaWdodDogMCxcbiAgdG9wOiAwLFxuICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgYm9yZGVyOiBcIm5vbmVcIlxufTtcbnZhciBtc2dUeXBlU3R5bGUgPSB7XG4gIGNvbG9yOiBcIiNlODNiNDZcIixcbiAgZm9udFNpemU6IFwiMS4yZW1cIixcbiAgbWFyZ2luQm90dG9tOiBcIjFyZW1cIixcbiAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbn07XG52YXIgbXNnVGV4dFN0eWxlID0ge1xuICBsaW5lSGVpZ2h0OiBcIjEuNVwiLFxuICBmb250U2l6ZTogXCIxcmVtXCIsXG4gIGZvbnRGYW1pbHk6IFwiTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2VcIlxufTtcbmV4cG9ydCB7IG1zZ1N0eWxlcywgaWZyYW1lU3R5bGUsIGNvbnRhaW5lclN0eWxlLCBoZWFkZXJTdHlsZSwgZGlzbWlzc0J1dHRvblN0eWxlLCBtc2dUeXBlU3R5bGUsIG1zZ1RleHRTdHlsZSB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/overlay/styles.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/socket.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/socket.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: () => (/* binding */ client),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clients/WebSocketClient.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js\");\n/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js\");\n/* provided dependency */ var __webpack_dev_server_client__ = __webpack_require__(/*! ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/clients/WebSocketClient.js\");\n/* global __webpack_dev_server_client__ */\n\n\n\n\n// this WebsocketClient is here as a default fallback, in case the client is not injected\n/* eslint-disable camelcase */\nvar Client =\n// eslint-disable-next-line no-nested-ternary\ntypeof __webpack_dev_server_client__ !== \"undefined\" ? typeof __webpack_dev_server_client__.default !== \"undefined\" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/* eslint-enable camelcase */\n\nvar retries = 0;\nvar maxRetries = 10;\n\n// Initialized client is exported so external consumers can utilize the same instance\n// It is mutable to enforce singleton\n// eslint-disable-next-line import/no-mutable-exports\nvar client = null;\n\n/**\n * @param {string} url\n * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n * @param {number} [reconnect]\n */\nvar socket = function initSocket(url, handlers, reconnect) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n    if (typeof reconnect !== \"undefined\") {\n      maxRetries = reconnect;\n    }\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    }\n\n    // Try to reconnect.\n    client = null;\n\n    // After 10 retries stop trying, to prevent logspam.\n    if (retries < maxRetries) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      _utils_log_js__WEBPACK_IMPORTED_MODULE_1__.log.info(\"Trying to reconnect...\");\n      setTimeout(function () {\n        socket(url, handlers, reconnect);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(\n  /**\n   * @param {any} data\n   */\n  function (data) {\n    var message = JSON.parse(data);\n    if (handlers[message.type]) {\n      handlers[message.type](message.data, message.params);\n    }\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (socket);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3NvY2tldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUUyRDtBQUN0Qjs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLDZCQUE2QiwwQkFBMEIsNkJBQTZCLDJCQUEyQiw2QkFBNkIsV0FBVyw2QkFBNkIsR0FBRyxtRUFBZTtBQUM3TTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsd0RBQXdEO0FBQ3JFLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDhDQUFHO0FBQ1Q7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsYUFBYSxLQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlFQUFlLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9zb2NrZXQuanM/ZjA2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgX193ZWJwYWNrX2Rldl9zZXJ2ZXJfY2xpZW50X18gKi9cblxuaW1wb3J0IFdlYlNvY2tldENsaWVudCBmcm9tIFwiLi9jbGllbnRzL1dlYlNvY2tldENsaWVudC5qc1wiO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSBcIi4vdXRpbHMvbG9nLmpzXCI7XG5cbi8vIHRoaXMgV2Vic29ja2V0Q2xpZW50IGlzIGhlcmUgYXMgYSBkZWZhdWx0IGZhbGxiYWNrLCBpbiBjYXNlIHRoZSBjbGllbnQgaXMgbm90IGluamVjdGVkXG4vKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbnZhciBDbGllbnQgPVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG50eXBlb2YgX193ZWJwYWNrX2Rldl9zZXJ2ZXJfY2xpZW50X18gIT09IFwidW5kZWZpbmVkXCIgPyB0eXBlb2YgX193ZWJwYWNrX2Rldl9zZXJ2ZXJfY2xpZW50X18uZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19kZXZfc2VydmVyX2NsaWVudF9fLmRlZmF1bHQgOiBfX3dlYnBhY2tfZGV2X3NlcnZlcl9jbGllbnRfXyA6IFdlYlNvY2tldENsaWVudDtcbi8qIGVzbGludC1lbmFibGUgY2FtZWxjYXNlICovXG5cbnZhciByZXRyaWVzID0gMDtcbnZhciBtYXhSZXRyaWVzID0gMTA7XG5cbi8vIEluaXRpYWxpemVkIGNsaWVudCBpcyBleHBvcnRlZCBzbyBleHRlcm5hbCBjb25zdW1lcnMgY2FuIHV0aWxpemUgdGhlIHNhbWUgaW5zdGFuY2Vcbi8vIEl0IGlzIG11dGFibGUgdG8gZW5mb3JjZSBzaW5nbGV0b25cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tbXV0YWJsZS1leHBvcnRzXG5leHBvcnQgdmFyIGNsaWVudCA9IG51bGw7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHt7IFtoYW5kbGVyOiBzdHJpbmddOiAoZGF0YT86IGFueSwgcGFyYW1zPzogYW55KSA9PiBhbnkgfX0gaGFuZGxlcnNcbiAqIEBwYXJhbSB7bnVtYmVyfSBbcmVjb25uZWN0XVxuICovXG52YXIgc29ja2V0ID0gZnVuY3Rpb24gaW5pdFNvY2tldCh1cmwsIGhhbmRsZXJzLCByZWNvbm5lY3QpIHtcbiAgY2xpZW50ID0gbmV3IENsaWVudCh1cmwpO1xuICBjbGllbnQub25PcGVuKGZ1bmN0aW9uICgpIHtcbiAgICByZXRyaWVzID0gMDtcbiAgICBpZiAodHlwZW9mIHJlY29ubmVjdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgbWF4UmV0cmllcyA9IHJlY29ubmVjdDtcbiAgICB9XG4gIH0pO1xuICBjbGllbnQub25DbG9zZShmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHJldHJpZXMgPT09IDApIHtcbiAgICAgIGhhbmRsZXJzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgLy8gVHJ5IHRvIHJlY29ubmVjdC5cbiAgICBjbGllbnQgPSBudWxsO1xuXG4gICAgLy8gQWZ0ZXIgMTAgcmV0cmllcyBzdG9wIHRyeWluZywgdG8gcHJldmVudCBsb2dzcGFtLlxuICAgIGlmIChyZXRyaWVzIDwgbWF4UmV0cmllcykge1xuICAgICAgLy8gRXhwb25lbnRpYWxseSBpbmNyZWFzZSB0aW1lb3V0IHRvIHJlY29ubmVjdC5cbiAgICAgIC8vIFJlc3BlY3RmdWxseSBjb3BpZWQgZnJvbSB0aGUgcGFja2FnZSBgZ290YC5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXByb3BlcnRpZXNcbiAgICAgIHZhciByZXRyeUluTXMgPSAxMDAwICogTWF0aC5wb3coMiwgcmV0cmllcykgKyBNYXRoLnJhbmRvbSgpICogMTAwO1xuICAgICAgcmV0cmllcyArPSAxO1xuICAgICAgbG9nLmluZm8oXCJUcnlpbmcgdG8gcmVjb25uZWN0Li4uXCIpO1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNvY2tldCh1cmwsIGhhbmRsZXJzLCByZWNvbm5lY3QpO1xuICAgICAgfSwgcmV0cnlJbk1zKTtcbiAgICB9XG4gIH0pO1xuICBjbGllbnQub25NZXNzYWdlKFxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IGRhdGFcbiAgICovXG4gIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgdmFyIG1lc3NhZ2UgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgIGlmIChoYW5kbGVyc1ttZXNzYWdlLnR5cGVdKSB7XG4gICAgICBoYW5kbGVyc1ttZXNzYWdlLnR5cGVdKG1lc3NhZ2UuZGF0YSwgbWVzc2FnZS5wYXJhbXMpO1xuICAgIH1cbiAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgc29ja2V0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/socket.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/createSocketURL.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/createSocketURL.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL\n * @returns {string}\n */\nfunction format(objURL) {\n  var protocol = objURL.protocol || \"\";\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  var auth = objURL.auth || \"\";\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, \":\");\n    auth += \"@\";\n  }\n  var host = \"\";\n  if (objURL.hostname) {\n    host = auth + (objURL.hostname.indexOf(\":\") === -1 ? objURL.hostname : \"[\".concat(objURL.hostname, \"]\"));\n    if (objURL.port) {\n      host += \":\".concat(objURL.port);\n    }\n  }\n  var pathname = objURL.pathname || \"\";\n  if (objURL.slashes) {\n    host = \"//\".concat(host || \"\");\n    if (pathname && pathname.charAt(0) !== \"/\") {\n      pathname = \"/\".concat(pathname);\n    }\n  } else if (!host) {\n    host = \"\";\n  }\n  var search = objURL.search || \"\";\n  if (search && search.charAt(0) !== \"?\") {\n    search = \"?\".concat(search);\n  }\n  var hash = objURL.hash || \"\";\n  if (hash && hash.charAt(0) !== \"#\") {\n    hash = \"#\".concat(hash);\n  }\n  pathname = pathname.replace(/[?#]/g,\n  /**\n   * @param {string} match\n   * @returns {string}\n   */\n  function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace(\"#\", \"%23\");\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n/**\n * @param {URL & { fromCurrentScript?: boolean }} parsedURL\n * @returns {string}\n */\nfunction createSocketURL(parsedURL) {\n  var hostname = parsedURL.hostname;\n\n  // Node.js module parses it as `::`\n  // `new URL(urlString, [baseURLString])` parses it as '[::]'\n  var isInAddrAny = hostname === \"0.0.0.0\" || hostname === \"::\" || hostname === \"[::]\";\n\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf(\"http\") === 0) {\n    hostname = self.location.hostname;\n  }\n  var socketURLProtocol = parsedURL.protocol || self.location.protocol;\n\n  // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.\n  if (socketURLProtocol === \"auto:\" || hostname && isInAddrAny && self.location.protocol === \"https:\") {\n    socketURLProtocol = self.location.protocol;\n  }\n  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, \"ws\");\n  var socketURLAuth = \"\";\n\n  // `new URL(urlString, [baseURLstring])` doesn't have `auth` property\n  // Parse authentication credentials in case we need them\n  if (parsedURL.username) {\n    socketURLAuth = parsedURL.username;\n\n    // Since HTTP basic authentication does not allow empty username,\n    // we only include password if the username is not empty.\n    if (parsedURL.password) {\n      // Result: <username>:<password>\n      socketURLAuth = socketURLAuth.concat(\":\", parsedURL.password);\n    }\n  }\n\n  // In case the host is a raw IPv6 address, it can be enclosed in\n  // the brackets as the brackets are needed in the final URL string.\n  // Need to remove those as url.format blindly adds its own set of brackets\n  // if the host string contains colons. That would lead to non-working\n  // double brackets (e.g. [[::]]) host\n  //\n  // All of these web socket url params are optionally passed in through resourceQuery,\n  // so we need to fall back to the default if they are not provided\n  var socketURLHostname = (hostname || self.location.hostname || \"localhost\").replace(/^\\[(.*)\\]$/, \"$1\");\n  var socketURLPort = parsedURL.port;\n  if (!socketURLPort || socketURLPort === \"0\") {\n    socketURLPort = self.location.port;\n  }\n\n  // If path is provided it'll be passed in via the resourceQuery as a\n  // query param so it has to be parsed out of the querystring in order for the\n  // client to open the socket to the correct location.\n  var socketURLPathname = \"/ws\";\n  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {\n    socketURLPathname = parsedURL.pathname;\n  }\n  return format({\n    protocol: socketURLProtocol,\n    auth: socketURLAuth,\n    hostname: socketURLHostname,\n    port: socketURLPort,\n    pathname: socketURLPathname,\n    slashes: true\n  });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createSocketURL);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL2NyZWF0ZVNvY2tldFVSTC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDRJQUE0STtBQUN6SixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRLCtCQUErQjtBQUNsRCxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlFQUFlLGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC91dGlscy9jcmVhdGVTb2NrZXRVUkwuanM/ZGU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYXJhbSB7eyBwcm90b2NvbD86IHN0cmluZywgYXV0aD86IHN0cmluZywgaG9zdG5hbWU/OiBzdHJpbmcsIHBvcnQ/OiBzdHJpbmcsIHBhdGhuYW1lPzogc3RyaW5nLCBzZWFyY2g/OiBzdHJpbmcsIGhhc2g/OiBzdHJpbmcsIHNsYXNoZXM/OiBib29sZWFuIH19IG9ialVSTFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZm9ybWF0KG9ialVSTCkge1xuICB2YXIgcHJvdG9jb2wgPSBvYmpVUkwucHJvdG9jb2wgfHwgXCJcIjtcbiAgaWYgKHByb3RvY29sICYmIHByb3RvY29sLnN1YnN0cigtMSkgIT09IFwiOlwiKSB7XG4gICAgcHJvdG9jb2wgKz0gXCI6XCI7XG4gIH1cbiAgdmFyIGF1dGggPSBvYmpVUkwuYXV0aCB8fCBcIlwiO1xuICBpZiAoYXV0aCkge1xuICAgIGF1dGggPSBlbmNvZGVVUklDb21wb25lbnQoYXV0aCk7XG4gICAgYXV0aCA9IGF1dGgucmVwbGFjZSgvJTNBL2ksIFwiOlwiKTtcbiAgICBhdXRoICs9IFwiQFwiO1xuICB9XG4gIHZhciBob3N0ID0gXCJcIjtcbiAgaWYgKG9ialVSTC5ob3N0bmFtZSkge1xuICAgIGhvc3QgPSBhdXRoICsgKG9ialVSTC5ob3N0bmFtZS5pbmRleE9mKFwiOlwiKSA9PT0gLTEgPyBvYmpVUkwuaG9zdG5hbWUgOiBcIltcIi5jb25jYXQob2JqVVJMLmhvc3RuYW1lLCBcIl1cIikpO1xuICAgIGlmIChvYmpVUkwucG9ydCkge1xuICAgICAgaG9zdCArPSBcIjpcIi5jb25jYXQob2JqVVJMLnBvcnQpO1xuICAgIH1cbiAgfVxuICB2YXIgcGF0aG5hbWUgPSBvYmpVUkwucGF0aG5hbWUgfHwgXCJcIjtcbiAgaWYgKG9ialVSTC5zbGFzaGVzKSB7XG4gICAgaG9zdCA9IFwiLy9cIi5jb25jYXQoaG9zdCB8fCBcIlwiKTtcbiAgICBpZiAocGF0aG5hbWUgJiYgcGF0aG5hbWUuY2hhckF0KDApICE9PSBcIi9cIikge1xuICAgICAgcGF0aG5hbWUgPSBcIi9cIi5jb25jYXQocGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIGlmICghaG9zdCkge1xuICAgIGhvc3QgPSBcIlwiO1xuICB9XG4gIHZhciBzZWFyY2ggPSBvYmpVUkwuc2VhcmNoIHx8IFwiXCI7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoLmNoYXJBdCgwKSAhPT0gXCI/XCIpIHtcbiAgICBzZWFyY2ggPSBcIj9cIi5jb25jYXQoc2VhcmNoKTtcbiAgfVxuICB2YXIgaGFzaCA9IG9ialVSTC5oYXNoIHx8IFwiXCI7XG4gIGlmIChoYXNoICYmIGhhc2guY2hhckF0KDApICE9PSBcIiNcIikge1xuICAgIGhhc2ggPSBcIiNcIi5jb25jYXQoaGFzaCk7XG4gIH1cbiAgcGF0aG5hbWUgPSBwYXRobmFtZS5yZXBsYWNlKC9bPyNdL2csXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWF0Y2hcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQobWF0Y2gpO1xuICB9KTtcbiAgc2VhcmNoID0gc2VhcmNoLnJlcGxhY2UoXCIjXCIsIFwiJTIzXCIpO1xuICByZXR1cm4gXCJcIi5jb25jYXQocHJvdG9jb2wpLmNvbmNhdChob3N0KS5jb25jYXQocGF0aG5hbWUpLmNvbmNhdChzZWFyY2gpLmNvbmNhdChoYXNoKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VSTCAmIHsgZnJvbUN1cnJlbnRTY3JpcHQ/OiBib29sZWFuIH19IHBhcnNlZFVSTFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gY3JlYXRlU29ja2V0VVJMKHBhcnNlZFVSTCkge1xuICB2YXIgaG9zdG5hbWUgPSBwYXJzZWRVUkwuaG9zdG5hbWU7XG5cbiAgLy8gTm9kZS5qcyBtb2R1bGUgcGFyc2VzIGl0IGFzIGA6OmBcbiAgLy8gYG5ldyBVUkwodXJsU3RyaW5nLCBbYmFzZVVSTFN0cmluZ10pYCBwYXJzZXMgaXQgYXMgJ1s6Ol0nXG4gIHZhciBpc0luQWRkckFueSA9IGhvc3RuYW1lID09PSBcIjAuMC4wLjBcIiB8fCBob3N0bmFtZSA9PT0gXCI6OlwiIHx8IGhvc3RuYW1lID09PSBcIls6Ol1cIjtcblxuICAvLyB3aHkgZG8gd2UgbmVlZCB0aGlzIGNoZWNrP1xuICAvLyBob3N0bmFtZSBuL2EgZm9yIGZpbGUgcHJvdG9jb2wgKGV4YW1wbGUsIHdoZW4gdXNpbmcgZWxlY3Ryb24sIGlvbmljKVxuICAvLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrL3dlYnBhY2stZGV2LXNlcnZlci9wdWxsLzM4NFxuICBpZiAoaXNJbkFkZHJBbnkgJiYgc2VsZi5sb2NhdGlvbi5ob3N0bmFtZSAmJiBzZWxmLmxvY2F0aW9uLnByb3RvY29sLmluZGV4T2YoXCJodHRwXCIpID09PSAwKSB7XG4gICAgaG9zdG5hbWUgPSBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lO1xuICB9XG4gIHZhciBzb2NrZXRVUkxQcm90b2NvbCA9IHBhcnNlZFVSTC5wcm90b2NvbCB8fCBzZWxmLmxvY2F0aW9uLnByb3RvY29sO1xuXG4gIC8vIFdoZW4gaHR0cHMgaXMgdXNlZCBpbiB0aGUgYXBwLCBzZWN1cmUgd2ViIHNvY2tldHMgYXJlIGFsd2F5cyBuZWNlc3NhcnkgYmVjYXVzZSB0aGUgYnJvd3NlciBkb2Vzbid0IGFjY2VwdCBub24tc2VjdXJlIHdlYiBzb2NrZXRzLlxuICBpZiAoc29ja2V0VVJMUHJvdG9jb2wgPT09IFwiYXV0bzpcIiB8fCBob3N0bmFtZSAmJiBpc0luQWRkckFueSAmJiBzZWxmLmxvY2F0aW9uLnByb3RvY29sID09PSBcImh0dHBzOlwiKSB7XG4gICAgc29ja2V0VVJMUHJvdG9jb2wgPSBzZWxmLmxvY2F0aW9uLnByb3RvY29sO1xuICB9XG4gIHNvY2tldFVSTFByb3RvY29sID0gc29ja2V0VVJMUHJvdG9jb2wucmVwbGFjZSgvXig/Omh0dHB8ListZXh0ZW5zaW9ufGZpbGUpL2ksIFwid3NcIik7XG4gIHZhciBzb2NrZXRVUkxBdXRoID0gXCJcIjtcblxuICAvLyBgbmV3IFVSTCh1cmxTdHJpbmcsIFtiYXNlVVJMc3RyaW5nXSlgIGRvZXNuJ3QgaGF2ZSBgYXV0aGAgcHJvcGVydHlcbiAgLy8gUGFyc2UgYXV0aGVudGljYXRpb24gY3JlZGVudGlhbHMgaW4gY2FzZSB3ZSBuZWVkIHRoZW1cbiAgaWYgKHBhcnNlZFVSTC51c2VybmFtZSkge1xuICAgIHNvY2tldFVSTEF1dGggPSBwYXJzZWRVUkwudXNlcm5hbWU7XG5cbiAgICAvLyBTaW5jZSBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uIGRvZXMgbm90IGFsbG93IGVtcHR5IHVzZXJuYW1lLFxuICAgIC8vIHdlIG9ubHkgaW5jbHVkZSBwYXNzd29yZCBpZiB0aGUgdXNlcm5hbWUgaXMgbm90IGVtcHR5LlxuICAgIGlmIChwYXJzZWRVUkwucGFzc3dvcmQpIHtcbiAgICAgIC8vIFJlc3VsdDogPHVzZXJuYW1lPjo8cGFzc3dvcmQ+XG4gICAgICBzb2NrZXRVUkxBdXRoID0gc29ja2V0VVJMQXV0aC5jb25jYXQoXCI6XCIsIHBhcnNlZFVSTC5wYXNzd29yZCk7XG4gICAgfVxuICB9XG5cbiAgLy8gSW4gY2FzZSB0aGUgaG9zdCBpcyBhIHJhdyBJUHY2IGFkZHJlc3MsIGl0IGNhbiBiZSBlbmNsb3NlZCBpblxuICAvLyB0aGUgYnJhY2tldHMgYXMgdGhlIGJyYWNrZXRzIGFyZSBuZWVkZWQgaW4gdGhlIGZpbmFsIFVSTCBzdHJpbmcuXG4gIC8vIE5lZWQgdG8gcmVtb3ZlIHRob3NlIGFzIHVybC5mb3JtYXQgYmxpbmRseSBhZGRzIGl0cyBvd24gc2V0IG9mIGJyYWNrZXRzXG4gIC8vIGlmIHRoZSBob3N0IHN0cmluZyBjb250YWlucyBjb2xvbnMuIFRoYXQgd291bGQgbGVhZCB0byBub24td29ya2luZ1xuICAvLyBkb3VibGUgYnJhY2tldHMgKGUuZy4gW1s6Ol1dKSBob3N0XG4gIC8vXG4gIC8vIEFsbCBvZiB0aGVzZSB3ZWIgc29ja2V0IHVybCBwYXJhbXMgYXJlIG9wdGlvbmFsbHkgcGFzc2VkIGluIHRocm91Z2ggcmVzb3VyY2VRdWVyeSxcbiAgLy8gc28gd2UgbmVlZCB0byBmYWxsIGJhY2sgdG8gdGhlIGRlZmF1bHQgaWYgdGhleSBhcmUgbm90IHByb3ZpZGVkXG4gIHZhciBzb2NrZXRVUkxIb3N0bmFtZSA9IChob3N0bmFtZSB8fCBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lIHx8IFwibG9jYWxob3N0XCIpLnJlcGxhY2UoL15cXFsoLiopXFxdJC8sIFwiJDFcIik7XG4gIHZhciBzb2NrZXRVUkxQb3J0ID0gcGFyc2VkVVJMLnBvcnQ7XG4gIGlmICghc29ja2V0VVJMUG9ydCB8fCBzb2NrZXRVUkxQb3J0ID09PSBcIjBcIikge1xuICAgIHNvY2tldFVSTFBvcnQgPSBzZWxmLmxvY2F0aW9uLnBvcnQ7XG4gIH1cblxuICAvLyBJZiBwYXRoIGlzIHByb3ZpZGVkIGl0J2xsIGJlIHBhc3NlZCBpbiB2aWEgdGhlIHJlc291cmNlUXVlcnkgYXMgYVxuICAvLyBxdWVyeSBwYXJhbSBzbyBpdCBoYXMgdG8gYmUgcGFyc2VkIG91dCBvZiB0aGUgcXVlcnlzdHJpbmcgaW4gb3JkZXIgZm9yIHRoZVxuICAvLyBjbGllbnQgdG8gb3BlbiB0aGUgc29ja2V0IHRvIHRoZSBjb3JyZWN0IGxvY2F0aW9uLlxuICB2YXIgc29ja2V0VVJMUGF0aG5hbWUgPSBcIi93c1wiO1xuICBpZiAocGFyc2VkVVJMLnBhdGhuYW1lICYmICFwYXJzZWRVUkwuZnJvbUN1cnJlbnRTY3JpcHQpIHtcbiAgICBzb2NrZXRVUkxQYXRobmFtZSA9IHBhcnNlZFVSTC5wYXRobmFtZTtcbiAgfVxuICByZXR1cm4gZm9ybWF0KHtcbiAgICBwcm90b2NvbDogc29ja2V0VVJMUHJvdG9jb2wsXG4gICAgYXV0aDogc29ja2V0VVJMQXV0aCxcbiAgICBob3N0bmFtZTogc29ja2V0VVJMSG9zdG5hbWUsXG4gICAgcG9ydDogc29ja2V0VVJMUG9ydCxcbiAgICBwYXRobmFtZTogc29ja2V0VVJMUGF0aG5hbWUsXG4gICAgc2xhc2hlczogdHJ1ZVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVNvY2tldFVSTDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/createSocketURL.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute(\"src\");\n  }\n\n  // Fallback to getting all scripts running in the document.\n  var scriptElements = document.scripts || [];\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\n    return element.getAttribute(\"src\");\n  });\n  if (scriptElementsWithSrc.length > 0) {\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\n    return currentScript.getAttribute(\"src\");\n  }\n\n  // Fail as there was no script to use.\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getCurrentScriptSource);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL2dldEN1cnJlbnRTY3JpcHRTb3VyY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL2dldEN1cnJlbnRTY3JpcHRTb3VyY2UuanM/MWI0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldEN1cnJlbnRTY3JpcHRTb3VyY2UoKSB7XG4gIC8vIGBkb2N1bWVudC5jdXJyZW50U2NyaXB0YCBpcyB0aGUgbW9zdCBhY2N1cmF0ZSB3YXkgdG8gZmluZCB0aGUgY3VycmVudCBzY3JpcHQsXG4gIC8vIGJ1dCBpcyBub3Qgc3VwcG9ydGVkIGluIGFsbCBicm93c2Vycy5cbiAgaWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XG4gIH1cblxuICAvLyBGYWxsYmFjayB0byBnZXR0aW5nIGFsbCBzY3JpcHRzIHJ1bm5pbmcgaW4gdGhlIGRvY3VtZW50LlxuICB2YXIgc2NyaXB0RWxlbWVudHMgPSBkb2N1bWVudC5zY3JpcHRzIHx8IFtdO1xuICB2YXIgc2NyaXB0RWxlbWVudHNXaXRoU3JjID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKHNjcmlwdEVsZW1lbnRzLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShcInNyY1wiKTtcbiAgfSk7XG4gIGlmIChzY3JpcHRFbGVtZW50c1dpdGhTcmMubGVuZ3RoID4gMCkge1xuICAgIHZhciBjdXJyZW50U2NyaXB0ID0gc2NyaXB0RWxlbWVudHNXaXRoU3JjW3NjcmlwdEVsZW1lbnRzV2l0aFNyYy5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gY3VycmVudFNjcmlwdC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XG4gIH1cblxuICAvLyBGYWlsIGFzIHRoZXJlIHdhcyBubyBzY3JpcHQgdG8gdXNlLlxuICB0aHJvdyBuZXcgRXJyb3IoXCJbd2VicGFjay1kZXYtc2VydmVyXSBGYWlsZWQgdG8gZ2V0IGN1cnJlbnQgc2NyaXB0IHNvdXJjZS5cIik7XG59XG5leHBvcnQgZGVmYXVsdCBnZXRDdXJyZW50U2NyaXB0U291cmNlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   logEnabledFeatures: () => (/* binding */ logEnabledFeatures),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/logger/index.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/modules/logger/index.js\");\n/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__);\n\nvar name = \"webpack-dev-server\";\n// default level is set on the client side, so it does not need\n// to be set by the CLI or API\nvar defaultLevel = \"info\";\n\n// options new options, merge with old options\n/**\n * @param {false | true | \"none\" | \"error\" | \"warn\" | \"info\" | \"log\" | \"verbose\"} level\n * @returns {void}\n */\nfunction setLogLevel(level) {\n  _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().configureDefaultLogger({\n    level: level\n  });\n}\nsetLogLevel(defaultLevel);\nvar log = _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().getLogger(name);\nvar logEnabledFeatures = function logEnabledFeatures(features) {\n  var enabledFeatures = Object.keys(features);\n  if (!features || enabledFeatures.length === 0) {\n    return;\n  }\n  var logString = \"Server started:\";\n\n  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.\n  for (var i = 0; i < enabledFeatures.length; i++) {\n    var key = enabledFeatures[i];\n    logString += \" \".concat(key, \" \").concat(features[key] ? \"enabled\" : \"disabled\", \",\");\n  }\n  // replace last comma with a period\n  logString = logString.slice(0, -1).concat(\".\");\n  log.info(logString);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyx1RUFBdUU7QUFDbEYsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLHNGQUE2QjtBQUMvQjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsVUFBVSx5RUFBZ0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLDRCQUE0QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL2xvZy5qcz9kY2EyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSBcIi4uL21vZHVsZXMvbG9nZ2VyL2luZGV4LmpzXCI7XG52YXIgbmFtZSA9IFwid2VicGFjay1kZXYtc2VydmVyXCI7XG4vLyBkZWZhdWx0IGxldmVsIGlzIHNldCBvbiB0aGUgY2xpZW50IHNpZGUsIHNvIGl0IGRvZXMgbm90IG5lZWRcbi8vIHRvIGJlIHNldCBieSB0aGUgQ0xJIG9yIEFQSVxudmFyIGRlZmF1bHRMZXZlbCA9IFwiaW5mb1wiO1xuXG4vLyBvcHRpb25zIG5ldyBvcHRpb25zLCBtZXJnZSB3aXRoIG9sZCBvcHRpb25zXG4vKipcbiAqIEBwYXJhbSB7ZmFsc2UgfCB0cnVlIHwgXCJub25lXCIgfCBcImVycm9yXCIgfCBcIndhcm5cIiB8IFwiaW5mb1wiIHwgXCJsb2dcIiB8IFwidmVyYm9zZVwifSBsZXZlbFxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHNldExvZ0xldmVsKGxldmVsKSB7XG4gIGxvZ2dlci5jb25maWd1cmVEZWZhdWx0TG9nZ2VyKHtcbiAgICBsZXZlbDogbGV2ZWxcbiAgfSk7XG59XG5zZXRMb2dMZXZlbChkZWZhdWx0TGV2ZWwpO1xudmFyIGxvZyA9IGxvZ2dlci5nZXRMb2dnZXIobmFtZSk7XG52YXIgbG9nRW5hYmxlZEZlYXR1cmVzID0gZnVuY3Rpb24gbG9nRW5hYmxlZEZlYXR1cmVzKGZlYXR1cmVzKSB7XG4gIHZhciBlbmFibGVkRmVhdHVyZXMgPSBPYmplY3Qua2V5cyhmZWF0dXJlcyk7XG4gIGlmICghZmVhdHVyZXMgfHwgZW5hYmxlZEZlYXR1cmVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbG9nU3RyaW5nID0gXCJTZXJ2ZXIgc3RhcnRlZDpcIjtcblxuICAvLyBTZXJ2ZXIgc3RhcnRlZDogSG90IE1vZHVsZSBSZXBsYWNlbWVudCBlbmFibGVkLCBMaXZlIFJlbG9hZGluZyBlbmFibGVkLCBPdmVybGF5IGRpc2FibGVkLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGVuYWJsZWRGZWF0dXJlcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBlbmFibGVkRmVhdHVyZXNbaV07XG4gICAgbG9nU3RyaW5nICs9IFwiIFwiLmNvbmNhdChrZXksIFwiIFwiKS5jb25jYXQoZmVhdHVyZXNba2V5XSA/IFwiZW5hYmxlZFwiIDogXCJkaXNhYmxlZFwiLCBcIixcIik7XG4gIH1cbiAgLy8gcmVwbGFjZSBsYXN0IGNvbW1hIHdpdGggYSBwZXJpb2RcbiAgbG9nU3RyaW5nID0gbG9nU3RyaW5nLnNsaWNlKDAsIC0xKS5jb25jYXQoXCIuXCIpO1xuICBsb2cuaW5mbyhsb2dTdHJpbmcpO1xufTtcbmV4cG9ydCB7IGxvZywgbG9nRW5hYmxlZEZlYXR1cmVzLCBzZXRMb2dMZXZlbCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/parseURL.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/parseURL.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCurrentScriptSource.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js\");\n\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = (0,_getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseURL);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL3BhcnNlVVJMLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFOztBQUVqRTtBQUNBLFdBQVcsUUFBUTtBQUNuQixlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWUseUJBQXlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5QkFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsdUJBQXVCLHNFQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy9AZWxlY3Ryb24tZm9yZ2UvcGx1Z2luLXdlYnBhY2svbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvdXRpbHMvcGFyc2VVUkwuanM/ZmUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0Q3VycmVudFNjcmlwdFNvdXJjZSBmcm9tIFwiLi9nZXRDdXJyZW50U2NyaXB0U291cmNlLmpzXCI7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHJlc291cmNlUXVlcnlcbiAqIEByZXR1cm5zIHt7IFtrZXk6IHN0cmluZ106IHN0cmluZyB8IGJvb2xlYW4gfX1cbiAqL1xuZnVuY3Rpb24gcGFyc2VVUkwocmVzb3VyY2VRdWVyeSkge1xuICAvKiogQHR5cGUge3sgW2tleTogc3RyaW5nXTogc3RyaW5nIH19ICovXG4gIHZhciBvcHRpb25zID0ge307XG4gIGlmICh0eXBlb2YgcmVzb3VyY2VRdWVyeSA9PT0gXCJzdHJpbmdcIiAmJiByZXNvdXJjZVF1ZXJ5ICE9PSBcIlwiKSB7XG4gICAgdmFyIHNlYXJjaFBhcmFtcyA9IHJlc291cmNlUXVlcnkuc2xpY2UoMSkuc3BsaXQoXCImXCIpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VhcmNoUGFyYW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcGFpciA9IHNlYXJjaFBhcmFtc1tpXS5zcGxpdChcIj1cIik7XG4gICAgICBvcHRpb25zW3BhaXJbMF1dID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMV0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBFbHNlLCBnZXQgdGhlIHVybCBmcm9tIHRoZSA8c2NyaXB0PiB0aGlzIGZpbGUgd2FzIGNhbGxlZCB3aXRoLlxuICAgIHZhciBzY3JpcHRTb3VyY2UgPSBnZXRDdXJyZW50U2NyaXB0U291cmNlKCk7XG4gICAgdmFyIHNjcmlwdFNvdXJjZVVSTDtcbiAgICB0cnkge1xuICAgICAgLy8gVGhlIHBsYWNlaG9sZGVyIGBiYXNlVVJMYCB3aXRoIGB3aW5kb3cubG9jYXRpb24uaHJlZmAsXG4gICAgICAvLyBpcyB0byBhbGxvdyBwYXJzaW5nIG9mIHBhdGgtcmVsYXRpdmUgb3IgcHJvdG9jb2wtcmVsYXRpdmUgVVJMcyxcbiAgICAgIC8vIGFuZCB3aWxsIGhhdmUgbm8gZWZmZWN0IGlmIGBzY3JpcHRTb3VyY2VgIGlzIGEgZnVsbHkgdmFsaWQgVVJMLlxuICAgICAgc2NyaXB0U291cmNlVVJMID0gbmV3IFVSTChzY3JpcHRTb3VyY2UsIHNlbGYubG9jYXRpb24uaHJlZik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIC8vIFVSTCBwYXJzaW5nIGZhaWxlZCwgZG8gbm90aGluZy5cbiAgICAgIC8vIFdlIHdpbGwgc3RpbGwgcHJvY2VlZCB0byBzZWUgaWYgd2UgY2FuIHJlY292ZXIgdXNpbmcgYHJlc291cmNlUXVlcnlgXG4gICAgfVxuICAgIGlmIChzY3JpcHRTb3VyY2VVUkwpIHtcbiAgICAgIG9wdGlvbnMgPSBzY3JpcHRTb3VyY2VVUkw7XG4gICAgICBvcHRpb25zLmZyb21DdXJyZW50U2NyaXB0ID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5leHBvcnQgZGVmYXVsdCBwYXJzZVVSTDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/parseURL.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/reloadApp.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/reloadApp.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/emitter.js */ \"./node_modules/webpack/hot/emitter.js\");\n/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log.js */ \"./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/log.js\");\n\n\n\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n    liveReload = _ref.liveReload;\n  if (status.isUnloading) {\n    return;\n  }\n  var currentHash = status.currentHash,\n    previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf(/** @type {string} */previousHash) >= 0;\n  if (isInitial) {\n    return;\n  }\n\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n  if (hot && allowToHot) {\n    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info(\"App hot update...\");\n    webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default().emit(\"webpackHotUpdate\", status.currentHash);\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  }\n  // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self;\n\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (reloadApp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL3JlbG9hZEFwcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ2pCOztBQUUvQixjQUFjLDRCQUE0QjtBQUMxQyxjQUFjLDJCQUEyQjs7QUFFekM7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxRQUFRO0FBQ3pEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsSUFBSSx3Q0FBRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0NBQUc7QUFDUCxJQUFJLGtFQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGlFQUFlLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC91dGlscy9yZWxvYWRBcHAuanM/MTA4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaG90RW1pdHRlciBmcm9tIFwid2VicGFjay9ob3QvZW1pdHRlci5qc1wiO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSBcIi4vbG9nLmpzXCI7XG5cbi8qKiBAdHlwZWRlZiB7aW1wb3J0KFwiLi4vaW5kZXhcIikuT3B0aW9uc30gT3B0aW9uc1xuLyoqIEB0eXBlZGVmIHtpbXBvcnQoXCIuLi9pbmRleFwiKS5TdGF0dXN9IFN0YXR1c1xuXG4vKipcbiAqIEBwYXJhbSB7T3B0aW9uc30gb3B0aW9uc1xuICogQHBhcmFtIHtTdGF0dXN9IHN0YXR1c1xuICovXG5mdW5jdGlvbiByZWxvYWRBcHAoX3JlZiwgc3RhdHVzKSB7XG4gIHZhciBob3QgPSBfcmVmLmhvdCxcbiAgICBsaXZlUmVsb2FkID0gX3JlZi5saXZlUmVsb2FkO1xuICBpZiAoc3RhdHVzLmlzVW5sb2FkaW5nKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBjdXJyZW50SGFzaCA9IHN0YXR1cy5jdXJyZW50SGFzaCxcbiAgICBwcmV2aW91c0hhc2ggPSBzdGF0dXMucHJldmlvdXNIYXNoO1xuICB2YXIgaXNJbml0aWFsID0gY3VycmVudEhhc2guaW5kZXhPZigvKiogQHR5cGUge3N0cmluZ30gKi9wcmV2aW91c0hhc2gpID49IDA7XG4gIGlmIChpc0luaXRpYWwpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtXaW5kb3d9IHJvb3RXaW5kb3dcbiAgICogQHBhcmFtIHtudW1iZXJ9IGludGVydmFsSWRcbiAgICovXG4gIGZ1bmN0aW9uIGFwcGx5UmVsb2FkKHJvb3RXaW5kb3csIGludGVydmFsSWQpIHtcbiAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgIGxvZy5pbmZvKFwiQXBwIHVwZGF0ZWQuIFJlbG9hZGluZy4uLlwiKTtcbiAgICByb290V2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICB9XG4gIHZhciBzZWFyY2ggPSBzZWxmLmxvY2F0aW9uLnNlYXJjaC50b0xvd2VyQ2FzZSgpO1xuICB2YXIgYWxsb3dUb0hvdCA9IHNlYXJjaC5pbmRleE9mKFwid2VicGFjay1kZXYtc2VydmVyLWhvdD1mYWxzZVwiKSA9PT0gLTE7XG4gIHZhciBhbGxvd1RvTGl2ZVJlbG9hZCA9IHNlYXJjaC5pbmRleE9mKFwid2VicGFjay1kZXYtc2VydmVyLWxpdmUtcmVsb2FkPWZhbHNlXCIpID09PSAtMTtcbiAgaWYgKGhvdCAmJiBhbGxvd1RvSG90KSB7XG4gICAgbG9nLmluZm8oXCJBcHAgaG90IHVwZGF0ZS4uLlwiKTtcbiAgICBob3RFbWl0dGVyLmVtaXQoXCJ3ZWJwYWNrSG90VXBkYXRlXCIsIHN0YXR1cy5jdXJyZW50SGFzaCk7XG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYud2luZG93KSB7XG4gICAgICAvLyBicm9hZGNhc3QgdXBkYXRlIHRvIHdpbmRvd1xuICAgICAgc2VsZi5wb3N0TWVzc2FnZShcIndlYnBhY2tIb3RVcGRhdGVcIi5jb25jYXQoc3RhdHVzLmN1cnJlbnRIYXNoKSwgXCIqXCIpO1xuICAgIH1cbiAgfVxuICAvLyBhbGxvdyByZWZyZXNoaW5nIHRoZSBwYWdlIG9ubHkgaWYgbGl2ZVJlbG9hZCBpc24ndCBkaXNhYmxlZFxuICBlbHNlIGlmIChsaXZlUmVsb2FkICYmIGFsbG93VG9MaXZlUmVsb2FkKSB7XG4gICAgdmFyIHJvb3RXaW5kb3cgPSBzZWxmO1xuXG4gICAgLy8gdXNlIHBhcmVudCB3aW5kb3cgZm9yIHJlbG9hZCAoaW4gY2FzZSB3ZSdyZSBpbiBhbiBpZnJhbWUgd2l0aCBubyB2YWxpZCBzcmMpXG4gICAgdmFyIGludGVydmFsSWQgPSBzZWxmLnNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChyb290V2luZG93LmxvY2F0aW9uLnByb3RvY29sICE9PSBcImFib3V0OlwiKSB7XG4gICAgICAgIC8vIHJlbG9hZCBpbW1lZGlhdGVseSBpZiBwcm90b2NvbCBpcyB2YWxpZFxuICAgICAgICBhcHBseVJlbG9hZChyb290V2luZG93LCBpbnRlcnZhbElkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb3RXaW5kb3cgPSByb290V2luZG93LnBhcmVudDtcbiAgICAgICAgaWYgKHJvb3RXaW5kb3cucGFyZW50ID09PSByb290V2luZG93KSB7XG4gICAgICAgICAgLy8gaWYgcGFyZW50IGVxdWFscyBjdXJyZW50IHdpbmRvdyB3ZSd2ZSByZWFjaGVkIHRoZSByb290IHdoaWNoIHdvdWxkIGNvbnRpbnVlIGZvcmV2ZXIsIHNvIHRyaWdnZXIgYSByZWxvYWQgYW55d2F5c1xuICAgICAgICAgIGFwcGx5UmVsb2FkKHJvb3RXaW5kb3csIGludGVydmFsSWQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IHJlbG9hZEFwcDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/reloadApp.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/sendMessage.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/sendMessage.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* global __resourceQuery WorkerGlobalScope */\n\n// Send messages to the outside, so plugins can consume it.\n/**\n * @param {string} type\n * @param {any} [data]\n */\nfunction sendMsg(type, data) {\n  if (typeof self !== \"undefined\" && (typeof WorkerGlobalScope === \"undefined\" || !(self instanceof WorkerGlobalScope))) {\n    self.postMessage({\n      type: \"webpack\".concat(type),\n      data: data\n    }, \"*\");\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sendMsg);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL3NlbmRNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsS0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGlFQUFlLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjay9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC91dGlscy9zZW5kTWVzc2FnZS5qcz9hMjBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBfX3Jlc291cmNlUXVlcnkgV29ya2VyR2xvYmFsU2NvcGUgKi9cblxuLy8gU2VuZCBtZXNzYWdlcyB0byB0aGUgb3V0c2lkZSwgc28gcGx1Z2lucyBjYW4gY29uc3VtZSBpdC5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7YW55fSBbZGF0YV1cbiAqL1xuZnVuY3Rpb24gc2VuZE1zZyh0eXBlLCBkYXRhKSB7XG4gIGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiAodHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlID09PSBcInVuZGVmaW5lZFwiIHx8ICEoc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlKSkpIHtcbiAgICBzZWxmLnBvc3RNZXNzYWdlKHtcbiAgICAgIHR5cGU6IFwid2VicGFja1wiLmNvbmNhdCh0eXBlKSxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9LCBcIipcIik7XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IHNlbmRNc2c7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/sendMessage.js\n");

/***/ }),

/***/ "./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/stripAnsi.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/stripAnsi.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar ansiRegex = new RegExp([\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\"].join(\"|\"), \"g\");\n\n/**\n *\n * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.\n * Adapted from code originally released by Sindre Sorhus\n * Licensed the MIT License\n *\n * @param {string} string\n * @return {string}\n */\nfunction stripAnsi(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a `string`, got `\".concat(typeof string, \"`\"));\n  }\n  return string.replace(ansiRegex, \"\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stripAnsi);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVsZWN0cm9uLWZvcmdlL3BsdWdpbi13ZWJwYWNrL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L3V0aWxzL3N0cmlwQW5zaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0RBQXNELGdCQUFnQiw2Q0FBNkMsb0RBQW9ELElBQUksSUFBSSxJQUFJLElBQUk7O0FBRXZMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy9AZWxlY3Ryb24tZm9yZ2UvcGx1Z2luLXdlYnBhY2svbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvdXRpbHMvc3RyaXBBbnNpLmpzPzUzOWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFuc2lSZWdleCA9IG5ldyBSZWdFeHAoW1wiW1xcXFx1MDAxQlxcXFx1MDA5Ql1bW1xcXFxdKCkjOz9dKig/Oig/Oig/Oig/OjtbLWEtekEtWlxcXFxkXFxcXC8jJi46PT8lQH5fXSspKnxbYS16QS1aXFxcXGRdKyg/OjtbLWEtekEtWlxcXFxkXFxcXC8jJi46PT8lQH5fXSopKik/XFxcXHUwMDA3KVwiLCBcIig/Oig/OlxcXFxkezEsNH0oPzo7XFxcXGR7MCw0fSkqKT9bXFxcXGRBLVBSLVRaY2YtbnEtdXk9Pjx+XSkpXCJdLmpvaW4oXCJ8XCIpLCBcImdcIik7XG5cbi8qKlxuICpcbiAqIFN0cmlwIFtBTlNJIGVzY2FwZSBjb2Rlc10oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQU5TSV9lc2NhcGVfY29kZSkgZnJvbSBhIHN0cmluZy5cbiAqIEFkYXB0ZWQgZnJvbSBjb2RlIG9yaWdpbmFsbHkgcmVsZWFzZWQgYnkgU2luZHJlIFNvcmh1c1xuICogTGljZW5zZWQgdGhlIE1JVCBMaWNlbnNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBzdHJpcEFuc2koc3RyaW5nKSB7XG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGEgYHN0cmluZ2AsIGdvdCBgXCIuY29uY2F0KHR5cGVvZiBzdHJpbmcsIFwiYFwiKSk7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGFuc2lSZWdleCwgXCJcIik7XG59XG5leHBvcnQgZGVmYXVsdCBzdHJpcEFuc2k7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/utils/stripAnsi.js\n");

/***/ }),

/***/ "./node_modules/ansi-html-community/index.js":
/*!***************************************************!*\
  !*** ./node_modules/ansi-html-community/index.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = ansiHTML;\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/;\nvar _defColors = {\n  reset: ['fff', '000'],\n  // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n};\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n};\nvar _openTags = {\n  '1': 'font-weight:bold',\n  // bold\n  '2': 'opacity:0.5',\n  // dim\n  '3': '<i>',\n  // italic\n  '4': '<u>',\n  // underscore\n  '8': 'display:none',\n  // hidden\n  '9': '<del>' // delete\n};\nvar _closeTags = {\n  '23': '</i>',\n  // reset italic\n  '24': '</u>',\n  // reset underscore\n  '29': '</del>' // reset delete\n};\n[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>';\n});\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML(text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text;\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = [];\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)m/g, function (match, seq) {\n    var ot = _openTags[seq];\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) {\n        // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop();\n        return '</span>';\n      }\n      // Open tag.\n      ansiCodes.push(seq);\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">';\n    }\n    var ct = _closeTags[seq];\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop();\n      return ct;\n    }\n    return '';\n  });\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length;\n  l > 0 && (ret += Array(l + 1).join('</span>'));\n  return ret;\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.');\n  }\n  var _finalColors = {};\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null;\n    if (!hex) {\n      _finalColors[key] = _defColors[key];\n      continue;\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex];\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string';\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');\n      }\n      var defHexColor = _defColors[key];\n      if (!hex[0]) {\n        hex[0] = defHexColor[0];\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]];\n        hex.push(defHexColor[1]);\n      }\n      hex = hex.slice(0, 2);\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');\n    }\n    _finalColors[key] = hex;\n  }\n  _setTags(_finalColors);\n};\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors);\n};\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {};\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () {\n      return _openTags;\n    }\n  });\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () {\n      return _closeTags;\n    }\n  });\n} else {\n  ansiHTML.tags.open = _openTags;\n  ansiHTML.tags.close = _closeTags;\n}\nfunction _setTags(colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey;\n  for (var code in _styles) {\n    var color = _styles[code];\n    var oriColor = colors[color] || '000';\n    _openTags[code] = 'color:#' + oriColor;\n    code = parseInt(code);\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor;\n  }\n}\nansiHTML.reset();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1odG1sLWNvbW11bml0eS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQTtBQUNBLG1EQUFtRCxJQUFJLFNBQVMsTUFBTSxJQUFJO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxVQUFVLCtCQUErQjtBQUNoRjtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy9hbnNpLWh0bWwtY29tbXVuaXR5L2luZGV4LmpzP2M0MjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFuc2lIVE1MO1xuXG4vLyBSZWZlcmVuY2UgdG8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9hbnNpLXJlZ2V4XG52YXIgX3JlZ0FOU0kgPSAvKD86KD86XFx1MDAxYlxcWyl8XFx1MDA5YikoPzooPzpbMC05XXsxLDN9KT8oPzooPzo7WzAtOV17MCwzfSkqKT9bQS1NfGYtbV0pfFxcdTAwMWJbQS1NXS87XG52YXIgX2RlZkNvbG9ycyA9IHtcbiAgcmVzZXQ6IFsnZmZmJywgJzAwMCddLFxuICAvLyBbRk9SRUdST1VEX0NPTE9SLCBCQUNLR1JPVU5EX0NPTE9SXVxuICBibGFjazogJzAwMCcsXG4gIHJlZDogJ2ZmMDAwMCcsXG4gIGdyZWVuOiAnMjA5ODA1JyxcbiAgeWVsbG93OiAnZThiZjAzJyxcbiAgYmx1ZTogJzAwMDBmZicsXG4gIG1hZ2VudGE6ICdmZjAwZmYnLFxuICBjeWFuOiAnMDBmZmVlJyxcbiAgbGlnaHRncmV5OiAnZjBmMGYwJyxcbiAgZGFya2dyZXk6ICc4ODgnXG59O1xudmFyIF9zdHlsZXMgPSB7XG4gIDMwOiAnYmxhY2snLFxuICAzMTogJ3JlZCcsXG4gIDMyOiAnZ3JlZW4nLFxuICAzMzogJ3llbGxvdycsXG4gIDM0OiAnYmx1ZScsXG4gIDM1OiAnbWFnZW50YScsXG4gIDM2OiAnY3lhbicsXG4gIDM3OiAnbGlnaHRncmV5J1xufTtcbnZhciBfb3BlblRhZ3MgPSB7XG4gICcxJzogJ2ZvbnQtd2VpZ2h0OmJvbGQnLFxuICAvLyBib2xkXG4gICcyJzogJ29wYWNpdHk6MC41JyxcbiAgLy8gZGltXG4gICczJzogJzxpPicsXG4gIC8vIGl0YWxpY1xuICAnNCc6ICc8dT4nLFxuICAvLyB1bmRlcnNjb3JlXG4gICc4JzogJ2Rpc3BsYXk6bm9uZScsXG4gIC8vIGhpZGRlblxuICAnOSc6ICc8ZGVsPicgLy8gZGVsZXRlXG59O1xudmFyIF9jbG9zZVRhZ3MgPSB7XG4gICcyMyc6ICc8L2k+JyxcbiAgLy8gcmVzZXQgaXRhbGljXG4gICcyNCc6ICc8L3U+JyxcbiAgLy8gcmVzZXQgdW5kZXJzY29yZVxuICAnMjknOiAnPC9kZWw+JyAvLyByZXNldCBkZWxldGVcbn07XG5bMCwgMjEsIDIyLCAyNywgMjgsIDM5LCA0OV0uZm9yRWFjaChmdW5jdGlvbiAobikge1xuICBfY2xvc2VUYWdzW25dID0gJzwvc3Bhbj4nO1xufSk7XG5cbi8qKlxuICogQ29udmVydHMgdGV4dCB3aXRoIEFOU0kgY29sb3IgY29kZXMgdG8gSFRNTCBtYXJrdXAuXG4gKiBAcGFyYW0ge1N0cmluZ30gdGV4dFxuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGFuc2lIVE1MKHRleHQpIHtcbiAgLy8gUmV0dXJucyB0aGUgdGV4dCBpZiB0aGUgc3RyaW5nIGhhcyBubyBBTlNJIGVzY2FwZSBjb2RlLlxuICBpZiAoIV9yZWdBTlNJLnRlc3QodGV4dCkpIHtcbiAgICByZXR1cm4gdGV4dDtcbiAgfVxuXG4gIC8vIENhY2hlIG9wZW5lZCBzZXF1ZW5jZS5cbiAgdmFyIGFuc2lDb2RlcyA9IFtdO1xuICAvLyBSZXBsYWNlIHdpdGggbWFya3VwLlxuICB2YXIgcmV0ID0gdGV4dC5yZXBsYWNlKC9cXDAzM1xcWyhcXGQrKW0vZywgZnVuY3Rpb24gKG1hdGNoLCBzZXEpIHtcbiAgICB2YXIgb3QgPSBfb3BlblRhZ3Nbc2VxXTtcbiAgICBpZiAob3QpIHtcbiAgICAgIC8vIElmIGN1cnJlbnQgc2VxdWVuY2UgaGFzIGJlZW4gb3BlbmVkLCBjbG9zZSBpdC5cbiAgICAgIGlmICghIX5hbnNpQ29kZXMuaW5kZXhPZihzZXEpKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZXh0cmEtYm9vbGVhbi1jYXN0XG4gICAgICAgIGFuc2lDb2Rlcy5wb3AoKTtcbiAgICAgICAgcmV0dXJuICc8L3NwYW4+JztcbiAgICAgIH1cbiAgICAgIC8vIE9wZW4gdGFnLlxuICAgICAgYW5zaUNvZGVzLnB1c2goc2VxKTtcbiAgICAgIHJldHVybiBvdFswXSA9PT0gJzwnID8gb3QgOiAnPHNwYW4gc3R5bGU9XCInICsgb3QgKyAnO1wiPic7XG4gICAgfVxuICAgIHZhciBjdCA9IF9jbG9zZVRhZ3Nbc2VxXTtcbiAgICBpZiAoY3QpIHtcbiAgICAgIC8vIFBvcCBzZXF1ZW5jZVxuICAgICAgYW5zaUNvZGVzLnBvcCgpO1xuICAgICAgcmV0dXJuIGN0O1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH0pO1xuXG4gIC8vIE1ha2Ugc3VyZSB0YWdzIGFyZSBjbG9zZWQuXG4gIHZhciBsID0gYW5zaUNvZGVzLmxlbmd0aDtcbiAgbCA+IDAgJiYgKHJldCArPSBBcnJheShsICsgMSkuam9pbignPC9zcGFuPicpKTtcbiAgcmV0dXJuIHJldDtcbn1cblxuLyoqXG4gKiBDdXN0b21pemUgY29sb3JzLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbG9ycyByZWZlcmVuY2UgdG8gX2RlZkNvbG9yc1xuICovXG5hbnNpSFRNTC5zZXRDb2xvcnMgPSBmdW5jdGlvbiAoY29sb3JzKSB7XG4gIGlmICh0eXBlb2YgY29sb3JzICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBFcnJvcignYGNvbG9yc2AgcGFyYW1ldGVyIG11c3QgYmUgYW4gT2JqZWN0LicpO1xuICB9XG4gIHZhciBfZmluYWxDb2xvcnMgPSB7fTtcbiAgZm9yICh2YXIga2V5IGluIF9kZWZDb2xvcnMpIHtcbiAgICB2YXIgaGV4ID0gY29sb3JzLmhhc093blByb3BlcnR5KGtleSkgPyBjb2xvcnNba2V5XSA6IG51bGw7XG4gICAgaWYgKCFoZXgpIHtcbiAgICAgIF9maW5hbENvbG9yc1trZXldID0gX2RlZkNvbG9yc1trZXldO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmICgncmVzZXQnID09PSBrZXkpIHtcbiAgICAgIGlmICh0eXBlb2YgaGV4ID09PSAnc3RyaW5nJykge1xuICAgICAgICBoZXggPSBbaGV4XTtcbiAgICAgIH1cbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShoZXgpIHx8IGhleC5sZW5ndGggPT09IDAgfHwgaGV4LnNvbWUoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBoICE9PSAnc3RyaW5nJztcbiAgICAgIH0pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHZhbHVlIG9mIGAnICsga2V5ICsgJ2AgcHJvcGVydHkgbXVzdCBiZSBhbiBBcnJheSBhbmQgZWFjaCBpdGVtIGNvdWxkIG9ubHkgYmUgYSBoZXggc3RyaW5nLCBlLmcuOiBGRjAwMDAnKTtcbiAgICAgIH1cbiAgICAgIHZhciBkZWZIZXhDb2xvciA9IF9kZWZDb2xvcnNba2V5XTtcbiAgICAgIGlmICghaGV4WzBdKSB7XG4gICAgICAgIGhleFswXSA9IGRlZkhleENvbG9yWzBdO1xuICAgICAgfVxuICAgICAgaWYgKGhleC5sZW5ndGggPT09IDEgfHwgIWhleFsxXSkge1xuICAgICAgICBoZXggPSBbaGV4WzBdXTtcbiAgICAgICAgaGV4LnB1c2goZGVmSGV4Q29sb3JbMV0pO1xuICAgICAgfVxuICAgICAgaGV4ID0gaGV4LnNsaWNlKDAsIDIpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGhleCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHZhbHVlIG9mIGAnICsga2V5ICsgJ2AgcHJvcGVydHkgbXVzdCBiZSBhIGhleCBzdHJpbmcsIGUuZy46IEZGMDAwMCcpO1xuICAgIH1cbiAgICBfZmluYWxDb2xvcnNba2V5XSA9IGhleDtcbiAgfVxuICBfc2V0VGFncyhfZmluYWxDb2xvcnMpO1xufTtcblxuLyoqXG4gKiBSZXNldCBjb2xvcnMuXG4gKi9cbmFuc2lIVE1MLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICBfc2V0VGFncyhfZGVmQ29sb3JzKTtcbn07XG5cbi8qKlxuICogRXhwb3NlIHRhZ3MsIGluY2x1ZGluZyBvcGVuIGFuZCBjbG9zZS5cbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbmFuc2lIVE1MLnRhZ3MgPSB7fTtcbmlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGFuc2lIVE1MLnRhZ3MsICdvcGVuJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF9vcGVuVGFncztcbiAgICB9XG4gIH0pO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYW5zaUhUTUwudGFncywgJ2Nsb3NlJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF9jbG9zZVRhZ3M7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIGFuc2lIVE1MLnRhZ3Mub3BlbiA9IF9vcGVuVGFncztcbiAgYW5zaUhUTUwudGFncy5jbG9zZSA9IF9jbG9zZVRhZ3M7XG59XG5mdW5jdGlvbiBfc2V0VGFncyhjb2xvcnMpIHtcbiAgLy8gcmVzZXQgYWxsXG4gIF9vcGVuVGFnc1snMCddID0gJ2ZvbnQtd2VpZ2h0Om5vcm1hbDtvcGFjaXR5OjE7Y29sb3I6IycgKyBjb2xvcnMucmVzZXRbMF0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMV07XG4gIC8vIGludmVyc2VcbiAgX29wZW5UYWdzWyc3J10gPSAnY29sb3I6IycgKyBjb2xvcnMucmVzZXRbMV0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMF07XG4gIC8vIGRhcmsgZ3JleVxuICBfb3BlblRhZ3NbJzkwJ10gPSAnY29sb3I6IycgKyBjb2xvcnMuZGFya2dyZXk7XG4gIGZvciAodmFyIGNvZGUgaW4gX3N0eWxlcykge1xuICAgIHZhciBjb2xvciA9IF9zdHlsZXNbY29kZV07XG4gICAgdmFyIG9yaUNvbG9yID0gY29sb3JzW2NvbG9yXSB8fCAnMDAwJztcbiAgICBfb3BlblRhZ3NbY29kZV0gPSAnY29sb3I6IycgKyBvcmlDb2xvcjtcbiAgICBjb2RlID0gcGFyc2VJbnQoY29kZSk7XG4gICAgX29wZW5UYWdzWyhjb2RlICsgMTApLnRvU3RyaW5nKCldID0gJ2JhY2tncm91bmQ6IycgKyBvcmlDb2xvcjtcbiAgfVxufVxuYW5zaUhUTUwucmVzZXQoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ansi-html-community/index.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/html-entities/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar named_references_1 = __webpack_require__(/*! ./named-references */ \"./node_modules/html-entities/lib/named-references.js\");\nvar numeric_unicode_map_1 = __webpack_require__(/*! ./numeric-unicode-map */ \"./node_modules/html-entities/lib/numeric-unicode-map.js\");\nvar surrogate_pairs_1 = __webpack_require__(/*! ./surrogate-pairs */ \"./node_modules/html-entities/lib/surrogate-pairs.js\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {\n  all: named_references_1.namedReferences.html5\n});\nfunction replaceUsingRegExp(macroText, macroRegExp, macroReplacer) {\n  macroRegExp.lastIndex = 0;\n  var replaceMatch = macroRegExp.exec(macroText);\n  var replaceResult;\n  if (replaceMatch) {\n    replaceResult = \"\";\n    var replaceLastIndex = 0;\n    do {\n      if (replaceLastIndex !== replaceMatch.index) {\n        replaceResult += macroText.substring(replaceLastIndex, replaceMatch.index);\n      }\n      var replaceInput = replaceMatch[0];\n      replaceResult += macroReplacer(replaceInput);\n      replaceLastIndex = replaceMatch.index + replaceInput.length;\n    } while (replaceMatch = macroRegExp.exec(macroText));\n    if (replaceLastIndex !== macroText.length) {\n      replaceResult += macroText.substring(replaceLastIndex);\n    }\n  } else {\n    replaceResult = macroText;\n  }\n  return replaceResult;\n}\nvar encodeRegExps = {\n  specialChars: /[<>'\"&]/g,\n  nonAscii: /[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n  nonAsciiPrintable: /[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n  nonAsciiPrintableOnly: /[\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n  extensive: /[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g\n};\nvar defaultEncodeOptions = {\n  mode: \"specialChars\",\n  level: \"all\",\n  numeric: \"decimal\"\n};\nfunction encode(text, _a) {\n  var _b = _a === void 0 ? defaultEncodeOptions : _a,\n    _c = _b.mode,\n    mode = _c === void 0 ? \"specialChars\" : _c,\n    _d = _b.numeric,\n    numeric = _d === void 0 ? \"decimal\" : _d,\n    _e = _b.level,\n    level = _e === void 0 ? \"all\" : _e;\n  if (!text) {\n    return \"\";\n  }\n  var encodeRegExp = encodeRegExps[mode];\n  var references = allNamedReferences[level].characters;\n  var isHex = numeric === \"hexadecimal\";\n  return replaceUsingRegExp(text, encodeRegExp, function (input) {\n    var result = references[input];\n    if (!result) {\n      var code = input.length > 1 ? surrogate_pairs_1.getCodePoint(input, 0) : input.charCodeAt(0);\n      result = (isHex ? \"&#x\" + code.toString(16) : \"&#\" + code) + \";\";\n    }\n    return result;\n  });\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n  scope: \"body\",\n  level: \"all\"\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n  xml: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.xml\n  },\n  html4: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.html4\n  },\n  html5: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.html5\n  }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {\n  all: baseDecodeRegExps.html5\n});\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n  level: \"all\"\n};\nfunction getDecodedEntity(entity, references, isAttribute, isStrict) {\n  var decodeResult = entity;\n  var decodeEntityLastChar = entity[entity.length - 1];\n  if (isAttribute && decodeEntityLastChar === \"=\") {\n    decodeResult = entity;\n  } else if (isStrict && decodeEntityLastChar !== \";\") {\n    decodeResult = entity;\n  } else {\n    var decodeResultByReference = references[entity];\n    if (decodeResultByReference) {\n      decodeResult = decodeResultByReference;\n    } else if (entity[0] === \"&\" && entity[1] === \"#\") {\n      var decodeSecondChar = entity[2];\n      var decodeCode = decodeSecondChar == \"x\" || decodeSecondChar == \"X\" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));\n      decodeResult = decodeCode >= 1114111 ? outOfBoundsChar : decodeCode > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode] || decodeCode);\n    }\n  }\n  return decodeResult;\n}\nfunction decodeEntity(entity, _a) {\n  var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level,\n    level = _b === void 0 ? \"all\" : _b;\n  if (!entity) {\n    return \"\";\n  }\n  return getDecodedEntity(entity, allNamedReferences[level].entities, false, false);\n}\nexports.decodeEntity = decodeEntity;\nfunction decode(text, _a) {\n  var _b = _a === void 0 ? defaultDecodeOptions : _a,\n    _c = _b.level,\n    level = _c === void 0 ? \"all\" : _c,\n    _d = _b.scope,\n    scope = _d === void 0 ? level === \"xml\" ? \"strict\" : \"body\" : _d;\n  if (!text) {\n    return \"\";\n  }\n  var decodeRegExp = decodeRegExps[level][scope];\n  var references = allNamedReferences[level].entities;\n  var isAttribute = scope === \"attribute\";\n  var isStrict = scope === \"strict\";\n  return replaceUsingRegExp(text, decodeRegExp, function (entity) {\n    return getDecodedEntity(entity, references, isAttribute, isStrict);\n  });\n}\nexports.decode = decode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/index.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/named-references.js":
/*!************************************************************!*\
  !*** ./node_modules/html-entities/lib/named-references.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.bodyRegExps = {\n  xml: /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,\n  html4: /&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,\n  html5: /&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g\n};\nexports.namedReferences = {\n  xml: {\n    entities: {\n      \"&lt;\": \"<\",\n      \"&gt;\": \">\",\n      \"&quot;\": '\"',\n      \"&apos;\": \"'\",\n      \"&amp;\": \"&\"\n    },\n    characters: {\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': \"&quot;\",\n      \"'\": \"&apos;\",\n      \"&\": \"&amp;\"\n    }\n  },\n  html4: {\n    entities: {\n      \"&apos;\": \"'\",\n      \"&nbsp\": \" \",\n      \"&nbsp;\": \" \",\n      \"&iexcl\": \"¡\",\n      \"&iexcl;\": \"¡\",\n      \"&cent\": \"¢\",\n      \"&cent;\": \"¢\",\n      \"&pound\": \"£\",\n      \"&pound;\": \"£\",\n      \"&curren\": \"¤\",\n      \"&curren;\": \"¤\",\n      \"&yen\": \"¥\",\n      \"&yen;\": \"¥\",\n      \"&brvbar\": \"¦\",\n      \"&brvbar;\": \"¦\",\n      \"&sect\": \"§\",\n      \"&sect;\": \"§\",\n      \"&uml\": \"¨\",\n      \"&uml;\": \"¨\",\n      \"&copy\": \"©\",\n      \"&copy;\": \"©\",\n      \"&ordf\": \"ª\",\n      \"&ordf;\": \"ª\",\n      \"&laquo\": \"«\",\n      \"&laquo;\": \"«\",\n      \"&not\": \"¬\",\n      \"&not;\": \"¬\",\n      \"&shy\": \"­\",\n      \"&shy;\": \"­\",\n      \"&reg\": \"®\",\n      \"&reg;\": \"®\",\n      \"&macr\": \"¯\",\n      \"&macr;\": \"¯\",\n      \"&deg\": \"°\",\n      \"&deg;\": \"°\",\n      \"&plusmn\": \"±\",\n      \"&plusmn;\": \"±\",\n      \"&sup2\": \"²\",\n      \"&sup2;\": \"²\",\n      \"&sup3\": \"³\",\n      \"&sup3;\": \"³\",\n      \"&acute\": \"´\",\n      \"&acute;\": \"´\",\n      \"&micro\": \"µ\",\n      \"&micro;\": \"µ\",\n      \"&para\": \"¶\",\n      \"&para;\": \"¶\",\n      \"&middot\": \"·\",\n      \"&middot;\": \"·\",\n      \"&cedil\": \"¸\",\n      \"&cedil;\": \"¸\",\n      \"&sup1\": \"¹\",\n      \"&sup1;\": \"¹\",\n      \"&ordm\": \"º\",\n      \"&ordm;\": \"º\",\n      \"&raquo\": \"»\",\n      \"&raquo;\": \"»\",\n      \"&frac14\": \"¼\",\n      \"&frac14;\": \"¼\",\n      \"&frac12\": \"½\",\n      \"&frac12;\": \"½\",\n      \"&frac34\": \"¾\",\n      \"&frac34;\": \"¾\",\n      \"&iquest\": \"¿\",\n      \"&iquest;\": \"¿\",\n      \"&Agrave\": \"À\",\n      \"&Agrave;\": \"À\",\n      \"&Aacute\": \"Á\",\n      \"&Aacute;\": \"Á\",\n      \"&Acirc\": \"Â\",\n      \"&Acirc;\": \"Â\",\n      \"&Atilde\": \"Ã\",\n      \"&Atilde;\": \"Ã\",\n      \"&Auml\": \"Ä\",\n      \"&Auml;\": \"Ä\",\n      \"&Aring\": \"Å\",\n      \"&Aring;\": \"Å\",\n      \"&AElig\": \"Æ\",\n      \"&AElig;\": \"Æ\",\n      \"&Ccedil\": \"Ç\",\n      \"&Ccedil;\": \"Ç\",\n      \"&Egrave\": \"È\",\n      \"&Egrave;\": \"È\",\n      \"&Eacute\": \"É\",\n      \"&Eacute;\": \"É\",\n      \"&Ecirc\": \"Ê\",\n      \"&Ecirc;\": \"Ê\",\n      \"&Euml\": \"Ë\",\n      \"&Euml;\": \"Ë\",\n      \"&Igrave\": \"Ì\",\n      \"&Igrave;\": \"Ì\",\n      \"&Iacute\": \"Í\",\n      \"&Iacute;\": \"Í\",\n      \"&Icirc\": \"Î\",\n      \"&Icirc;\": \"Î\",\n      \"&Iuml\": \"Ï\",\n      \"&Iuml;\": \"Ï\",\n      \"&ETH\": \"Ð\",\n      \"&ETH;\": \"Ð\",\n      \"&Ntilde\": \"Ñ\",\n      \"&Ntilde;\": \"Ñ\",\n      \"&Ograve\": \"Ò\",\n      \"&Ograve;\": \"Ò\",\n      \"&Oacute\": \"Ó\",\n      \"&Oacute;\": \"Ó\",\n      \"&Ocirc\": \"Ô\",\n      \"&Ocirc;\": \"Ô\",\n      \"&Otilde\": \"Õ\",\n      \"&Otilde;\": \"Õ\",\n      \"&Ouml\": \"Ö\",\n      \"&Ouml;\": \"Ö\",\n      \"&times\": \"×\",\n      \"&times;\": \"×\",\n      \"&Oslash\": \"Ø\",\n      \"&Oslash;\": \"Ø\",\n      \"&Ugrave\": \"Ù\",\n      \"&Ugrave;\": \"Ù\",\n      \"&Uacute\": \"Ú\",\n      \"&Uacute;\": \"Ú\",\n      \"&Ucirc\": \"Û\",\n      \"&Ucirc;\": \"Û\",\n      \"&Uuml\": \"Ü\",\n      \"&Uuml;\": \"Ü\",\n      \"&Yacute\": \"Ý\",\n      \"&Yacute;\": \"Ý\",\n      \"&THORN\": \"Þ\",\n      \"&THORN;\": \"Þ\",\n      \"&szlig\": \"ß\",\n      \"&szlig;\": \"ß\",\n      \"&agrave\": \"à\",\n      \"&agrave;\": \"à\",\n      \"&aacute\": \"á\",\n      \"&aacute;\": \"á\",\n      \"&acirc\": \"â\",\n      \"&acirc;\": \"â\",\n      \"&atilde\": \"ã\",\n      \"&atilde;\": \"ã\",\n      \"&auml\": \"ä\",\n      \"&auml;\": \"ä\",\n      \"&aring\": \"å\",\n      \"&aring;\": \"å\",\n      \"&aelig\": \"æ\",\n      \"&aelig;\": \"æ\",\n      \"&ccedil\": \"ç\",\n      \"&ccedil;\": \"ç\",\n      \"&egrave\": \"è\",\n      \"&egrave;\": \"è\",\n      \"&eacute\": \"é\",\n      \"&eacute;\": \"é\",\n      \"&ecirc\": \"ê\",\n      \"&ecirc;\": \"ê\",\n      \"&euml\": \"ë\",\n      \"&euml;\": \"ë\",\n      \"&igrave\": \"ì\",\n      \"&igrave;\": \"ì\",\n      \"&iacute\": \"í\",\n      \"&iacute;\": \"í\",\n      \"&icirc\": \"î\",\n      \"&icirc;\": \"î\",\n      \"&iuml\": \"ï\",\n      \"&iuml;\": \"ï\",\n      \"&eth\": \"ð\",\n      \"&eth;\": \"ð\",\n      \"&ntilde\": \"ñ\",\n      \"&ntilde;\": \"ñ\",\n      \"&ograve\": \"ò\",\n      \"&ograve;\": \"ò\",\n      \"&oacute\": \"ó\",\n      \"&oacute;\": \"ó\",\n      \"&ocirc\": \"ô\",\n      \"&ocirc;\": \"ô\",\n      \"&otilde\": \"õ\",\n      \"&otilde;\": \"õ\",\n      \"&ouml\": \"ö\",\n      \"&ouml;\": \"ö\",\n      \"&divide\": \"÷\",\n      \"&divide;\": \"÷\",\n      \"&oslash\": \"ø\",\n      \"&oslash;\": \"ø\",\n      \"&ugrave\": \"ù\",\n      \"&ugrave;\": \"ù\",\n      \"&uacute\": \"ú\",\n      \"&uacute;\": \"ú\",\n      \"&ucirc\": \"û\",\n      \"&ucirc;\": \"û\",\n      \"&uuml\": \"ü\",\n      \"&uuml;\": \"ü\",\n      \"&yacute\": \"ý\",\n      \"&yacute;\": \"ý\",\n      \"&thorn\": \"þ\",\n      \"&thorn;\": \"þ\",\n      \"&yuml\": \"ÿ\",\n      \"&yuml;\": \"ÿ\",\n      \"&quot\": '\"',\n      \"&quot;\": '\"',\n      \"&amp\": \"&\",\n      \"&amp;\": \"&\",\n      \"&lt\": \"<\",\n      \"&lt;\": \"<\",\n      \"&gt\": \">\",\n      \"&gt;\": \">\",\n      \"&OElig;\": \"Œ\",\n      \"&oelig;\": \"œ\",\n      \"&Scaron;\": \"Š\",\n      \"&scaron;\": \"š\",\n      \"&Yuml;\": \"Ÿ\",\n      \"&circ;\": \"ˆ\",\n      \"&tilde;\": \"˜\",\n      \"&ensp;\": \" \",\n      \"&emsp;\": \" \",\n      \"&thinsp;\": \" \",\n      \"&zwnj;\": \"‌\",\n      \"&zwj;\": \"‍\",\n      \"&lrm;\": \"‎\",\n      \"&rlm;\": \"‏\",\n      \"&ndash;\": \"–\",\n      \"&mdash;\": \"—\",\n      \"&lsquo;\": \"‘\",\n      \"&rsquo;\": \"’\",\n      \"&sbquo;\": \"‚\",\n      \"&ldquo;\": \"“\",\n      \"&rdquo;\": \"”\",\n      \"&bdquo;\": \"„\",\n      \"&dagger;\": \"†\",\n      \"&Dagger;\": \"‡\",\n      \"&permil;\": \"‰\",\n      \"&lsaquo;\": \"‹\",\n      \"&rsaquo;\": \"›\",\n      \"&euro;\": \"€\",\n      \"&fnof;\": \"ƒ\",\n      \"&Alpha;\": \"Α\",\n      \"&Beta;\": \"Β\",\n      \"&Gamma;\": \"Γ\",\n      \"&Delta;\": \"Δ\",\n      \"&Epsilon;\": \"Ε\",\n      \"&Zeta;\": \"Ζ\",\n      \"&Eta;\": \"Η\",\n      \"&Theta;\": \"Θ\",\n      \"&Iota;\": \"Ι\",\n      \"&Kappa;\": \"Κ\",\n      \"&Lambda;\": \"Λ\",\n      \"&Mu;\": \"Μ\",\n      \"&Nu;\": \"Ν\",\n      \"&Xi;\": \"Ξ\",\n      \"&Omicron;\": \"Ο\",\n      \"&Pi;\": \"Π\",\n      \"&Rho;\": \"Ρ\",\n      \"&Sigma;\": \"Σ\",\n      \"&Tau;\": \"Τ\",\n      \"&Upsilon;\": \"Υ\",\n      \"&Phi;\": \"Φ\",\n      \"&Chi;\": \"Χ\",\n      \"&Psi;\": \"Ψ\",\n      \"&Omega;\": \"Ω\",\n      \"&alpha;\": \"α\",\n      \"&beta;\": \"β\",\n      \"&gamma;\": \"γ\",\n      \"&delta;\": \"δ\",\n      \"&epsilon;\": \"ε\",\n      \"&zeta;\": \"ζ\",\n      \"&eta;\": \"η\",\n      \"&theta;\": \"θ\",\n      \"&iota;\": \"ι\",\n      \"&kappa;\": \"κ\",\n      \"&lambda;\": \"λ\",\n      \"&mu;\": \"μ\",\n      \"&nu;\": \"ν\",\n      \"&xi;\": \"ξ\",\n      \"&omicron;\": \"ο\",\n      \"&pi;\": \"π\",\n      \"&rho;\": \"ρ\",\n      \"&sigmaf;\": \"ς\",\n      \"&sigma;\": \"σ\",\n      \"&tau;\": \"τ\",\n      \"&upsilon;\": \"υ\",\n      \"&phi;\": \"φ\",\n      \"&chi;\": \"χ\",\n      \"&psi;\": \"ψ\",\n      \"&omega;\": \"ω\",\n      \"&thetasym;\": \"ϑ\",\n      \"&upsih;\": \"ϒ\",\n      \"&piv;\": \"ϖ\",\n      \"&bull;\": \"•\",\n      \"&hellip;\": \"…\",\n      \"&prime;\": \"′\",\n      \"&Prime;\": \"″\",\n      \"&oline;\": \"‾\",\n      \"&frasl;\": \"⁄\",\n      \"&weierp;\": \"℘\",\n      \"&image;\": \"ℑ\",\n      \"&real;\": \"ℜ\",\n      \"&trade;\": \"™\",\n      \"&alefsym;\": \"ℵ\",\n      \"&larr;\": \"←\",\n      \"&uarr;\": \"↑\",\n      \"&rarr;\": \"→\",\n      \"&darr;\": \"↓\",\n      \"&harr;\": \"↔\",\n      \"&crarr;\": \"↵\",\n      \"&lArr;\": \"⇐\",\n      \"&uArr;\": \"⇑\",\n      \"&rArr;\": \"⇒\",\n      \"&dArr;\": \"⇓\",\n      \"&hArr;\": \"⇔\",\n      \"&forall;\": \"∀\",\n      \"&part;\": \"∂\",\n      \"&exist;\": \"∃\",\n      \"&empty;\": \"∅\",\n      \"&nabla;\": \"∇\",\n      \"&isin;\": \"∈\",\n      \"&notin;\": \"∉\",\n      \"&ni;\": \"∋\",\n      \"&prod;\": \"∏\",\n      \"&sum;\": \"∑\",\n      \"&minus;\": \"−\",\n      \"&lowast;\": \"∗\",\n      \"&radic;\": \"√\",\n      \"&prop;\": \"∝\",\n      \"&infin;\": \"∞\",\n      \"&ang;\": \"∠\",\n      \"&and;\": \"∧\",\n      \"&or;\": \"∨\",\n      \"&cap;\": \"∩\",\n      \"&cup;\": \"∪\",\n      \"&int;\": \"∫\",\n      \"&there4;\": \"∴\",\n      \"&sim;\": \"∼\",\n      \"&cong;\": \"≅\",\n      \"&asymp;\": \"≈\",\n      \"&ne;\": \"≠\",\n      \"&equiv;\": \"≡\",\n      \"&le;\": \"≤\",\n      \"&ge;\": \"≥\",\n      \"&sub;\": \"⊂\",\n      \"&sup;\": \"⊃\",\n      \"&nsub;\": \"⊄\",\n      \"&sube;\": \"⊆\",\n      \"&supe;\": \"⊇\",\n      \"&oplus;\": \"⊕\",\n      \"&otimes;\": \"⊗\",\n      \"&perp;\": \"⊥\",\n      \"&sdot;\": \"⋅\",\n      \"&lceil;\": \"⌈\",\n      \"&rceil;\": \"⌉\",\n      \"&lfloor;\": \"⌊\",\n      \"&rfloor;\": \"⌋\",\n      \"&lang;\": \"〈\",\n      \"&rang;\": \"〉\",\n      \"&loz;\": \"◊\",\n      \"&spades;\": \"♠\",\n      \"&clubs;\": \"♣\",\n      \"&hearts;\": \"♥\",\n      \"&diams;\": \"♦\"\n    },\n    characters: {\n      \"'\": \"&apos;\",\n      \" \": \"&nbsp;\",\n      \"¡\": \"&iexcl;\",\n      \"¢\": \"&cent;\",\n      \"£\": \"&pound;\",\n      \"¤\": \"&curren;\",\n      \"¥\": \"&yen;\",\n      \"¦\": \"&brvbar;\",\n      \"§\": \"&sect;\",\n      \"¨\": \"&uml;\",\n      \"©\": \"&copy;\",\n      \"ª\": \"&ordf;\",\n      \"«\": \"&laquo;\",\n      \"¬\": \"&not;\",\n      \"­\": \"&shy;\",\n      \"®\": \"&reg;\",\n      \"¯\": \"&macr;\",\n      \"°\": \"&deg;\",\n      \"±\": \"&plusmn;\",\n      \"²\": \"&sup2;\",\n      \"³\": \"&sup3;\",\n      \"´\": \"&acute;\",\n      \"µ\": \"&micro;\",\n      \"¶\": \"&para;\",\n      \"·\": \"&middot;\",\n      \"¸\": \"&cedil;\",\n      \"¹\": \"&sup1;\",\n      \"º\": \"&ordm;\",\n      \"»\": \"&raquo;\",\n      \"¼\": \"&frac14;\",\n      \"½\": \"&frac12;\",\n      \"¾\": \"&frac34;\",\n      \"¿\": \"&iquest;\",\n      \"À\": \"&Agrave;\",\n      \"Á\": \"&Aacute;\",\n      \"Â\": \"&Acirc;\",\n      \"Ã\": \"&Atilde;\",\n      \"Ä\": \"&Auml;\",\n      \"Å\": \"&Aring;\",\n      \"Æ\": \"&AElig;\",\n      \"Ç\": \"&Ccedil;\",\n      \"È\": \"&Egrave;\",\n      \"É\": \"&Eacute;\",\n      \"Ê\": \"&Ecirc;\",\n      \"Ë\": \"&Euml;\",\n      \"Ì\": \"&Igrave;\",\n      \"Í\": \"&Iacute;\",\n      \"Î\": \"&Icirc;\",\n      \"Ï\": \"&Iuml;\",\n      \"Ð\": \"&ETH;\",\n      \"Ñ\": \"&Ntilde;\",\n      \"Ò\": \"&Ograve;\",\n      \"Ó\": \"&Oacute;\",\n      \"Ô\": \"&Ocirc;\",\n      \"Õ\": \"&Otilde;\",\n      \"Ö\": \"&Ouml;\",\n      \"×\": \"&times;\",\n      \"Ø\": \"&Oslash;\",\n      \"Ù\": \"&Ugrave;\",\n      \"Ú\": \"&Uacute;\",\n      \"Û\": \"&Ucirc;\",\n      \"Ü\": \"&Uuml;\",\n      \"Ý\": \"&Yacute;\",\n      \"Þ\": \"&THORN;\",\n      \"ß\": \"&szlig;\",\n      \"à\": \"&agrave;\",\n      \"á\": \"&aacute;\",\n      \"â\": \"&acirc;\",\n      \"ã\": \"&atilde;\",\n      \"ä\": \"&auml;\",\n      \"å\": \"&aring;\",\n      \"æ\": \"&aelig;\",\n      \"ç\": \"&ccedil;\",\n      \"è\": \"&egrave;\",\n      \"é\": \"&eacute;\",\n      \"ê\": \"&ecirc;\",\n      \"ë\": \"&euml;\",\n      \"ì\": \"&igrave;\",\n      \"í\": \"&iacute;\",\n      \"î\": \"&icirc;\",\n      \"ï\": \"&iuml;\",\n      \"ð\": \"&eth;\",\n      \"ñ\": \"&ntilde;\",\n      \"ò\": \"&ograve;\",\n      \"ó\": \"&oacute;\",\n      \"ô\": \"&ocirc;\",\n      \"õ\": \"&otilde;\",\n      \"ö\": \"&ouml;\",\n      \"÷\": \"&divide;\",\n      \"ø\": \"&oslash;\",\n      \"ù\": \"&ugrave;\",\n      \"ú\": \"&uacute;\",\n      \"û\": \"&ucirc;\",\n      \"ü\": \"&uuml;\",\n      \"ý\": \"&yacute;\",\n      \"þ\": \"&thorn;\",\n      \"ÿ\": \"&yuml;\",\n      '\"': \"&quot;\",\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      \"Œ\": \"&OElig;\",\n      \"œ\": \"&oelig;\",\n      \"Š\": \"&Scaron;\",\n      \"š\": \"&scaron;\",\n      \"Ÿ\": \"&Yuml;\",\n      \"ˆ\": \"&circ;\",\n      \"˜\": \"&tilde;\",\n      \" \": \"&ensp;\",\n      \" \": \"&emsp;\",\n      \" \": \"&thinsp;\",\n      \"‌\": \"&zwnj;\",\n      \"‍\": \"&zwj;\",\n      \"‎\": \"&lrm;\",\n      \"‏\": \"&rlm;\",\n      \"–\": \"&ndash;\",\n      \"—\": \"&mdash;\",\n      \"‘\": \"&lsquo;\",\n      \"’\": \"&rsquo;\",\n      \"‚\": \"&sbquo;\",\n      \"“\": \"&ldquo;\",\n      \"”\": \"&rdquo;\",\n      \"„\": \"&bdquo;\",\n      \"†\": \"&dagger;\",\n      \"‡\": \"&Dagger;\",\n      \"‰\": \"&permil;\",\n      \"‹\": \"&lsaquo;\",\n      \"›\": \"&rsaquo;\",\n      \"€\": \"&euro;\",\n      \"ƒ\": \"&fnof;\",\n      \"Α\": \"&Alpha;\",\n      \"Β\": \"&Beta;\",\n      \"Γ\": \"&Gamma;\",\n      \"Δ\": \"&Delta;\",\n      \"Ε\": \"&Epsilon;\",\n      \"Ζ\": \"&Zeta;\",\n      \"Η\": \"&Eta;\",\n      \"Θ\": \"&Theta;\",\n      \"Ι\": \"&Iota;\",\n      \"Κ\": \"&Kappa;\",\n      \"Λ\": \"&Lambda;\",\n      \"Μ\": \"&Mu;\",\n      \"Ν\": \"&Nu;\",\n      \"Ξ\": \"&Xi;\",\n      \"Ο\": \"&Omicron;\",\n      \"Π\": \"&Pi;\",\n      \"Ρ\": \"&Rho;\",\n      \"Σ\": \"&Sigma;\",\n      \"Τ\": \"&Tau;\",\n      \"Υ\": \"&Upsilon;\",\n      \"Φ\": \"&Phi;\",\n      \"Χ\": \"&Chi;\",\n      \"Ψ\": \"&Psi;\",\n      \"Ω\": \"&Omega;\",\n      \"α\": \"&alpha;\",\n      \"β\": \"&beta;\",\n      \"γ\": \"&gamma;\",\n      \"δ\": \"&delta;\",\n      \"ε\": \"&epsilon;\",\n      \"ζ\": \"&zeta;\",\n      \"η\": \"&eta;\",\n      \"θ\": \"&theta;\",\n      \"ι\": \"&iota;\",\n      \"κ\": \"&kappa;\",\n      \"λ\": \"&lambda;\",\n      \"μ\": \"&mu;\",\n      \"ν\": \"&nu;\",\n      \"ξ\": \"&xi;\",\n      \"ο\": \"&omicron;\",\n      \"π\": \"&pi;\",\n      \"ρ\": \"&rho;\",\n      \"ς\": \"&sigmaf;\",\n      \"σ\": \"&sigma;\",\n      \"τ\": \"&tau;\",\n      \"υ\": \"&upsilon;\",\n      \"φ\": \"&phi;\",\n      \"χ\": \"&chi;\",\n      \"ψ\": \"&psi;\",\n      \"ω\": \"&omega;\",\n      \"ϑ\": \"&thetasym;\",\n      \"ϒ\": \"&upsih;\",\n      \"ϖ\": \"&piv;\",\n      \"•\": \"&bull;\",\n      \"…\": \"&hellip;\",\n      \"′\": \"&prime;\",\n      \"″\": \"&Prime;\",\n      \"‾\": \"&oline;\",\n      \"⁄\": \"&frasl;\",\n      \"℘\": \"&weierp;\",\n      \"ℑ\": \"&image;\",\n      \"ℜ\": \"&real;\",\n      \"™\": \"&trade;\",\n      \"ℵ\": \"&alefsym;\",\n      \"←\": \"&larr;\",\n      \"↑\": \"&uarr;\",\n      \"→\": \"&rarr;\",\n      \"↓\": \"&darr;\",\n      \"↔\": \"&harr;\",\n      \"↵\": \"&crarr;\",\n      \"⇐\": \"&lArr;\",\n      \"⇑\": \"&uArr;\",\n      \"⇒\": \"&rArr;\",\n      \"⇓\": \"&dArr;\",\n      \"⇔\": \"&hArr;\",\n      \"∀\": \"&forall;\",\n      \"∂\": \"&part;\",\n      \"∃\": \"&exist;\",\n      \"∅\": \"&empty;\",\n      \"∇\": \"&nabla;\",\n      \"∈\": \"&isin;\",\n      \"∉\": \"&notin;\",\n      \"∋\": \"&ni;\",\n      \"∏\": \"&prod;\",\n      \"∑\": \"&sum;\",\n      \"−\": \"&minus;\",\n      \"∗\": \"&lowast;\",\n      \"√\": \"&radic;\",\n      \"∝\": \"&prop;\",\n      \"∞\": \"&infin;\",\n      \"∠\": \"&ang;\",\n      \"∧\": \"&and;\",\n      \"∨\": \"&or;\",\n      \"∩\": \"&cap;\",\n      \"∪\": \"&cup;\",\n      \"∫\": \"&int;\",\n      \"∴\": \"&there4;\",\n      \"∼\": \"&sim;\",\n      \"≅\": \"&cong;\",\n      \"≈\": \"&asymp;\",\n      \"≠\": \"&ne;\",\n      \"≡\": \"&equiv;\",\n      \"≤\": \"&le;\",\n      \"≥\": \"&ge;\",\n      \"⊂\": \"&sub;\",\n      \"⊃\": \"&sup;\",\n      \"⊄\": \"&nsub;\",\n      \"⊆\": \"&sube;\",\n      \"⊇\": \"&supe;\",\n      \"⊕\": \"&oplus;\",\n      \"⊗\": \"&otimes;\",\n      \"⊥\": \"&perp;\",\n      \"⋅\": \"&sdot;\",\n      \"⌈\": \"&lceil;\",\n      \"⌉\": \"&rceil;\",\n      \"⌊\": \"&lfloor;\",\n      \"⌋\": \"&rfloor;\",\n      \"〈\": \"&lang;\",\n      \"〉\": \"&rang;\",\n      \"◊\": \"&loz;\",\n      \"♠\": \"&spades;\",\n      \"♣\": \"&clubs;\",\n      \"♥\": \"&hearts;\",\n      \"♦\": \"&diams;\"\n    }\n  },\n  html5: {\n    entities: {\n      \"&AElig\": \"Æ\",\n      \"&AElig;\": \"Æ\",\n      \"&AMP\": \"&\",\n      \"&AMP;\": \"&\",\n      \"&Aacute\": \"Á\",\n      \"&Aacute;\": \"Á\",\n      \"&Abreve;\": \"Ă\",\n      \"&Acirc\": \"Â\",\n      \"&Acirc;\": \"Â\",\n      \"&Acy;\": \"А\",\n      \"&Afr;\": \"𝔄\",\n      \"&Agrave\": \"À\",\n      \"&Agrave;\": \"À\",\n      \"&Alpha;\": \"Α\",\n      \"&Amacr;\": \"Ā\",\n      \"&And;\": \"⩓\",\n      \"&Aogon;\": \"Ą\",\n      \"&Aopf;\": \"𝔸\",\n      \"&ApplyFunction;\": \"⁡\",\n      \"&Aring\": \"Å\",\n      \"&Aring;\": \"Å\",\n      \"&Ascr;\": \"𝒜\",\n      \"&Assign;\": \"≔\",\n      \"&Atilde\": \"Ã\",\n      \"&Atilde;\": \"Ã\",\n      \"&Auml\": \"Ä\",\n      \"&Auml;\": \"Ä\",\n      \"&Backslash;\": \"∖\",\n      \"&Barv;\": \"⫧\",\n      \"&Barwed;\": \"⌆\",\n      \"&Bcy;\": \"Б\",\n      \"&Because;\": \"∵\",\n      \"&Bernoullis;\": \"ℬ\",\n      \"&Beta;\": \"Β\",\n      \"&Bfr;\": \"𝔅\",\n      \"&Bopf;\": \"𝔹\",\n      \"&Breve;\": \"˘\",\n      \"&Bscr;\": \"ℬ\",\n      \"&Bumpeq;\": \"≎\",\n      \"&CHcy;\": \"Ч\",\n      \"&COPY\": \"©\",\n      \"&COPY;\": \"©\",\n      \"&Cacute;\": \"Ć\",\n      \"&Cap;\": \"⋒\",\n      \"&CapitalDifferentialD;\": \"ⅅ\",\n      \"&Cayleys;\": \"ℭ\",\n      \"&Ccaron;\": \"Č\",\n      \"&Ccedil\": \"Ç\",\n      \"&Ccedil;\": \"Ç\",\n      \"&Ccirc;\": \"Ĉ\",\n      \"&Cconint;\": \"∰\",\n      \"&Cdot;\": \"Ċ\",\n      \"&Cedilla;\": \"¸\",\n      \"&CenterDot;\": \"·\",\n      \"&Cfr;\": \"ℭ\",\n      \"&Chi;\": \"Χ\",\n      \"&CircleDot;\": \"⊙\",\n      \"&CircleMinus;\": \"⊖\",\n      \"&CirclePlus;\": \"⊕\",\n      \"&CircleTimes;\": \"⊗\",\n      \"&ClockwiseContourIntegral;\": \"∲\",\n      \"&CloseCurlyDoubleQuote;\": \"”\",\n      \"&CloseCurlyQuote;\": \"’\",\n      \"&Colon;\": \"∷\",\n      \"&Colone;\": \"⩴\",\n      \"&Congruent;\": \"≡\",\n      \"&Conint;\": \"∯\",\n      \"&ContourIntegral;\": \"∮\",\n      \"&Copf;\": \"ℂ\",\n      \"&Coproduct;\": \"∐\",\n      \"&CounterClockwiseContourIntegral;\": \"∳\",\n      \"&Cross;\": \"⨯\",\n      \"&Cscr;\": \"𝒞\",\n      \"&Cup;\": \"⋓\",\n      \"&CupCap;\": \"≍\",\n      \"&DD;\": \"ⅅ\",\n      \"&DDotrahd;\": \"⤑\",\n      \"&DJcy;\": \"Ђ\",\n      \"&DScy;\": \"Ѕ\",\n      \"&DZcy;\": \"Џ\",\n      \"&Dagger;\": \"‡\",\n      \"&Darr;\": \"↡\",\n      \"&Dashv;\": \"⫤\",\n      \"&Dcaron;\": \"Ď\",\n      \"&Dcy;\": \"Д\",\n      \"&Del;\": \"∇\",\n      \"&Delta;\": \"Δ\",\n      \"&Dfr;\": \"𝔇\",\n      \"&DiacriticalAcute;\": \"´\",\n      \"&DiacriticalDot;\": \"˙\",\n      \"&DiacriticalDoubleAcute;\": \"˝\",\n      \"&DiacriticalGrave;\": \"`\",\n      \"&DiacriticalTilde;\": \"˜\",\n      \"&Diamond;\": \"⋄\",\n      \"&DifferentialD;\": \"ⅆ\",\n      \"&Dopf;\": \"𝔻\",\n      \"&Dot;\": \"¨\",\n      \"&DotDot;\": \"⃜\",\n      \"&DotEqual;\": \"≐\",\n      \"&DoubleContourIntegral;\": \"∯\",\n      \"&DoubleDot;\": \"¨\",\n      \"&DoubleDownArrow;\": \"⇓\",\n      \"&DoubleLeftArrow;\": \"⇐\",\n      \"&DoubleLeftRightArrow;\": \"⇔\",\n      \"&DoubleLeftTee;\": \"⫤\",\n      \"&DoubleLongLeftArrow;\": \"⟸\",\n      \"&DoubleLongLeftRightArrow;\": \"⟺\",\n      \"&DoubleLongRightArrow;\": \"⟹\",\n      \"&DoubleRightArrow;\": \"⇒\",\n      \"&DoubleRightTee;\": \"⊨\",\n      \"&DoubleUpArrow;\": \"⇑\",\n      \"&DoubleUpDownArrow;\": \"⇕\",\n      \"&DoubleVerticalBar;\": \"∥\",\n      \"&DownArrow;\": \"↓\",\n      \"&DownArrowBar;\": \"⤓\",\n      \"&DownArrowUpArrow;\": \"⇵\",\n      \"&DownBreve;\": \"̑\",\n      \"&DownLeftRightVector;\": \"⥐\",\n      \"&DownLeftTeeVector;\": \"⥞\",\n      \"&DownLeftVector;\": \"↽\",\n      \"&DownLeftVectorBar;\": \"⥖\",\n      \"&DownRightTeeVector;\": \"⥟\",\n      \"&DownRightVector;\": \"⇁\",\n      \"&DownRightVectorBar;\": \"⥗\",\n      \"&DownTee;\": \"⊤\",\n      \"&DownTeeArrow;\": \"↧\",\n      \"&Downarrow;\": \"⇓\",\n      \"&Dscr;\": \"𝒟\",\n      \"&Dstrok;\": \"Đ\",\n      \"&ENG;\": \"Ŋ\",\n      \"&ETH\": \"Ð\",\n      \"&ETH;\": \"Ð\",\n      \"&Eacute\": \"É\",\n      \"&Eacute;\": \"É\",\n      \"&Ecaron;\": \"Ě\",\n      \"&Ecirc\": \"Ê\",\n      \"&Ecirc;\": \"Ê\",\n      \"&Ecy;\": \"Э\",\n      \"&Edot;\": \"Ė\",\n      \"&Efr;\": \"𝔈\",\n      \"&Egrave\": \"È\",\n      \"&Egrave;\": \"È\",\n      \"&Element;\": \"∈\",\n      \"&Emacr;\": \"Ē\",\n      \"&EmptySmallSquare;\": \"◻\",\n      \"&EmptyVerySmallSquare;\": \"▫\",\n      \"&Eogon;\": \"Ę\",\n      \"&Eopf;\": \"𝔼\",\n      \"&Epsilon;\": \"Ε\",\n      \"&Equal;\": \"⩵\",\n      \"&EqualTilde;\": \"≂\",\n      \"&Equilibrium;\": \"⇌\",\n      \"&Escr;\": \"ℰ\",\n      \"&Esim;\": \"⩳\",\n      \"&Eta;\": \"Η\",\n      \"&Euml\": \"Ë\",\n      \"&Euml;\": \"Ë\",\n      \"&Exists;\": \"∃\",\n      \"&ExponentialE;\": \"ⅇ\",\n      \"&Fcy;\": \"Ф\",\n      \"&Ffr;\": \"𝔉\",\n      \"&FilledSmallSquare;\": \"◼\",\n      \"&FilledVerySmallSquare;\": \"▪\",\n      \"&Fopf;\": \"𝔽\",\n      \"&ForAll;\": \"∀\",\n      \"&Fouriertrf;\": \"ℱ\",\n      \"&Fscr;\": \"ℱ\",\n      \"&GJcy;\": \"Ѓ\",\n      \"&GT\": \">\",\n      \"&GT;\": \">\",\n      \"&Gamma;\": \"Γ\",\n      \"&Gammad;\": \"Ϝ\",\n      \"&Gbreve;\": \"Ğ\",\n      \"&Gcedil;\": \"Ģ\",\n      \"&Gcirc;\": \"Ĝ\",\n      \"&Gcy;\": \"Г\",\n      \"&Gdot;\": \"Ġ\",\n      \"&Gfr;\": \"𝔊\",\n      \"&Gg;\": \"⋙\",\n      \"&Gopf;\": \"𝔾\",\n      \"&GreaterEqual;\": \"≥\",\n      \"&GreaterEqualLess;\": \"⋛\",\n      \"&GreaterFullEqual;\": \"≧\",\n      \"&GreaterGreater;\": \"⪢\",\n      \"&GreaterLess;\": \"≷\",\n      \"&GreaterSlantEqual;\": \"⩾\",\n      \"&GreaterTilde;\": \"≳\",\n      \"&Gscr;\": \"𝒢\",\n      \"&Gt;\": \"≫\",\n      \"&HARDcy;\": \"Ъ\",\n      \"&Hacek;\": \"ˇ\",\n      \"&Hat;\": \"^\",\n      \"&Hcirc;\": \"Ĥ\",\n      \"&Hfr;\": \"ℌ\",\n      \"&HilbertSpace;\": \"ℋ\",\n      \"&Hopf;\": \"ℍ\",\n      \"&HorizontalLine;\": \"─\",\n      \"&Hscr;\": \"ℋ\",\n      \"&Hstrok;\": \"Ħ\",\n      \"&HumpDownHump;\": \"≎\",\n      \"&HumpEqual;\": \"≏\",\n      \"&IEcy;\": \"Е\",\n      \"&IJlig;\": \"Ĳ\",\n      \"&IOcy;\": \"Ё\",\n      \"&Iacute\": \"Í\",\n      \"&Iacute;\": \"Í\",\n      \"&Icirc\": \"Î\",\n      \"&Icirc;\": \"Î\",\n      \"&Icy;\": \"И\",\n      \"&Idot;\": \"İ\",\n      \"&Ifr;\": \"ℑ\",\n      \"&Igrave\": \"Ì\",\n      \"&Igrave;\": \"Ì\",\n      \"&Im;\": \"ℑ\",\n      \"&Imacr;\": \"Ī\",\n      \"&ImaginaryI;\": \"ⅈ\",\n      \"&Implies;\": \"⇒\",\n      \"&Int;\": \"∬\",\n      \"&Integral;\": \"∫\",\n      \"&Intersection;\": \"⋂\",\n      \"&InvisibleComma;\": \"⁣\",\n      \"&InvisibleTimes;\": \"⁢\",\n      \"&Iogon;\": \"Į\",\n      \"&Iopf;\": \"𝕀\",\n      \"&Iota;\": \"Ι\",\n      \"&Iscr;\": \"ℐ\",\n      \"&Itilde;\": \"Ĩ\",\n      \"&Iukcy;\": \"І\",\n      \"&Iuml\": \"Ï\",\n      \"&Iuml;\": \"Ï\",\n      \"&Jcirc;\": \"Ĵ\",\n      \"&Jcy;\": \"Й\",\n      \"&Jfr;\": \"𝔍\",\n      \"&Jopf;\": \"𝕁\",\n      \"&Jscr;\": \"𝒥\",\n      \"&Jsercy;\": \"Ј\",\n      \"&Jukcy;\": \"Є\",\n      \"&KHcy;\": \"Х\",\n      \"&KJcy;\": \"Ќ\",\n      \"&Kappa;\": \"Κ\",\n      \"&Kcedil;\": \"Ķ\",\n      \"&Kcy;\": \"К\",\n      \"&Kfr;\": \"𝔎\",\n      \"&Kopf;\": \"𝕂\",\n      \"&Kscr;\": \"𝒦\",\n      \"&LJcy;\": \"Љ\",\n      \"&LT\": \"<\",\n      \"&LT;\": \"<\",\n      \"&Lacute;\": \"Ĺ\",\n      \"&Lambda;\": \"Λ\",\n      \"&Lang;\": \"⟪\",\n      \"&Laplacetrf;\": \"ℒ\",\n      \"&Larr;\": \"↞\",\n      \"&Lcaron;\": \"Ľ\",\n      \"&Lcedil;\": \"Ļ\",\n      \"&Lcy;\": \"Л\",\n      \"&LeftAngleBracket;\": \"⟨\",\n      \"&LeftArrow;\": \"←\",\n      \"&LeftArrowBar;\": \"⇤\",\n      \"&LeftArrowRightArrow;\": \"⇆\",\n      \"&LeftCeiling;\": \"⌈\",\n      \"&LeftDoubleBracket;\": \"⟦\",\n      \"&LeftDownTeeVector;\": \"⥡\",\n      \"&LeftDownVector;\": \"⇃\",\n      \"&LeftDownVectorBar;\": \"⥙\",\n      \"&LeftFloor;\": \"⌊\",\n      \"&LeftRightArrow;\": \"↔\",\n      \"&LeftRightVector;\": \"⥎\",\n      \"&LeftTee;\": \"⊣\",\n      \"&LeftTeeArrow;\": \"↤\",\n      \"&LeftTeeVector;\": \"⥚\",\n      \"&LeftTriangle;\": \"⊲\",\n      \"&LeftTriangleBar;\": \"⧏\",\n      \"&LeftTriangleEqual;\": \"⊴\",\n      \"&LeftUpDownVector;\": \"⥑\",\n      \"&LeftUpTeeVector;\": \"⥠\",\n      \"&LeftUpVector;\": \"↿\",\n      \"&LeftUpVectorBar;\": \"⥘\",\n      \"&LeftVector;\": \"↼\",\n      \"&LeftVectorBar;\": \"⥒\",\n      \"&Leftarrow;\": \"⇐\",\n      \"&Leftrightarrow;\": \"⇔\",\n      \"&LessEqualGreater;\": \"⋚\",\n      \"&LessFullEqual;\": \"≦\",\n      \"&LessGreater;\": \"≶\",\n      \"&LessLess;\": \"⪡\",\n      \"&LessSlantEqual;\": \"⩽\",\n      \"&LessTilde;\": \"≲\",\n      \"&Lfr;\": \"𝔏\",\n      \"&Ll;\": \"⋘\",\n      \"&Lleftarrow;\": \"⇚\",\n      \"&Lmidot;\": \"Ŀ\",\n      \"&LongLeftArrow;\": \"⟵\",\n      \"&LongLeftRightArrow;\": \"⟷\",\n      \"&LongRightArrow;\": \"⟶\",\n      \"&Longleftarrow;\": \"⟸\",\n      \"&Longleftrightarrow;\": \"⟺\",\n      \"&Longrightarrow;\": \"⟹\",\n      \"&Lopf;\": \"𝕃\",\n      \"&LowerLeftArrow;\": \"↙\",\n      \"&LowerRightArrow;\": \"↘\",\n      \"&Lscr;\": \"ℒ\",\n      \"&Lsh;\": \"↰\",\n      \"&Lstrok;\": \"Ł\",\n      \"&Lt;\": \"≪\",\n      \"&Map;\": \"⤅\",\n      \"&Mcy;\": \"М\",\n      \"&MediumSpace;\": \" \",\n      \"&Mellintrf;\": \"ℳ\",\n      \"&Mfr;\": \"𝔐\",\n      \"&MinusPlus;\": \"∓\",\n      \"&Mopf;\": \"𝕄\",\n      \"&Mscr;\": \"ℳ\",\n      \"&Mu;\": \"Μ\",\n      \"&NJcy;\": \"Њ\",\n      \"&Nacute;\": \"Ń\",\n      \"&Ncaron;\": \"Ň\",\n      \"&Ncedil;\": \"Ņ\",\n      \"&Ncy;\": \"Н\",\n      \"&NegativeMediumSpace;\": \"​\",\n      \"&NegativeThickSpace;\": \"​\",\n      \"&NegativeThinSpace;\": \"​\",\n      \"&NegativeVeryThinSpace;\": \"​\",\n      \"&NestedGreaterGreater;\": \"≫\",\n      \"&NestedLessLess;\": \"≪\",\n      \"&NewLine;\": \"\\n\",\n      \"&Nfr;\": \"𝔑\",\n      \"&NoBreak;\": \"⁠\",\n      \"&NonBreakingSpace;\": \" \",\n      \"&Nopf;\": \"ℕ\",\n      \"&Not;\": \"⫬\",\n      \"&NotCongruent;\": \"≢\",\n      \"&NotCupCap;\": \"≭\",\n      \"&NotDoubleVerticalBar;\": \"∦\",\n      \"&NotElement;\": \"∉\",\n      \"&NotEqual;\": \"≠\",\n      \"&NotEqualTilde;\": \"≂̸\",\n      \"&NotExists;\": \"∄\",\n      \"&NotGreater;\": \"≯\",\n      \"&NotGreaterEqual;\": \"≱\",\n      \"&NotGreaterFullEqual;\": \"≧̸\",\n      \"&NotGreaterGreater;\": \"≫̸\",\n      \"&NotGreaterLess;\": \"≹\",\n      \"&NotGreaterSlantEqual;\": \"⩾̸\",\n      \"&NotGreaterTilde;\": \"≵\",\n      \"&NotHumpDownHump;\": \"≎̸\",\n      \"&NotHumpEqual;\": \"≏̸\",\n      \"&NotLeftTriangle;\": \"⋪\",\n      \"&NotLeftTriangleBar;\": \"⧏̸\",\n      \"&NotLeftTriangleEqual;\": \"⋬\",\n      \"&NotLess;\": \"≮\",\n      \"&NotLessEqual;\": \"≰\",\n      \"&NotLessGreater;\": \"≸\",\n      \"&NotLessLess;\": \"≪̸\",\n      \"&NotLessSlantEqual;\": \"⩽̸\",\n      \"&NotLessTilde;\": \"≴\",\n      \"&NotNestedGreaterGreater;\": \"⪢̸\",\n      \"&NotNestedLessLess;\": \"⪡̸\",\n      \"&NotPrecedes;\": \"⊀\",\n      \"&NotPrecedesEqual;\": \"⪯̸\",\n      \"&NotPrecedesSlantEqual;\": \"⋠\",\n      \"&NotReverseElement;\": \"∌\",\n      \"&NotRightTriangle;\": \"⋫\",\n      \"&NotRightTriangleBar;\": \"⧐̸\",\n      \"&NotRightTriangleEqual;\": \"⋭\",\n      \"&NotSquareSubset;\": \"⊏̸\",\n      \"&NotSquareSubsetEqual;\": \"⋢\",\n      \"&NotSquareSuperset;\": \"⊐̸\",\n      \"&NotSquareSupersetEqual;\": \"⋣\",\n      \"&NotSubset;\": \"⊂⃒\",\n      \"&NotSubsetEqual;\": \"⊈\",\n      \"&NotSucceeds;\": \"⊁\",\n      \"&NotSucceedsEqual;\": \"⪰̸\",\n      \"&NotSucceedsSlantEqual;\": \"⋡\",\n      \"&NotSucceedsTilde;\": \"≿̸\",\n      \"&NotSuperset;\": \"⊃⃒\",\n      \"&NotSupersetEqual;\": \"⊉\",\n      \"&NotTilde;\": \"≁\",\n      \"&NotTildeEqual;\": \"≄\",\n      \"&NotTildeFullEqual;\": \"≇\",\n      \"&NotTildeTilde;\": \"≉\",\n      \"&NotVerticalBar;\": \"∤\",\n      \"&Nscr;\": \"𝒩\",\n      \"&Ntilde\": \"Ñ\",\n      \"&Ntilde;\": \"Ñ\",\n      \"&Nu;\": \"Ν\",\n      \"&OElig;\": \"Œ\",\n      \"&Oacute\": \"Ó\",\n      \"&Oacute;\": \"Ó\",\n      \"&Ocirc\": \"Ô\",\n      \"&Ocirc;\": \"Ô\",\n      \"&Ocy;\": \"О\",\n      \"&Odblac;\": \"Ő\",\n      \"&Ofr;\": \"𝔒\",\n      \"&Ograve\": \"Ò\",\n      \"&Ograve;\": \"Ò\",\n      \"&Omacr;\": \"Ō\",\n      \"&Omega;\": \"Ω\",\n      \"&Omicron;\": \"Ο\",\n      \"&Oopf;\": \"𝕆\",\n      \"&OpenCurlyDoubleQuote;\": \"“\",\n      \"&OpenCurlyQuote;\": \"‘\",\n      \"&Or;\": \"⩔\",\n      \"&Oscr;\": \"𝒪\",\n      \"&Oslash\": \"Ø\",\n      \"&Oslash;\": \"Ø\",\n      \"&Otilde\": \"Õ\",\n      \"&Otilde;\": \"Õ\",\n      \"&Otimes;\": \"⨷\",\n      \"&Ouml\": \"Ö\",\n      \"&Ouml;\": \"Ö\",\n      \"&OverBar;\": \"‾\",\n      \"&OverBrace;\": \"⏞\",\n      \"&OverBracket;\": \"⎴\",\n      \"&OverParenthesis;\": \"⏜\",\n      \"&PartialD;\": \"∂\",\n      \"&Pcy;\": \"П\",\n      \"&Pfr;\": \"𝔓\",\n      \"&Phi;\": \"Φ\",\n      \"&Pi;\": \"Π\",\n      \"&PlusMinus;\": \"±\",\n      \"&Poincareplane;\": \"ℌ\",\n      \"&Popf;\": \"ℙ\",\n      \"&Pr;\": \"⪻\",\n      \"&Precedes;\": \"≺\",\n      \"&PrecedesEqual;\": \"⪯\",\n      \"&PrecedesSlantEqual;\": \"≼\",\n      \"&PrecedesTilde;\": \"≾\",\n      \"&Prime;\": \"″\",\n      \"&Product;\": \"∏\",\n      \"&Proportion;\": \"∷\",\n      \"&Proportional;\": \"∝\",\n      \"&Pscr;\": \"𝒫\",\n      \"&Psi;\": \"Ψ\",\n      \"&QUOT\": '\"',\n      \"&QUOT;\": '\"',\n      \"&Qfr;\": \"𝔔\",\n      \"&Qopf;\": \"ℚ\",\n      \"&Qscr;\": \"𝒬\",\n      \"&RBarr;\": \"⤐\",\n      \"&REG\": \"®\",\n      \"&REG;\": \"®\",\n      \"&Racute;\": \"Ŕ\",\n      \"&Rang;\": \"⟫\",\n      \"&Rarr;\": \"↠\",\n      \"&Rarrtl;\": \"⤖\",\n      \"&Rcaron;\": \"Ř\",\n      \"&Rcedil;\": \"Ŗ\",\n      \"&Rcy;\": \"Р\",\n      \"&Re;\": \"ℜ\",\n      \"&ReverseElement;\": \"∋\",\n      \"&ReverseEquilibrium;\": \"⇋\",\n      \"&ReverseUpEquilibrium;\": \"⥯\",\n      \"&Rfr;\": \"ℜ\",\n      \"&Rho;\": \"Ρ\",\n      \"&RightAngleBracket;\": \"⟩\",\n      \"&RightArrow;\": \"→\",\n      \"&RightArrowBar;\": \"⇥\",\n      \"&RightArrowLeftArrow;\": \"⇄\",\n      \"&RightCeiling;\": \"⌉\",\n      \"&RightDoubleBracket;\": \"⟧\",\n      \"&RightDownTeeVector;\": \"⥝\",\n      \"&RightDownVector;\": \"⇂\",\n      \"&RightDownVectorBar;\": \"⥕\",\n      \"&RightFloor;\": \"⌋\",\n      \"&RightTee;\": \"⊢\",\n      \"&RightTeeArrow;\": \"↦\",\n      \"&RightTeeVector;\": \"⥛\",\n      \"&RightTriangle;\": \"⊳\",\n      \"&RightTriangleBar;\": \"⧐\",\n      \"&RightTriangleEqual;\": \"⊵\",\n      \"&RightUpDownVector;\": \"⥏\",\n      \"&RightUpTeeVector;\": \"⥜\",\n      \"&RightUpVector;\": \"↾\",\n      \"&RightUpVectorBar;\": \"⥔\",\n      \"&RightVector;\": \"⇀\",\n      \"&RightVectorBar;\": \"⥓\",\n      \"&Rightarrow;\": \"⇒\",\n      \"&Ropf;\": \"ℝ\",\n      \"&RoundImplies;\": \"⥰\",\n      \"&Rrightarrow;\": \"⇛\",\n      \"&Rscr;\": \"ℛ\",\n      \"&Rsh;\": \"↱\",\n      \"&RuleDelayed;\": \"⧴\",\n      \"&SHCHcy;\": \"Щ\",\n      \"&SHcy;\": \"Ш\",\n      \"&SOFTcy;\": \"Ь\",\n      \"&Sacute;\": \"Ś\",\n      \"&Sc;\": \"⪼\",\n      \"&Scaron;\": \"Š\",\n      \"&Scedil;\": \"Ş\",\n      \"&Scirc;\": \"Ŝ\",\n      \"&Scy;\": \"С\",\n      \"&Sfr;\": \"𝔖\",\n      \"&ShortDownArrow;\": \"↓\",\n      \"&ShortLeftArrow;\": \"←\",\n      \"&ShortRightArrow;\": \"→\",\n      \"&ShortUpArrow;\": \"↑\",\n      \"&Sigma;\": \"Σ\",\n      \"&SmallCircle;\": \"∘\",\n      \"&Sopf;\": \"𝕊\",\n      \"&Sqrt;\": \"√\",\n      \"&Square;\": \"□\",\n      \"&SquareIntersection;\": \"⊓\",\n      \"&SquareSubset;\": \"⊏\",\n      \"&SquareSubsetEqual;\": \"⊑\",\n      \"&SquareSuperset;\": \"⊐\",\n      \"&SquareSupersetEqual;\": \"⊒\",\n      \"&SquareUnion;\": \"⊔\",\n      \"&Sscr;\": \"𝒮\",\n      \"&Star;\": \"⋆\",\n      \"&Sub;\": \"⋐\",\n      \"&Subset;\": \"⋐\",\n      \"&SubsetEqual;\": \"⊆\",\n      \"&Succeeds;\": \"≻\",\n      \"&SucceedsEqual;\": \"⪰\",\n      \"&SucceedsSlantEqual;\": \"≽\",\n      \"&SucceedsTilde;\": \"≿\",\n      \"&SuchThat;\": \"∋\",\n      \"&Sum;\": \"∑\",\n      \"&Sup;\": \"⋑\",\n      \"&Superset;\": \"⊃\",\n      \"&SupersetEqual;\": \"⊇\",\n      \"&Supset;\": \"⋑\",\n      \"&THORN\": \"Þ\",\n      \"&THORN;\": \"Þ\",\n      \"&TRADE;\": \"™\",\n      \"&TSHcy;\": \"Ћ\",\n      \"&TScy;\": \"Ц\",\n      \"&Tab;\": \"\\t\",\n      \"&Tau;\": \"Τ\",\n      \"&Tcaron;\": \"Ť\",\n      \"&Tcedil;\": \"Ţ\",\n      \"&Tcy;\": \"Т\",\n      \"&Tfr;\": \"𝔗\",\n      \"&Therefore;\": \"∴\",\n      \"&Theta;\": \"Θ\",\n      \"&ThickSpace;\": \"  \",\n      \"&ThinSpace;\": \" \",\n      \"&Tilde;\": \"∼\",\n      \"&TildeEqual;\": \"≃\",\n      \"&TildeFullEqual;\": \"≅\",\n      \"&TildeTilde;\": \"≈\",\n      \"&Topf;\": \"𝕋\",\n      \"&TripleDot;\": \"⃛\",\n      \"&Tscr;\": \"𝒯\",\n      \"&Tstrok;\": \"Ŧ\",\n      \"&Uacute\": \"Ú\",\n      \"&Uacute;\": \"Ú\",\n      \"&Uarr;\": \"↟\",\n      \"&Uarrocir;\": \"⥉\",\n      \"&Ubrcy;\": \"Ў\",\n      \"&Ubreve;\": \"Ŭ\",\n      \"&Ucirc\": \"Û\",\n      \"&Ucirc;\": \"Û\",\n      \"&Ucy;\": \"У\",\n      \"&Udblac;\": \"Ű\",\n      \"&Ufr;\": \"𝔘\",\n      \"&Ugrave\": \"Ù\",\n      \"&Ugrave;\": \"Ù\",\n      \"&Umacr;\": \"Ū\",\n      \"&UnderBar;\": \"_\",\n      \"&UnderBrace;\": \"⏟\",\n      \"&UnderBracket;\": \"⎵\",\n      \"&UnderParenthesis;\": \"⏝\",\n      \"&Union;\": \"⋃\",\n      \"&UnionPlus;\": \"⊎\",\n      \"&Uogon;\": \"Ų\",\n      \"&Uopf;\": \"𝕌\",\n      \"&UpArrow;\": \"↑\",\n      \"&UpArrowBar;\": \"⤒\",\n      \"&UpArrowDownArrow;\": \"⇅\",\n      \"&UpDownArrow;\": \"↕\",\n      \"&UpEquilibrium;\": \"⥮\",\n      \"&UpTee;\": \"⊥\",\n      \"&UpTeeArrow;\": \"↥\",\n      \"&Uparrow;\": \"⇑\",\n      \"&Updownarrow;\": \"⇕\",\n      \"&UpperLeftArrow;\": \"↖\",\n      \"&UpperRightArrow;\": \"↗\",\n      \"&Upsi;\": \"ϒ\",\n      \"&Upsilon;\": \"Υ\",\n      \"&Uring;\": \"Ů\",\n      \"&Uscr;\": \"𝒰\",\n      \"&Utilde;\": \"Ũ\",\n      \"&Uuml\": \"Ü\",\n      \"&Uuml;\": \"Ü\",\n      \"&VDash;\": \"⊫\",\n      \"&Vbar;\": \"⫫\",\n      \"&Vcy;\": \"В\",\n      \"&Vdash;\": \"⊩\",\n      \"&Vdashl;\": \"⫦\",\n      \"&Vee;\": \"⋁\",\n      \"&Verbar;\": \"‖\",\n      \"&Vert;\": \"‖\",\n      \"&VerticalBar;\": \"∣\",\n      \"&VerticalLine;\": \"|\",\n      \"&VerticalSeparator;\": \"❘\",\n      \"&VerticalTilde;\": \"≀\",\n      \"&VeryThinSpace;\": \" \",\n      \"&Vfr;\": \"𝔙\",\n      \"&Vopf;\": \"𝕍\",\n      \"&Vscr;\": \"𝒱\",\n      \"&Vvdash;\": \"⊪\",\n      \"&Wcirc;\": \"Ŵ\",\n      \"&Wedge;\": \"⋀\",\n      \"&Wfr;\": \"𝔚\",\n      \"&Wopf;\": \"𝕎\",\n      \"&Wscr;\": \"𝒲\",\n      \"&Xfr;\": \"𝔛\",\n      \"&Xi;\": \"Ξ\",\n      \"&Xopf;\": \"𝕏\",\n      \"&Xscr;\": \"𝒳\",\n      \"&YAcy;\": \"Я\",\n      \"&YIcy;\": \"Ї\",\n      \"&YUcy;\": \"Ю\",\n      \"&Yacute\": \"Ý\",\n      \"&Yacute;\": \"Ý\",\n      \"&Ycirc;\": \"Ŷ\",\n      \"&Ycy;\": \"Ы\",\n      \"&Yfr;\": \"𝔜\",\n      \"&Yopf;\": \"𝕐\",\n      \"&Yscr;\": \"𝒴\",\n      \"&Yuml;\": \"Ÿ\",\n      \"&ZHcy;\": \"Ж\",\n      \"&Zacute;\": \"Ź\",\n      \"&Zcaron;\": \"Ž\",\n      \"&Zcy;\": \"З\",\n      \"&Zdot;\": \"Ż\",\n      \"&ZeroWidthSpace;\": \"​\",\n      \"&Zeta;\": \"Ζ\",\n      \"&Zfr;\": \"ℨ\",\n      \"&Zopf;\": \"ℤ\",\n      \"&Zscr;\": \"𝒵\",\n      \"&aacute\": \"á\",\n      \"&aacute;\": \"á\",\n      \"&abreve;\": \"ă\",\n      \"&ac;\": \"∾\",\n      \"&acE;\": \"∾̳\",\n      \"&acd;\": \"∿\",\n      \"&acirc\": \"â\",\n      \"&acirc;\": \"â\",\n      \"&acute\": \"´\",\n      \"&acute;\": \"´\",\n      \"&acy;\": \"а\",\n      \"&aelig\": \"æ\",\n      \"&aelig;\": \"æ\",\n      \"&af;\": \"⁡\",\n      \"&afr;\": \"𝔞\",\n      \"&agrave\": \"à\",\n      \"&agrave;\": \"à\",\n      \"&alefsym;\": \"ℵ\",\n      \"&aleph;\": \"ℵ\",\n      \"&alpha;\": \"α\",\n      \"&amacr;\": \"ā\",\n      \"&amalg;\": \"⨿\",\n      \"&amp\": \"&\",\n      \"&amp;\": \"&\",\n      \"&and;\": \"∧\",\n      \"&andand;\": \"⩕\",\n      \"&andd;\": \"⩜\",\n      \"&andslope;\": \"⩘\",\n      \"&andv;\": \"⩚\",\n      \"&ang;\": \"∠\",\n      \"&ange;\": \"⦤\",\n      \"&angle;\": \"∠\",\n      \"&angmsd;\": \"∡\",\n      \"&angmsdaa;\": \"⦨\",\n      \"&angmsdab;\": \"⦩\",\n      \"&angmsdac;\": \"⦪\",\n      \"&angmsdad;\": \"⦫\",\n      \"&angmsdae;\": \"⦬\",\n      \"&angmsdaf;\": \"⦭\",\n      \"&angmsdag;\": \"⦮\",\n      \"&angmsdah;\": \"⦯\",\n      \"&angrt;\": \"∟\",\n      \"&angrtvb;\": \"⊾\",\n      \"&angrtvbd;\": \"⦝\",\n      \"&angsph;\": \"∢\",\n      \"&angst;\": \"Å\",\n      \"&angzarr;\": \"⍼\",\n      \"&aogon;\": \"ą\",\n      \"&aopf;\": \"𝕒\",\n      \"&ap;\": \"≈\",\n      \"&apE;\": \"⩰\",\n      \"&apacir;\": \"⩯\",\n      \"&ape;\": \"≊\",\n      \"&apid;\": \"≋\",\n      \"&apos;\": \"'\",\n      \"&approx;\": \"≈\",\n      \"&approxeq;\": \"≊\",\n      \"&aring\": \"å\",\n      \"&aring;\": \"å\",\n      \"&ascr;\": \"𝒶\",\n      \"&ast;\": \"*\",\n      \"&asymp;\": \"≈\",\n      \"&asympeq;\": \"≍\",\n      \"&atilde\": \"ã\",\n      \"&atilde;\": \"ã\",\n      \"&auml\": \"ä\",\n      \"&auml;\": \"ä\",\n      \"&awconint;\": \"∳\",\n      \"&awint;\": \"⨑\",\n      \"&bNot;\": \"⫭\",\n      \"&backcong;\": \"≌\",\n      \"&backepsilon;\": \"϶\",\n      \"&backprime;\": \"‵\",\n      \"&backsim;\": \"∽\",\n      \"&backsimeq;\": \"⋍\",\n      \"&barvee;\": \"⊽\",\n      \"&barwed;\": \"⌅\",\n      \"&barwedge;\": \"⌅\",\n      \"&bbrk;\": \"⎵\",\n      \"&bbrktbrk;\": \"⎶\",\n      \"&bcong;\": \"≌\",\n      \"&bcy;\": \"б\",\n      \"&bdquo;\": \"„\",\n      \"&becaus;\": \"∵\",\n      \"&because;\": \"∵\",\n      \"&bemptyv;\": \"⦰\",\n      \"&bepsi;\": \"϶\",\n      \"&bernou;\": \"ℬ\",\n      \"&beta;\": \"β\",\n      \"&beth;\": \"ℶ\",\n      \"&between;\": \"≬\",\n      \"&bfr;\": \"𝔟\",\n      \"&bigcap;\": \"⋂\",\n      \"&bigcirc;\": \"◯\",\n      \"&bigcup;\": \"⋃\",\n      \"&bigodot;\": \"⨀\",\n      \"&bigoplus;\": \"⨁\",\n      \"&bigotimes;\": \"⨂\",\n      \"&bigsqcup;\": \"⨆\",\n      \"&bigstar;\": \"★\",\n      \"&bigtriangledown;\": \"▽\",\n      \"&bigtriangleup;\": \"△\",\n      \"&biguplus;\": \"⨄\",\n      \"&bigvee;\": \"⋁\",\n      \"&bigwedge;\": \"⋀\",\n      \"&bkarow;\": \"⤍\",\n      \"&blacklozenge;\": \"⧫\",\n      \"&blacksquare;\": \"▪\",\n      \"&blacktriangle;\": \"▴\",\n      \"&blacktriangledown;\": \"▾\",\n      \"&blacktriangleleft;\": \"◂\",\n      \"&blacktriangleright;\": \"▸\",\n      \"&blank;\": \"␣\",\n      \"&blk12;\": \"▒\",\n      \"&blk14;\": \"░\",\n      \"&blk34;\": \"▓\",\n      \"&block;\": \"█\",\n      \"&bne;\": \"=⃥\",\n      \"&bnequiv;\": \"≡⃥\",\n      \"&bnot;\": \"⌐\",\n      \"&bopf;\": \"𝕓\",\n      \"&bot;\": \"⊥\",\n      \"&bottom;\": \"⊥\",\n      \"&bowtie;\": \"⋈\",\n      \"&boxDL;\": \"╗\",\n      \"&boxDR;\": \"╔\",\n      \"&boxDl;\": \"╖\",\n      \"&boxDr;\": \"╓\",\n      \"&boxH;\": \"═\",\n      \"&boxHD;\": \"╦\",\n      \"&boxHU;\": \"╩\",\n      \"&boxHd;\": \"╤\",\n      \"&boxHu;\": \"╧\",\n      \"&boxUL;\": \"╝\",\n      \"&boxUR;\": \"╚\",\n      \"&boxUl;\": \"╜\",\n      \"&boxUr;\": \"╙\",\n      \"&boxV;\": \"║\",\n      \"&boxVH;\": \"╬\",\n      \"&boxVL;\": \"╣\",\n      \"&boxVR;\": \"╠\",\n      \"&boxVh;\": \"╫\",\n      \"&boxVl;\": \"╢\",\n      \"&boxVr;\": \"╟\",\n      \"&boxbox;\": \"⧉\",\n      \"&boxdL;\": \"╕\",\n      \"&boxdR;\": \"╒\",\n      \"&boxdl;\": \"┐\",\n      \"&boxdr;\": \"┌\",\n      \"&boxh;\": \"─\",\n      \"&boxhD;\": \"╥\",\n      \"&boxhU;\": \"╨\",\n      \"&boxhd;\": \"┬\",\n      \"&boxhu;\": \"┴\",\n      \"&boxminus;\": \"⊟\",\n      \"&boxplus;\": \"⊞\",\n      \"&boxtimes;\": \"⊠\",\n      \"&boxuL;\": \"╛\",\n      \"&boxuR;\": \"╘\",\n      \"&boxul;\": \"┘\",\n      \"&boxur;\": \"└\",\n      \"&boxv;\": \"│\",\n      \"&boxvH;\": \"╪\",\n      \"&boxvL;\": \"╡\",\n      \"&boxvR;\": \"╞\",\n      \"&boxvh;\": \"┼\",\n      \"&boxvl;\": \"┤\",\n      \"&boxvr;\": \"├\",\n      \"&bprime;\": \"‵\",\n      \"&breve;\": \"˘\",\n      \"&brvbar\": \"¦\",\n      \"&brvbar;\": \"¦\",\n      \"&bscr;\": \"𝒷\",\n      \"&bsemi;\": \"⁏\",\n      \"&bsim;\": \"∽\",\n      \"&bsime;\": \"⋍\",\n      \"&bsol;\": \"\\\\\",\n      \"&bsolb;\": \"⧅\",\n      \"&bsolhsub;\": \"⟈\",\n      \"&bull;\": \"•\",\n      \"&bullet;\": \"•\",\n      \"&bump;\": \"≎\",\n      \"&bumpE;\": \"⪮\",\n      \"&bumpe;\": \"≏\",\n      \"&bumpeq;\": \"≏\",\n      \"&cacute;\": \"ć\",\n      \"&cap;\": \"∩\",\n      \"&capand;\": \"⩄\",\n      \"&capbrcup;\": \"⩉\",\n      \"&capcap;\": \"⩋\",\n      \"&capcup;\": \"⩇\",\n      \"&capdot;\": \"⩀\",\n      \"&caps;\": \"∩︀\",\n      \"&caret;\": \"⁁\",\n      \"&caron;\": \"ˇ\",\n      \"&ccaps;\": \"⩍\",\n      \"&ccaron;\": \"č\",\n      \"&ccedil\": \"ç\",\n      \"&ccedil;\": \"ç\",\n      \"&ccirc;\": \"ĉ\",\n      \"&ccups;\": \"⩌\",\n      \"&ccupssm;\": \"⩐\",\n      \"&cdot;\": \"ċ\",\n      \"&cedil\": \"¸\",\n      \"&cedil;\": \"¸\",\n      \"&cemptyv;\": \"⦲\",\n      \"&cent\": \"¢\",\n      \"&cent;\": \"¢\",\n      \"&centerdot;\": \"·\",\n      \"&cfr;\": \"𝔠\",\n      \"&chcy;\": \"ч\",\n      \"&check;\": \"✓\",\n      \"&checkmark;\": \"✓\",\n      \"&chi;\": \"χ\",\n      \"&cir;\": \"○\",\n      \"&cirE;\": \"⧃\",\n      \"&circ;\": \"ˆ\",\n      \"&circeq;\": \"≗\",\n      \"&circlearrowleft;\": \"↺\",\n      \"&circlearrowright;\": \"↻\",\n      \"&circledR;\": \"®\",\n      \"&circledS;\": \"Ⓢ\",\n      \"&circledast;\": \"⊛\",\n      \"&circledcirc;\": \"⊚\",\n      \"&circleddash;\": \"⊝\",\n      \"&cire;\": \"≗\",\n      \"&cirfnint;\": \"⨐\",\n      \"&cirmid;\": \"⫯\",\n      \"&cirscir;\": \"⧂\",\n      \"&clubs;\": \"♣\",\n      \"&clubsuit;\": \"♣\",\n      \"&colon;\": \":\",\n      \"&colone;\": \"≔\",\n      \"&coloneq;\": \"≔\",\n      \"&comma;\": \",\",\n      \"&commat;\": \"@\",\n      \"&comp;\": \"∁\",\n      \"&compfn;\": \"∘\",\n      \"&complement;\": \"∁\",\n      \"&complexes;\": \"ℂ\",\n      \"&cong;\": \"≅\",\n      \"&congdot;\": \"⩭\",\n      \"&conint;\": \"∮\",\n      \"&copf;\": \"𝕔\",\n      \"&coprod;\": \"∐\",\n      \"&copy\": \"©\",\n      \"&copy;\": \"©\",\n      \"&copysr;\": \"℗\",\n      \"&crarr;\": \"↵\",\n      \"&cross;\": \"✗\",\n      \"&cscr;\": \"𝒸\",\n      \"&csub;\": \"⫏\",\n      \"&csube;\": \"⫑\",\n      \"&csup;\": \"⫐\",\n      \"&csupe;\": \"⫒\",\n      \"&ctdot;\": \"⋯\",\n      \"&cudarrl;\": \"⤸\",\n      \"&cudarrr;\": \"⤵\",\n      \"&cuepr;\": \"⋞\",\n      \"&cuesc;\": \"⋟\",\n      \"&cularr;\": \"↶\",\n      \"&cularrp;\": \"⤽\",\n      \"&cup;\": \"∪\",\n      \"&cupbrcap;\": \"⩈\",\n      \"&cupcap;\": \"⩆\",\n      \"&cupcup;\": \"⩊\",\n      \"&cupdot;\": \"⊍\",\n      \"&cupor;\": \"⩅\",\n      \"&cups;\": \"∪︀\",\n      \"&curarr;\": \"↷\",\n      \"&curarrm;\": \"⤼\",\n      \"&curlyeqprec;\": \"⋞\",\n      \"&curlyeqsucc;\": \"⋟\",\n      \"&curlyvee;\": \"⋎\",\n      \"&curlywedge;\": \"⋏\",\n      \"&curren\": \"¤\",\n      \"&curren;\": \"¤\",\n      \"&curvearrowleft;\": \"↶\",\n      \"&curvearrowright;\": \"↷\",\n      \"&cuvee;\": \"⋎\",\n      \"&cuwed;\": \"⋏\",\n      \"&cwconint;\": \"∲\",\n      \"&cwint;\": \"∱\",\n      \"&cylcty;\": \"⌭\",\n      \"&dArr;\": \"⇓\",\n      \"&dHar;\": \"⥥\",\n      \"&dagger;\": \"†\",\n      \"&daleth;\": \"ℸ\",\n      \"&darr;\": \"↓\",\n      \"&dash;\": \"‐\",\n      \"&dashv;\": \"⊣\",\n      \"&dbkarow;\": \"⤏\",\n      \"&dblac;\": \"˝\",\n      \"&dcaron;\": \"ď\",\n      \"&dcy;\": \"д\",\n      \"&dd;\": \"ⅆ\",\n      \"&ddagger;\": \"‡\",\n      \"&ddarr;\": \"⇊\",\n      \"&ddotseq;\": \"⩷\",\n      \"&deg\": \"°\",\n      \"&deg;\": \"°\",\n      \"&delta;\": \"δ\",\n      \"&demptyv;\": \"⦱\",\n      \"&dfisht;\": \"⥿\",\n      \"&dfr;\": \"𝔡\",\n      \"&dharl;\": \"⇃\",\n      \"&dharr;\": \"⇂\",\n      \"&diam;\": \"⋄\",\n      \"&diamond;\": \"⋄\",\n      \"&diamondsuit;\": \"♦\",\n      \"&diams;\": \"♦\",\n      \"&die;\": \"¨\",\n      \"&digamma;\": \"ϝ\",\n      \"&disin;\": \"⋲\",\n      \"&div;\": \"÷\",\n      \"&divide\": \"÷\",\n      \"&divide;\": \"÷\",\n      \"&divideontimes;\": \"⋇\",\n      \"&divonx;\": \"⋇\",\n      \"&djcy;\": \"ђ\",\n      \"&dlcorn;\": \"⌞\",\n      \"&dlcrop;\": \"⌍\",\n      \"&dollar;\": \"$\",\n      \"&dopf;\": \"𝕕\",\n      \"&dot;\": \"˙\",\n      \"&doteq;\": \"≐\",\n      \"&doteqdot;\": \"≑\",\n      \"&dotminus;\": \"∸\",\n      \"&dotplus;\": \"∔\",\n      \"&dotsquare;\": \"⊡\",\n      \"&doublebarwedge;\": \"⌆\",\n      \"&downarrow;\": \"↓\",\n      \"&downdownarrows;\": \"⇊\",\n      \"&downharpoonleft;\": \"⇃\",\n      \"&downharpoonright;\": \"⇂\",\n      \"&drbkarow;\": \"⤐\",\n      \"&drcorn;\": \"⌟\",\n      \"&drcrop;\": \"⌌\",\n      \"&dscr;\": \"𝒹\",\n      \"&dscy;\": \"ѕ\",\n      \"&dsol;\": \"⧶\",\n      \"&dstrok;\": \"đ\",\n      \"&dtdot;\": \"⋱\",\n      \"&dtri;\": \"▿\",\n      \"&dtrif;\": \"▾\",\n      \"&duarr;\": \"⇵\",\n      \"&duhar;\": \"⥯\",\n      \"&dwangle;\": \"⦦\",\n      \"&dzcy;\": \"џ\",\n      \"&dzigrarr;\": \"⟿\",\n      \"&eDDot;\": \"⩷\",\n      \"&eDot;\": \"≑\",\n      \"&eacute\": \"é\",\n      \"&eacute;\": \"é\",\n      \"&easter;\": \"⩮\",\n      \"&ecaron;\": \"ě\",\n      \"&ecir;\": \"≖\",\n      \"&ecirc\": \"ê\",\n      \"&ecirc;\": \"ê\",\n      \"&ecolon;\": \"≕\",\n      \"&ecy;\": \"э\",\n      \"&edot;\": \"ė\",\n      \"&ee;\": \"ⅇ\",\n      \"&efDot;\": \"≒\",\n      \"&efr;\": \"𝔢\",\n      \"&eg;\": \"⪚\",\n      \"&egrave\": \"è\",\n      \"&egrave;\": \"è\",\n      \"&egs;\": \"⪖\",\n      \"&egsdot;\": \"⪘\",\n      \"&el;\": \"⪙\",\n      \"&elinters;\": \"⏧\",\n      \"&ell;\": \"ℓ\",\n      \"&els;\": \"⪕\",\n      \"&elsdot;\": \"⪗\",\n      \"&emacr;\": \"ē\",\n      \"&empty;\": \"∅\",\n      \"&emptyset;\": \"∅\",\n      \"&emptyv;\": \"∅\",\n      \"&emsp13;\": \" \",\n      \"&emsp14;\": \" \",\n      \"&emsp;\": \" \",\n      \"&eng;\": \"ŋ\",\n      \"&ensp;\": \" \",\n      \"&eogon;\": \"ę\",\n      \"&eopf;\": \"𝕖\",\n      \"&epar;\": \"⋕\",\n      \"&eparsl;\": \"⧣\",\n      \"&eplus;\": \"⩱\",\n      \"&epsi;\": \"ε\",\n      \"&epsilon;\": \"ε\",\n      \"&epsiv;\": \"ϵ\",\n      \"&eqcirc;\": \"≖\",\n      \"&eqcolon;\": \"≕\",\n      \"&eqsim;\": \"≂\",\n      \"&eqslantgtr;\": \"⪖\",\n      \"&eqslantless;\": \"⪕\",\n      \"&equals;\": \"=\",\n      \"&equest;\": \"≟\",\n      \"&equiv;\": \"≡\",\n      \"&equivDD;\": \"⩸\",\n      \"&eqvparsl;\": \"⧥\",\n      \"&erDot;\": \"≓\",\n      \"&erarr;\": \"⥱\",\n      \"&escr;\": \"ℯ\",\n      \"&esdot;\": \"≐\",\n      \"&esim;\": \"≂\",\n      \"&eta;\": \"η\",\n      \"&eth\": \"ð\",\n      \"&eth;\": \"ð\",\n      \"&euml\": \"ë\",\n      \"&euml;\": \"ë\",\n      \"&euro;\": \"€\",\n      \"&excl;\": \"!\",\n      \"&exist;\": \"∃\",\n      \"&expectation;\": \"ℰ\",\n      \"&exponentiale;\": \"ⅇ\",\n      \"&fallingdotseq;\": \"≒\",\n      \"&fcy;\": \"ф\",\n      \"&female;\": \"♀\",\n      \"&ffilig;\": \"ﬃ\",\n      \"&fflig;\": \"ﬀ\",\n      \"&ffllig;\": \"ﬄ\",\n      \"&ffr;\": \"𝔣\",\n      \"&filig;\": \"ﬁ\",\n      \"&fjlig;\": \"fj\",\n      \"&flat;\": \"♭\",\n      \"&fllig;\": \"ﬂ\",\n      \"&fltns;\": \"▱\",\n      \"&fnof;\": \"ƒ\",\n      \"&fopf;\": \"𝕗\",\n      \"&forall;\": \"∀\",\n      \"&fork;\": \"⋔\",\n      \"&forkv;\": \"⫙\",\n      \"&fpartint;\": \"⨍\",\n      \"&frac12\": \"½\",\n      \"&frac12;\": \"½\",\n      \"&frac13;\": \"⅓\",\n      \"&frac14\": \"¼\",\n      \"&frac14;\": \"¼\",\n      \"&frac15;\": \"⅕\",\n      \"&frac16;\": \"⅙\",\n      \"&frac18;\": \"⅛\",\n      \"&frac23;\": \"⅔\",\n      \"&frac25;\": \"⅖\",\n      \"&frac34\": \"¾\",\n      \"&frac34;\": \"¾\",\n      \"&frac35;\": \"⅗\",\n      \"&frac38;\": \"⅜\",\n      \"&frac45;\": \"⅘\",\n      \"&frac56;\": \"⅚\",\n      \"&frac58;\": \"⅝\",\n      \"&frac78;\": \"⅞\",\n      \"&frasl;\": \"⁄\",\n      \"&frown;\": \"⌢\",\n      \"&fscr;\": \"𝒻\",\n      \"&gE;\": \"≧\",\n      \"&gEl;\": \"⪌\",\n      \"&gacute;\": \"ǵ\",\n      \"&gamma;\": \"γ\",\n      \"&gammad;\": \"ϝ\",\n      \"&gap;\": \"⪆\",\n      \"&gbreve;\": \"ğ\",\n      \"&gcirc;\": \"ĝ\",\n      \"&gcy;\": \"г\",\n      \"&gdot;\": \"ġ\",\n      \"&ge;\": \"≥\",\n      \"&gel;\": \"⋛\",\n      \"&geq;\": \"≥\",\n      \"&geqq;\": \"≧\",\n      \"&geqslant;\": \"⩾\",\n      \"&ges;\": \"⩾\",\n      \"&gescc;\": \"⪩\",\n      \"&gesdot;\": \"⪀\",\n      \"&gesdoto;\": \"⪂\",\n      \"&gesdotol;\": \"⪄\",\n      \"&gesl;\": \"⋛︀\",\n      \"&gesles;\": \"⪔\",\n      \"&gfr;\": \"𝔤\",\n      \"&gg;\": \"≫\",\n      \"&ggg;\": \"⋙\",\n      \"&gimel;\": \"ℷ\",\n      \"&gjcy;\": \"ѓ\",\n      \"&gl;\": \"≷\",\n      \"&glE;\": \"⪒\",\n      \"&gla;\": \"⪥\",\n      \"&glj;\": \"⪤\",\n      \"&gnE;\": \"≩\",\n      \"&gnap;\": \"⪊\",\n      \"&gnapprox;\": \"⪊\",\n      \"&gne;\": \"⪈\",\n      \"&gneq;\": \"⪈\",\n      \"&gneqq;\": \"≩\",\n      \"&gnsim;\": \"⋧\",\n      \"&gopf;\": \"𝕘\",\n      \"&grave;\": \"`\",\n      \"&gscr;\": \"ℊ\",\n      \"&gsim;\": \"≳\",\n      \"&gsime;\": \"⪎\",\n      \"&gsiml;\": \"⪐\",\n      \"&gt\": \">\",\n      \"&gt;\": \">\",\n      \"&gtcc;\": \"⪧\",\n      \"&gtcir;\": \"⩺\",\n      \"&gtdot;\": \"⋗\",\n      \"&gtlPar;\": \"⦕\",\n      \"&gtquest;\": \"⩼\",\n      \"&gtrapprox;\": \"⪆\",\n      \"&gtrarr;\": \"⥸\",\n      \"&gtrdot;\": \"⋗\",\n      \"&gtreqless;\": \"⋛\",\n      \"&gtreqqless;\": \"⪌\",\n      \"&gtrless;\": \"≷\",\n      \"&gtrsim;\": \"≳\",\n      \"&gvertneqq;\": \"≩︀\",\n      \"&gvnE;\": \"≩︀\",\n      \"&hArr;\": \"⇔\",\n      \"&hairsp;\": \" \",\n      \"&half;\": \"½\",\n      \"&hamilt;\": \"ℋ\",\n      \"&hardcy;\": \"ъ\",\n      \"&harr;\": \"↔\",\n      \"&harrcir;\": \"⥈\",\n      \"&harrw;\": \"↭\",\n      \"&hbar;\": \"ℏ\",\n      \"&hcirc;\": \"ĥ\",\n      \"&hearts;\": \"♥\",\n      \"&heartsuit;\": \"♥\",\n      \"&hellip;\": \"…\",\n      \"&hercon;\": \"⊹\",\n      \"&hfr;\": \"𝔥\",\n      \"&hksearow;\": \"⤥\",\n      \"&hkswarow;\": \"⤦\",\n      \"&hoarr;\": \"⇿\",\n      \"&homtht;\": \"∻\",\n      \"&hookleftarrow;\": \"↩\",\n      \"&hookrightarrow;\": \"↪\",\n      \"&hopf;\": \"𝕙\",\n      \"&horbar;\": \"―\",\n      \"&hscr;\": \"𝒽\",\n      \"&hslash;\": \"ℏ\",\n      \"&hstrok;\": \"ħ\",\n      \"&hybull;\": \"⁃\",\n      \"&hyphen;\": \"‐\",\n      \"&iacute\": \"í\",\n      \"&iacute;\": \"í\",\n      \"&ic;\": \"⁣\",\n      \"&icirc\": \"î\",\n      \"&icirc;\": \"î\",\n      \"&icy;\": \"и\",\n      \"&iecy;\": \"е\",\n      \"&iexcl\": \"¡\",\n      \"&iexcl;\": \"¡\",\n      \"&iff;\": \"⇔\",\n      \"&ifr;\": \"𝔦\",\n      \"&igrave\": \"ì\",\n      \"&igrave;\": \"ì\",\n      \"&ii;\": \"ⅈ\",\n      \"&iiiint;\": \"⨌\",\n      \"&iiint;\": \"∭\",\n      \"&iinfin;\": \"⧜\",\n      \"&iiota;\": \"℩\",\n      \"&ijlig;\": \"ĳ\",\n      \"&imacr;\": \"ī\",\n      \"&image;\": \"ℑ\",\n      \"&imagline;\": \"ℐ\",\n      \"&imagpart;\": \"ℑ\",\n      \"&imath;\": \"ı\",\n      \"&imof;\": \"⊷\",\n      \"&imped;\": \"Ƶ\",\n      \"&in;\": \"∈\",\n      \"&incare;\": \"℅\",\n      \"&infin;\": \"∞\",\n      \"&infintie;\": \"⧝\",\n      \"&inodot;\": \"ı\",\n      \"&int;\": \"∫\",\n      \"&intcal;\": \"⊺\",\n      \"&integers;\": \"ℤ\",\n      \"&intercal;\": \"⊺\",\n      \"&intlarhk;\": \"⨗\",\n      \"&intprod;\": \"⨼\",\n      \"&iocy;\": \"ё\",\n      \"&iogon;\": \"į\",\n      \"&iopf;\": \"𝕚\",\n      \"&iota;\": \"ι\",\n      \"&iprod;\": \"⨼\",\n      \"&iquest\": \"¿\",\n      \"&iquest;\": \"¿\",\n      \"&iscr;\": \"𝒾\",\n      \"&isin;\": \"∈\",\n      \"&isinE;\": \"⋹\",\n      \"&isindot;\": \"⋵\",\n      \"&isins;\": \"⋴\",\n      \"&isinsv;\": \"⋳\",\n      \"&isinv;\": \"∈\",\n      \"&it;\": \"⁢\",\n      \"&itilde;\": \"ĩ\",\n      \"&iukcy;\": \"і\",\n      \"&iuml\": \"ï\",\n      \"&iuml;\": \"ï\",\n      \"&jcirc;\": \"ĵ\",\n      \"&jcy;\": \"й\",\n      \"&jfr;\": \"𝔧\",\n      \"&jmath;\": \"ȷ\",\n      \"&jopf;\": \"𝕛\",\n      \"&jscr;\": \"𝒿\",\n      \"&jsercy;\": \"ј\",\n      \"&jukcy;\": \"є\",\n      \"&kappa;\": \"κ\",\n      \"&kappav;\": \"ϰ\",\n      \"&kcedil;\": \"ķ\",\n      \"&kcy;\": \"к\",\n      \"&kfr;\": \"𝔨\",\n      \"&kgreen;\": \"ĸ\",\n      \"&khcy;\": \"х\",\n      \"&kjcy;\": \"ќ\",\n      \"&kopf;\": \"𝕜\",\n      \"&kscr;\": \"𝓀\",\n      \"&lAarr;\": \"⇚\",\n      \"&lArr;\": \"⇐\",\n      \"&lAtail;\": \"⤛\",\n      \"&lBarr;\": \"⤎\",\n      \"&lE;\": \"≦\",\n      \"&lEg;\": \"⪋\",\n      \"&lHar;\": \"⥢\",\n      \"&lacute;\": \"ĺ\",\n      \"&laemptyv;\": \"⦴\",\n      \"&lagran;\": \"ℒ\",\n      \"&lambda;\": \"λ\",\n      \"&lang;\": \"⟨\",\n      \"&langd;\": \"⦑\",\n      \"&langle;\": \"⟨\",\n      \"&lap;\": \"⪅\",\n      \"&laquo\": \"«\",\n      \"&laquo;\": \"«\",\n      \"&larr;\": \"←\",\n      \"&larrb;\": \"⇤\",\n      \"&larrbfs;\": \"⤟\",\n      \"&larrfs;\": \"⤝\",\n      \"&larrhk;\": \"↩\",\n      \"&larrlp;\": \"↫\",\n      \"&larrpl;\": \"⤹\",\n      \"&larrsim;\": \"⥳\",\n      \"&larrtl;\": \"↢\",\n      \"&lat;\": \"⪫\",\n      \"&latail;\": \"⤙\",\n      \"&late;\": \"⪭\",\n      \"&lates;\": \"⪭︀\",\n      \"&lbarr;\": \"⤌\",\n      \"&lbbrk;\": \"❲\",\n      \"&lbrace;\": \"{\",\n      \"&lbrack;\": \"[\",\n      \"&lbrke;\": \"⦋\",\n      \"&lbrksld;\": \"⦏\",\n      \"&lbrkslu;\": \"⦍\",\n      \"&lcaron;\": \"ľ\",\n      \"&lcedil;\": \"ļ\",\n      \"&lceil;\": \"⌈\",\n      \"&lcub;\": \"{\",\n      \"&lcy;\": \"л\",\n      \"&ldca;\": \"⤶\",\n      \"&ldquo;\": \"“\",\n      \"&ldquor;\": \"„\",\n      \"&ldrdhar;\": \"⥧\",\n      \"&ldrushar;\": \"⥋\",\n      \"&ldsh;\": \"↲\",\n      \"&le;\": \"≤\",\n      \"&leftarrow;\": \"←\",\n      \"&leftarrowtail;\": \"↢\",\n      \"&leftharpoondown;\": \"↽\",\n      \"&leftharpoonup;\": \"↼\",\n      \"&leftleftarrows;\": \"⇇\",\n      \"&leftrightarrow;\": \"↔\",\n      \"&leftrightarrows;\": \"⇆\",\n      \"&leftrightharpoons;\": \"⇋\",\n      \"&leftrightsquigarrow;\": \"↭\",\n      \"&leftthreetimes;\": \"⋋\",\n      \"&leg;\": \"⋚\",\n      \"&leq;\": \"≤\",\n      \"&leqq;\": \"≦\",\n      \"&leqslant;\": \"⩽\",\n      \"&les;\": \"⩽\",\n      \"&lescc;\": \"⪨\",\n      \"&lesdot;\": \"⩿\",\n      \"&lesdoto;\": \"⪁\",\n      \"&lesdotor;\": \"⪃\",\n      \"&lesg;\": \"⋚︀\",\n      \"&lesges;\": \"⪓\",\n      \"&lessapprox;\": \"⪅\",\n      \"&lessdot;\": \"⋖\",\n      \"&lesseqgtr;\": \"⋚\",\n      \"&lesseqqgtr;\": \"⪋\",\n      \"&lessgtr;\": \"≶\",\n      \"&lesssim;\": \"≲\",\n      \"&lfisht;\": \"⥼\",\n      \"&lfloor;\": \"⌊\",\n      \"&lfr;\": \"𝔩\",\n      \"&lg;\": \"≶\",\n      \"&lgE;\": \"⪑\",\n      \"&lhard;\": \"↽\",\n      \"&lharu;\": \"↼\",\n      \"&lharul;\": \"⥪\",\n      \"&lhblk;\": \"▄\",\n      \"&ljcy;\": \"љ\",\n      \"&ll;\": \"≪\",\n      \"&llarr;\": \"⇇\",\n      \"&llcorner;\": \"⌞\",\n      \"&llhard;\": \"⥫\",\n      \"&lltri;\": \"◺\",\n      \"&lmidot;\": \"ŀ\",\n      \"&lmoust;\": \"⎰\",\n      \"&lmoustache;\": \"⎰\",\n      \"&lnE;\": \"≨\",\n      \"&lnap;\": \"⪉\",\n      \"&lnapprox;\": \"⪉\",\n      \"&lne;\": \"⪇\",\n      \"&lneq;\": \"⪇\",\n      \"&lneqq;\": \"≨\",\n      \"&lnsim;\": \"⋦\",\n      \"&loang;\": \"⟬\",\n      \"&loarr;\": \"⇽\",\n      \"&lobrk;\": \"⟦\",\n      \"&longleftarrow;\": \"⟵\",\n      \"&longleftrightarrow;\": \"⟷\",\n      \"&longmapsto;\": \"⟼\",\n      \"&longrightarrow;\": \"⟶\",\n      \"&looparrowleft;\": \"↫\",\n      \"&looparrowright;\": \"↬\",\n      \"&lopar;\": \"⦅\",\n      \"&lopf;\": \"𝕝\",\n      \"&loplus;\": \"⨭\",\n      \"&lotimes;\": \"⨴\",\n      \"&lowast;\": \"∗\",\n      \"&lowbar;\": \"_\",\n      \"&loz;\": \"◊\",\n      \"&lozenge;\": \"◊\",\n      \"&lozf;\": \"⧫\",\n      \"&lpar;\": \"(\",\n      \"&lparlt;\": \"⦓\",\n      \"&lrarr;\": \"⇆\",\n      \"&lrcorner;\": \"⌟\",\n      \"&lrhar;\": \"⇋\",\n      \"&lrhard;\": \"⥭\",\n      \"&lrm;\": \"‎\",\n      \"&lrtri;\": \"⊿\",\n      \"&lsaquo;\": \"‹\",\n      \"&lscr;\": \"𝓁\",\n      \"&lsh;\": \"↰\",\n      \"&lsim;\": \"≲\",\n      \"&lsime;\": \"⪍\",\n      \"&lsimg;\": \"⪏\",\n      \"&lsqb;\": \"[\",\n      \"&lsquo;\": \"‘\",\n      \"&lsquor;\": \"‚\",\n      \"&lstrok;\": \"ł\",\n      \"&lt\": \"<\",\n      \"&lt;\": \"<\",\n      \"&ltcc;\": \"⪦\",\n      \"&ltcir;\": \"⩹\",\n      \"&ltdot;\": \"⋖\",\n      \"&lthree;\": \"⋋\",\n      \"&ltimes;\": \"⋉\",\n      \"&ltlarr;\": \"⥶\",\n      \"&ltquest;\": \"⩻\",\n      \"&ltrPar;\": \"⦖\",\n      \"&ltri;\": \"◃\",\n      \"&ltrie;\": \"⊴\",\n      \"&ltrif;\": \"◂\",\n      \"&lurdshar;\": \"⥊\",\n      \"&luruhar;\": \"⥦\",\n      \"&lvertneqq;\": \"≨︀\",\n      \"&lvnE;\": \"≨︀\",\n      \"&mDDot;\": \"∺\",\n      \"&macr\": \"¯\",\n      \"&macr;\": \"¯\",\n      \"&male;\": \"♂\",\n      \"&malt;\": \"✠\",\n      \"&maltese;\": \"✠\",\n      \"&map;\": \"↦\",\n      \"&mapsto;\": \"↦\",\n      \"&mapstodown;\": \"↧\",\n      \"&mapstoleft;\": \"↤\",\n      \"&mapstoup;\": \"↥\",\n      \"&marker;\": \"▮\",\n      \"&mcomma;\": \"⨩\",\n      \"&mcy;\": \"м\",\n      \"&mdash;\": \"—\",\n      \"&measuredangle;\": \"∡\",\n      \"&mfr;\": \"𝔪\",\n      \"&mho;\": \"℧\",\n      \"&micro\": \"µ\",\n      \"&micro;\": \"µ\",\n      \"&mid;\": \"∣\",\n      \"&midast;\": \"*\",\n      \"&midcir;\": \"⫰\",\n      \"&middot\": \"·\",\n      \"&middot;\": \"·\",\n      \"&minus;\": \"−\",\n      \"&minusb;\": \"⊟\",\n      \"&minusd;\": \"∸\",\n      \"&minusdu;\": \"⨪\",\n      \"&mlcp;\": \"⫛\",\n      \"&mldr;\": \"…\",\n      \"&mnplus;\": \"∓\",\n      \"&models;\": \"⊧\",\n      \"&mopf;\": \"𝕞\",\n      \"&mp;\": \"∓\",\n      \"&mscr;\": \"𝓂\",\n      \"&mstpos;\": \"∾\",\n      \"&mu;\": \"μ\",\n      \"&multimap;\": \"⊸\",\n      \"&mumap;\": \"⊸\",\n      \"&nGg;\": \"⋙̸\",\n      \"&nGt;\": \"≫⃒\",\n      \"&nGtv;\": \"≫̸\",\n      \"&nLeftarrow;\": \"⇍\",\n      \"&nLeftrightarrow;\": \"⇎\",\n      \"&nLl;\": \"⋘̸\",\n      \"&nLt;\": \"≪⃒\",\n      \"&nLtv;\": \"≪̸\",\n      \"&nRightarrow;\": \"⇏\",\n      \"&nVDash;\": \"⊯\",\n      \"&nVdash;\": \"⊮\",\n      \"&nabla;\": \"∇\",\n      \"&nacute;\": \"ń\",\n      \"&nang;\": \"∠⃒\",\n      \"&nap;\": \"≉\",\n      \"&napE;\": \"⩰̸\",\n      \"&napid;\": \"≋̸\",\n      \"&napos;\": \"ŉ\",\n      \"&napprox;\": \"≉\",\n      \"&natur;\": \"♮\",\n      \"&natural;\": \"♮\",\n      \"&naturals;\": \"ℕ\",\n      \"&nbsp\": \" \",\n      \"&nbsp;\": \" \",\n      \"&nbump;\": \"≎̸\",\n      \"&nbumpe;\": \"≏̸\",\n      \"&ncap;\": \"⩃\",\n      \"&ncaron;\": \"ň\",\n      \"&ncedil;\": \"ņ\",\n      \"&ncong;\": \"≇\",\n      \"&ncongdot;\": \"⩭̸\",\n      \"&ncup;\": \"⩂\",\n      \"&ncy;\": \"н\",\n      \"&ndash;\": \"–\",\n      \"&ne;\": \"≠\",\n      \"&neArr;\": \"⇗\",\n      \"&nearhk;\": \"⤤\",\n      \"&nearr;\": \"↗\",\n      \"&nearrow;\": \"↗\",\n      \"&nedot;\": \"≐̸\",\n      \"&nequiv;\": \"≢\",\n      \"&nesear;\": \"⤨\",\n      \"&nesim;\": \"≂̸\",\n      \"&nexist;\": \"∄\",\n      \"&nexists;\": \"∄\",\n      \"&nfr;\": \"𝔫\",\n      \"&ngE;\": \"≧̸\",\n      \"&nge;\": \"≱\",\n      \"&ngeq;\": \"≱\",\n      \"&ngeqq;\": \"≧̸\",\n      \"&ngeqslant;\": \"⩾̸\",\n      \"&nges;\": \"⩾̸\",\n      \"&ngsim;\": \"≵\",\n      \"&ngt;\": \"≯\",\n      \"&ngtr;\": \"≯\",\n      \"&nhArr;\": \"⇎\",\n      \"&nharr;\": \"↮\",\n      \"&nhpar;\": \"⫲\",\n      \"&ni;\": \"∋\",\n      \"&nis;\": \"⋼\",\n      \"&nisd;\": \"⋺\",\n      \"&niv;\": \"∋\",\n      \"&njcy;\": \"њ\",\n      \"&nlArr;\": \"⇍\",\n      \"&nlE;\": \"≦̸\",\n      \"&nlarr;\": \"↚\",\n      \"&nldr;\": \"‥\",\n      \"&nle;\": \"≰\",\n      \"&nleftarrow;\": \"↚\",\n      \"&nleftrightarrow;\": \"↮\",\n      \"&nleq;\": \"≰\",\n      \"&nleqq;\": \"≦̸\",\n      \"&nleqslant;\": \"⩽̸\",\n      \"&nles;\": \"⩽̸\",\n      \"&nless;\": \"≮\",\n      \"&nlsim;\": \"≴\",\n      \"&nlt;\": \"≮\",\n      \"&nltri;\": \"⋪\",\n      \"&nltrie;\": \"⋬\",\n      \"&nmid;\": \"∤\",\n      \"&nopf;\": \"𝕟\",\n      \"&not\": \"¬\",\n      \"&not;\": \"¬\",\n      \"&notin;\": \"∉\",\n      \"&notinE;\": \"⋹̸\",\n      \"&notindot;\": \"⋵̸\",\n      \"&notinva;\": \"∉\",\n      \"&notinvb;\": \"⋷\",\n      \"&notinvc;\": \"⋶\",\n      \"&notni;\": \"∌\",\n      \"&notniva;\": \"∌\",\n      \"&notnivb;\": \"⋾\",\n      \"&notnivc;\": \"⋽\",\n      \"&npar;\": \"∦\",\n      \"&nparallel;\": \"∦\",\n      \"&nparsl;\": \"⫽⃥\",\n      \"&npart;\": \"∂̸\",\n      \"&npolint;\": \"⨔\",\n      \"&npr;\": \"⊀\",\n      \"&nprcue;\": \"⋠\",\n      \"&npre;\": \"⪯̸\",\n      \"&nprec;\": \"⊀\",\n      \"&npreceq;\": \"⪯̸\",\n      \"&nrArr;\": \"⇏\",\n      \"&nrarr;\": \"↛\",\n      \"&nrarrc;\": \"⤳̸\",\n      \"&nrarrw;\": \"↝̸\",\n      \"&nrightarrow;\": \"↛\",\n      \"&nrtri;\": \"⋫\",\n      \"&nrtrie;\": \"⋭\",\n      \"&nsc;\": \"⊁\",\n      \"&nsccue;\": \"⋡\",\n      \"&nsce;\": \"⪰̸\",\n      \"&nscr;\": \"𝓃\",\n      \"&nshortmid;\": \"∤\",\n      \"&nshortparallel;\": \"∦\",\n      \"&nsim;\": \"≁\",\n      \"&nsime;\": \"≄\",\n      \"&nsimeq;\": \"≄\",\n      \"&nsmid;\": \"∤\",\n      \"&nspar;\": \"∦\",\n      \"&nsqsube;\": \"⋢\",\n      \"&nsqsupe;\": \"⋣\",\n      \"&nsub;\": \"⊄\",\n      \"&nsubE;\": \"⫅̸\",\n      \"&nsube;\": \"⊈\",\n      \"&nsubset;\": \"⊂⃒\",\n      \"&nsubseteq;\": \"⊈\",\n      \"&nsubseteqq;\": \"⫅̸\",\n      \"&nsucc;\": \"⊁\",\n      \"&nsucceq;\": \"⪰̸\",\n      \"&nsup;\": \"⊅\",\n      \"&nsupE;\": \"⫆̸\",\n      \"&nsupe;\": \"⊉\",\n      \"&nsupset;\": \"⊃⃒\",\n      \"&nsupseteq;\": \"⊉\",\n      \"&nsupseteqq;\": \"⫆̸\",\n      \"&ntgl;\": \"≹\",\n      \"&ntilde\": \"ñ\",\n      \"&ntilde;\": \"ñ\",\n      \"&ntlg;\": \"≸\",\n      \"&ntriangleleft;\": \"⋪\",\n      \"&ntrianglelefteq;\": \"⋬\",\n      \"&ntriangleright;\": \"⋫\",\n      \"&ntrianglerighteq;\": \"⋭\",\n      \"&nu;\": \"ν\",\n      \"&num;\": \"#\",\n      \"&numero;\": \"№\",\n      \"&numsp;\": \" \",\n      \"&nvDash;\": \"⊭\",\n      \"&nvHarr;\": \"⤄\",\n      \"&nvap;\": \"≍⃒\",\n      \"&nvdash;\": \"⊬\",\n      \"&nvge;\": \"≥⃒\",\n      \"&nvgt;\": \">⃒\",\n      \"&nvinfin;\": \"⧞\",\n      \"&nvlArr;\": \"⤂\",\n      \"&nvle;\": \"≤⃒\",\n      \"&nvlt;\": \"<⃒\",\n      \"&nvltrie;\": \"⊴⃒\",\n      \"&nvrArr;\": \"⤃\",\n      \"&nvrtrie;\": \"⊵⃒\",\n      \"&nvsim;\": \"∼⃒\",\n      \"&nwArr;\": \"⇖\",\n      \"&nwarhk;\": \"⤣\",\n      \"&nwarr;\": \"↖\",\n      \"&nwarrow;\": \"↖\",\n      \"&nwnear;\": \"⤧\",\n      \"&oS;\": \"Ⓢ\",\n      \"&oacute\": \"ó\",\n      \"&oacute;\": \"ó\",\n      \"&oast;\": \"⊛\",\n      \"&ocir;\": \"⊚\",\n      \"&ocirc\": \"ô\",\n      \"&ocirc;\": \"ô\",\n      \"&ocy;\": \"о\",\n      \"&odash;\": \"⊝\",\n      \"&odblac;\": \"ő\",\n      \"&odiv;\": \"⨸\",\n      \"&odot;\": \"⊙\",\n      \"&odsold;\": \"⦼\",\n      \"&oelig;\": \"œ\",\n      \"&ofcir;\": \"⦿\",\n      \"&ofr;\": \"𝔬\",\n      \"&ogon;\": \"˛\",\n      \"&ograve\": \"ò\",\n      \"&ograve;\": \"ò\",\n      \"&ogt;\": \"⧁\",\n      \"&ohbar;\": \"⦵\",\n      \"&ohm;\": \"Ω\",\n      \"&oint;\": \"∮\",\n      \"&olarr;\": \"↺\",\n      \"&olcir;\": \"⦾\",\n      \"&olcross;\": \"⦻\",\n      \"&oline;\": \"‾\",\n      \"&olt;\": \"⧀\",\n      \"&omacr;\": \"ō\",\n      \"&omega;\": \"ω\",\n      \"&omicron;\": \"ο\",\n      \"&omid;\": \"⦶\",\n      \"&ominus;\": \"⊖\",\n      \"&oopf;\": \"𝕠\",\n      \"&opar;\": \"⦷\",\n      \"&operp;\": \"⦹\",\n      \"&oplus;\": \"⊕\",\n      \"&or;\": \"∨\",\n      \"&orarr;\": \"↻\",\n      \"&ord;\": \"⩝\",\n      \"&order;\": \"ℴ\",\n      \"&orderof;\": \"ℴ\",\n      \"&ordf\": \"ª\",\n      \"&ordf;\": \"ª\",\n      \"&ordm\": \"º\",\n      \"&ordm;\": \"º\",\n      \"&origof;\": \"⊶\",\n      \"&oror;\": \"⩖\",\n      \"&orslope;\": \"⩗\",\n      \"&orv;\": \"⩛\",\n      \"&oscr;\": \"ℴ\",\n      \"&oslash\": \"ø\",\n      \"&oslash;\": \"ø\",\n      \"&osol;\": \"⊘\",\n      \"&otilde\": \"õ\",\n      \"&otilde;\": \"õ\",\n      \"&otimes;\": \"⊗\",\n      \"&otimesas;\": \"⨶\",\n      \"&ouml\": \"ö\",\n      \"&ouml;\": \"ö\",\n      \"&ovbar;\": \"⌽\",\n      \"&par;\": \"∥\",\n      \"&para\": \"¶\",\n      \"&para;\": \"¶\",\n      \"&parallel;\": \"∥\",\n      \"&parsim;\": \"⫳\",\n      \"&parsl;\": \"⫽\",\n      \"&part;\": \"∂\",\n      \"&pcy;\": \"п\",\n      \"&percnt;\": \"%\",\n      \"&period;\": \".\",\n      \"&permil;\": \"‰\",\n      \"&perp;\": \"⊥\",\n      \"&pertenk;\": \"‱\",\n      \"&pfr;\": \"𝔭\",\n      \"&phi;\": \"φ\",\n      \"&phiv;\": \"ϕ\",\n      \"&phmmat;\": \"ℳ\",\n      \"&phone;\": \"☎\",\n      \"&pi;\": \"π\",\n      \"&pitchfork;\": \"⋔\",\n      \"&piv;\": \"ϖ\",\n      \"&planck;\": \"ℏ\",\n      \"&planckh;\": \"ℎ\",\n      \"&plankv;\": \"ℏ\",\n      \"&plus;\": \"+\",\n      \"&plusacir;\": \"⨣\",\n      \"&plusb;\": \"⊞\",\n      \"&pluscir;\": \"⨢\",\n      \"&plusdo;\": \"∔\",\n      \"&plusdu;\": \"⨥\",\n      \"&pluse;\": \"⩲\",\n      \"&plusmn\": \"±\",\n      \"&plusmn;\": \"±\",\n      \"&plussim;\": \"⨦\",\n      \"&plustwo;\": \"⨧\",\n      \"&pm;\": \"±\",\n      \"&pointint;\": \"⨕\",\n      \"&popf;\": \"𝕡\",\n      \"&pound\": \"£\",\n      \"&pound;\": \"£\",\n      \"&pr;\": \"≺\",\n      \"&prE;\": \"⪳\",\n      \"&prap;\": \"⪷\",\n      \"&prcue;\": \"≼\",\n      \"&pre;\": \"⪯\",\n      \"&prec;\": \"≺\",\n      \"&precapprox;\": \"⪷\",\n      \"&preccurlyeq;\": \"≼\",\n      \"&preceq;\": \"⪯\",\n      \"&precnapprox;\": \"⪹\",\n      \"&precneqq;\": \"⪵\",\n      \"&precnsim;\": \"⋨\",\n      \"&precsim;\": \"≾\",\n      \"&prime;\": \"′\",\n      \"&primes;\": \"ℙ\",\n      \"&prnE;\": \"⪵\",\n      \"&prnap;\": \"⪹\",\n      \"&prnsim;\": \"⋨\",\n      \"&prod;\": \"∏\",\n      \"&profalar;\": \"⌮\",\n      \"&profline;\": \"⌒\",\n      \"&profsurf;\": \"⌓\",\n      \"&prop;\": \"∝\",\n      \"&propto;\": \"∝\",\n      \"&prsim;\": \"≾\",\n      \"&prurel;\": \"⊰\",\n      \"&pscr;\": \"𝓅\",\n      \"&psi;\": \"ψ\",\n      \"&puncsp;\": \" \",\n      \"&qfr;\": \"𝔮\",\n      \"&qint;\": \"⨌\",\n      \"&qopf;\": \"𝕢\",\n      \"&qprime;\": \"⁗\",\n      \"&qscr;\": \"𝓆\",\n      \"&quaternions;\": \"ℍ\",\n      \"&quatint;\": \"⨖\",\n      \"&quest;\": \"?\",\n      \"&questeq;\": \"≟\",\n      \"&quot\": '\"',\n      \"&quot;\": '\"',\n      \"&rAarr;\": \"⇛\",\n      \"&rArr;\": \"⇒\",\n      \"&rAtail;\": \"⤜\",\n      \"&rBarr;\": \"⤏\",\n      \"&rHar;\": \"⥤\",\n      \"&race;\": \"∽̱\",\n      \"&racute;\": \"ŕ\",\n      \"&radic;\": \"√\",\n      \"&raemptyv;\": \"⦳\",\n      \"&rang;\": \"⟩\",\n      \"&rangd;\": \"⦒\",\n      \"&range;\": \"⦥\",\n      \"&rangle;\": \"⟩\",\n      \"&raquo\": \"»\",\n      \"&raquo;\": \"»\",\n      \"&rarr;\": \"→\",\n      \"&rarrap;\": \"⥵\",\n      \"&rarrb;\": \"⇥\",\n      \"&rarrbfs;\": \"⤠\",\n      \"&rarrc;\": \"⤳\",\n      \"&rarrfs;\": \"⤞\",\n      \"&rarrhk;\": \"↪\",\n      \"&rarrlp;\": \"↬\",\n      \"&rarrpl;\": \"⥅\",\n      \"&rarrsim;\": \"⥴\",\n      \"&rarrtl;\": \"↣\",\n      \"&rarrw;\": \"↝\",\n      \"&ratail;\": \"⤚\",\n      \"&ratio;\": \"∶\",\n      \"&rationals;\": \"ℚ\",\n      \"&rbarr;\": \"⤍\",\n      \"&rbbrk;\": \"❳\",\n      \"&rbrace;\": \"}\",\n      \"&rbrack;\": \"]\",\n      \"&rbrke;\": \"⦌\",\n      \"&rbrksld;\": \"⦎\",\n      \"&rbrkslu;\": \"⦐\",\n      \"&rcaron;\": \"ř\",\n      \"&rcedil;\": \"ŗ\",\n      \"&rceil;\": \"⌉\",\n      \"&rcub;\": \"}\",\n      \"&rcy;\": \"р\",\n      \"&rdca;\": \"⤷\",\n      \"&rdldhar;\": \"⥩\",\n      \"&rdquo;\": \"”\",\n      \"&rdquor;\": \"”\",\n      \"&rdsh;\": \"↳\",\n      \"&real;\": \"ℜ\",\n      \"&realine;\": \"ℛ\",\n      \"&realpart;\": \"ℜ\",\n      \"&reals;\": \"ℝ\",\n      \"&rect;\": \"▭\",\n      \"&reg\": \"®\",\n      \"&reg;\": \"®\",\n      \"&rfisht;\": \"⥽\",\n      \"&rfloor;\": \"⌋\",\n      \"&rfr;\": \"𝔯\",\n      \"&rhard;\": \"⇁\",\n      \"&rharu;\": \"⇀\",\n      \"&rharul;\": \"⥬\",\n      \"&rho;\": \"ρ\",\n      \"&rhov;\": \"ϱ\",\n      \"&rightarrow;\": \"→\",\n      \"&rightarrowtail;\": \"↣\",\n      \"&rightharpoondown;\": \"⇁\",\n      \"&rightharpoonup;\": \"⇀\",\n      \"&rightleftarrows;\": \"⇄\",\n      \"&rightleftharpoons;\": \"⇌\",\n      \"&rightrightarrows;\": \"⇉\",\n      \"&rightsquigarrow;\": \"↝\",\n      \"&rightthreetimes;\": \"⋌\",\n      \"&ring;\": \"˚\",\n      \"&risingdotseq;\": \"≓\",\n      \"&rlarr;\": \"⇄\",\n      \"&rlhar;\": \"⇌\",\n      \"&rlm;\": \"‏\",\n      \"&rmoust;\": \"⎱\",\n      \"&rmoustache;\": \"⎱\",\n      \"&rnmid;\": \"⫮\",\n      \"&roang;\": \"⟭\",\n      \"&roarr;\": \"⇾\",\n      \"&robrk;\": \"⟧\",\n      \"&ropar;\": \"⦆\",\n      \"&ropf;\": \"𝕣\",\n      \"&roplus;\": \"⨮\",\n      \"&rotimes;\": \"⨵\",\n      \"&rpar;\": \")\",\n      \"&rpargt;\": \"⦔\",\n      \"&rppolint;\": \"⨒\",\n      \"&rrarr;\": \"⇉\",\n      \"&rsaquo;\": \"›\",\n      \"&rscr;\": \"𝓇\",\n      \"&rsh;\": \"↱\",\n      \"&rsqb;\": \"]\",\n      \"&rsquo;\": \"’\",\n      \"&rsquor;\": \"’\",\n      \"&rthree;\": \"⋌\",\n      \"&rtimes;\": \"⋊\",\n      \"&rtri;\": \"▹\",\n      \"&rtrie;\": \"⊵\",\n      \"&rtrif;\": \"▸\",\n      \"&rtriltri;\": \"⧎\",\n      \"&ruluhar;\": \"⥨\",\n      \"&rx;\": \"℞\",\n      \"&sacute;\": \"ś\",\n      \"&sbquo;\": \"‚\",\n      \"&sc;\": \"≻\",\n      \"&scE;\": \"⪴\",\n      \"&scap;\": \"⪸\",\n      \"&scaron;\": \"š\",\n      \"&sccue;\": \"≽\",\n      \"&sce;\": \"⪰\",\n      \"&scedil;\": \"ş\",\n      \"&scirc;\": \"ŝ\",\n      \"&scnE;\": \"⪶\",\n      \"&scnap;\": \"⪺\",\n      \"&scnsim;\": \"⋩\",\n      \"&scpolint;\": \"⨓\",\n      \"&scsim;\": \"≿\",\n      \"&scy;\": \"с\",\n      \"&sdot;\": \"⋅\",\n      \"&sdotb;\": \"⊡\",\n      \"&sdote;\": \"⩦\",\n      \"&seArr;\": \"⇘\",\n      \"&searhk;\": \"⤥\",\n      \"&searr;\": \"↘\",\n      \"&searrow;\": \"↘\",\n      \"&sect\": \"§\",\n      \"&sect;\": \"§\",\n      \"&semi;\": \";\",\n      \"&seswar;\": \"⤩\",\n      \"&setminus;\": \"∖\",\n      \"&setmn;\": \"∖\",\n      \"&sext;\": \"✶\",\n      \"&sfr;\": \"𝔰\",\n      \"&sfrown;\": \"⌢\",\n      \"&sharp;\": \"♯\",\n      \"&shchcy;\": \"щ\",\n      \"&shcy;\": \"ш\",\n      \"&shortmid;\": \"∣\",\n      \"&shortparallel;\": \"∥\",\n      \"&shy\": \"­\",\n      \"&shy;\": \"­\",\n      \"&sigma;\": \"σ\",\n      \"&sigmaf;\": \"ς\",\n      \"&sigmav;\": \"ς\",\n      \"&sim;\": \"∼\",\n      \"&simdot;\": \"⩪\",\n      \"&sime;\": \"≃\",\n      \"&simeq;\": \"≃\",\n      \"&simg;\": \"⪞\",\n      \"&simgE;\": \"⪠\",\n      \"&siml;\": \"⪝\",\n      \"&simlE;\": \"⪟\",\n      \"&simne;\": \"≆\",\n      \"&simplus;\": \"⨤\",\n      \"&simrarr;\": \"⥲\",\n      \"&slarr;\": \"←\",\n      \"&smallsetminus;\": \"∖\",\n      \"&smashp;\": \"⨳\",\n      \"&smeparsl;\": \"⧤\",\n      \"&smid;\": \"∣\",\n      \"&smile;\": \"⌣\",\n      \"&smt;\": \"⪪\",\n      \"&smte;\": \"⪬\",\n      \"&smtes;\": \"⪬︀\",\n      \"&softcy;\": \"ь\",\n      \"&sol;\": \"/\",\n      \"&solb;\": \"⧄\",\n      \"&solbar;\": \"⌿\",\n      \"&sopf;\": \"𝕤\",\n      \"&spades;\": \"♠\",\n      \"&spadesuit;\": \"♠\",\n      \"&spar;\": \"∥\",\n      \"&sqcap;\": \"⊓\",\n      \"&sqcaps;\": \"⊓︀\",\n      \"&sqcup;\": \"⊔\",\n      \"&sqcups;\": \"⊔︀\",\n      \"&sqsub;\": \"⊏\",\n      \"&sqsube;\": \"⊑\",\n      \"&sqsubset;\": \"⊏\",\n      \"&sqsubseteq;\": \"⊑\",\n      \"&sqsup;\": \"⊐\",\n      \"&sqsupe;\": \"⊒\",\n      \"&sqsupset;\": \"⊐\",\n      \"&sqsupseteq;\": \"⊒\",\n      \"&squ;\": \"□\",\n      \"&square;\": \"□\",\n      \"&squarf;\": \"▪\",\n      \"&squf;\": \"▪\",\n      \"&srarr;\": \"→\",\n      \"&sscr;\": \"𝓈\",\n      \"&ssetmn;\": \"∖\",\n      \"&ssmile;\": \"⌣\",\n      \"&sstarf;\": \"⋆\",\n      \"&star;\": \"☆\",\n      \"&starf;\": \"★\",\n      \"&straightepsilon;\": \"ϵ\",\n      \"&straightphi;\": \"ϕ\",\n      \"&strns;\": \"¯\",\n      \"&sub;\": \"⊂\",\n      \"&subE;\": \"⫅\",\n      \"&subdot;\": \"⪽\",\n      \"&sube;\": \"⊆\",\n      \"&subedot;\": \"⫃\",\n      \"&submult;\": \"⫁\",\n      \"&subnE;\": \"⫋\",\n      \"&subne;\": \"⊊\",\n      \"&subplus;\": \"⪿\",\n      \"&subrarr;\": \"⥹\",\n      \"&subset;\": \"⊂\",\n      \"&subseteq;\": \"⊆\",\n      \"&subseteqq;\": \"⫅\",\n      \"&subsetneq;\": \"⊊\",\n      \"&subsetneqq;\": \"⫋\",\n      \"&subsim;\": \"⫇\",\n      \"&subsub;\": \"⫕\",\n      \"&subsup;\": \"⫓\",\n      \"&succ;\": \"≻\",\n      \"&succapprox;\": \"⪸\",\n      \"&succcurlyeq;\": \"≽\",\n      \"&succeq;\": \"⪰\",\n      \"&succnapprox;\": \"⪺\",\n      \"&succneqq;\": \"⪶\",\n      \"&succnsim;\": \"⋩\",\n      \"&succsim;\": \"≿\",\n      \"&sum;\": \"∑\",\n      \"&sung;\": \"♪\",\n      \"&sup1\": \"¹\",\n      \"&sup1;\": \"¹\",\n      \"&sup2\": \"²\",\n      \"&sup2;\": \"²\",\n      \"&sup3\": \"³\",\n      \"&sup3;\": \"³\",\n      \"&sup;\": \"⊃\",\n      \"&supE;\": \"⫆\",\n      \"&supdot;\": \"⪾\",\n      \"&supdsub;\": \"⫘\",\n      \"&supe;\": \"⊇\",\n      \"&supedot;\": \"⫄\",\n      \"&suphsol;\": \"⟉\",\n      \"&suphsub;\": \"⫗\",\n      \"&suplarr;\": \"⥻\",\n      \"&supmult;\": \"⫂\",\n      \"&supnE;\": \"⫌\",\n      \"&supne;\": \"⊋\",\n      \"&supplus;\": \"⫀\",\n      \"&supset;\": \"⊃\",\n      \"&supseteq;\": \"⊇\",\n      \"&supseteqq;\": \"⫆\",\n      \"&supsetneq;\": \"⊋\",\n      \"&supsetneqq;\": \"⫌\",\n      \"&supsim;\": \"⫈\",\n      \"&supsub;\": \"⫔\",\n      \"&supsup;\": \"⫖\",\n      \"&swArr;\": \"⇙\",\n      \"&swarhk;\": \"⤦\",\n      \"&swarr;\": \"↙\",\n      \"&swarrow;\": \"↙\",\n      \"&swnwar;\": \"⤪\",\n      \"&szlig\": \"ß\",\n      \"&szlig;\": \"ß\",\n      \"&target;\": \"⌖\",\n      \"&tau;\": \"τ\",\n      \"&tbrk;\": \"⎴\",\n      \"&tcaron;\": \"ť\",\n      \"&tcedil;\": \"ţ\",\n      \"&tcy;\": \"т\",\n      \"&tdot;\": \"⃛\",\n      \"&telrec;\": \"⌕\",\n      \"&tfr;\": \"𝔱\",\n      \"&there4;\": \"∴\",\n      \"&therefore;\": \"∴\",\n      \"&theta;\": \"θ\",\n      \"&thetasym;\": \"ϑ\",\n      \"&thetav;\": \"ϑ\",\n      \"&thickapprox;\": \"≈\",\n      \"&thicksim;\": \"∼\",\n      \"&thinsp;\": \" \",\n      \"&thkap;\": \"≈\",\n      \"&thksim;\": \"∼\",\n      \"&thorn\": \"þ\",\n      \"&thorn;\": \"þ\",\n      \"&tilde;\": \"˜\",\n      \"&times\": \"×\",\n      \"&times;\": \"×\",\n      \"&timesb;\": \"⊠\",\n      \"&timesbar;\": \"⨱\",\n      \"&timesd;\": \"⨰\",\n      \"&tint;\": \"∭\",\n      \"&toea;\": \"⤨\",\n      \"&top;\": \"⊤\",\n      \"&topbot;\": \"⌶\",\n      \"&topcir;\": \"⫱\",\n      \"&topf;\": \"𝕥\",\n      \"&topfork;\": \"⫚\",\n      \"&tosa;\": \"⤩\",\n      \"&tprime;\": \"‴\",\n      \"&trade;\": \"™\",\n      \"&triangle;\": \"▵\",\n      \"&triangledown;\": \"▿\",\n      \"&triangleleft;\": \"◃\",\n      \"&trianglelefteq;\": \"⊴\",\n      \"&triangleq;\": \"≜\",\n      \"&triangleright;\": \"▹\",\n      \"&trianglerighteq;\": \"⊵\",\n      \"&tridot;\": \"◬\",\n      \"&trie;\": \"≜\",\n      \"&triminus;\": \"⨺\",\n      \"&triplus;\": \"⨹\",\n      \"&trisb;\": \"⧍\",\n      \"&tritime;\": \"⨻\",\n      \"&trpezium;\": \"⏢\",\n      \"&tscr;\": \"𝓉\",\n      \"&tscy;\": \"ц\",\n      \"&tshcy;\": \"ћ\",\n      \"&tstrok;\": \"ŧ\",\n      \"&twixt;\": \"≬\",\n      \"&twoheadleftarrow;\": \"↞\",\n      \"&twoheadrightarrow;\": \"↠\",\n      \"&uArr;\": \"⇑\",\n      \"&uHar;\": \"⥣\",\n      \"&uacute\": \"ú\",\n      \"&uacute;\": \"ú\",\n      \"&uarr;\": \"↑\",\n      \"&ubrcy;\": \"ў\",\n      \"&ubreve;\": \"ŭ\",\n      \"&ucirc\": \"û\",\n      \"&ucirc;\": \"û\",\n      \"&ucy;\": \"у\",\n      \"&udarr;\": \"⇅\",\n      \"&udblac;\": \"ű\",\n      \"&udhar;\": \"⥮\",\n      \"&ufisht;\": \"⥾\",\n      \"&ufr;\": \"𝔲\",\n      \"&ugrave\": \"ù\",\n      \"&ugrave;\": \"ù\",\n      \"&uharl;\": \"↿\",\n      \"&uharr;\": \"↾\",\n      \"&uhblk;\": \"▀\",\n      \"&ulcorn;\": \"⌜\",\n      \"&ulcorner;\": \"⌜\",\n      \"&ulcrop;\": \"⌏\",\n      \"&ultri;\": \"◸\",\n      \"&umacr;\": \"ū\",\n      \"&uml\": \"¨\",\n      \"&uml;\": \"¨\",\n      \"&uogon;\": \"ų\",\n      \"&uopf;\": \"𝕦\",\n      \"&uparrow;\": \"↑\",\n      \"&updownarrow;\": \"↕\",\n      \"&upharpoonleft;\": \"↿\",\n      \"&upharpoonright;\": \"↾\",\n      \"&uplus;\": \"⊎\",\n      \"&upsi;\": \"υ\",\n      \"&upsih;\": \"ϒ\",\n      \"&upsilon;\": \"υ\",\n      \"&upuparrows;\": \"⇈\",\n      \"&urcorn;\": \"⌝\",\n      \"&urcorner;\": \"⌝\",\n      \"&urcrop;\": \"⌎\",\n      \"&uring;\": \"ů\",\n      \"&urtri;\": \"◹\",\n      \"&uscr;\": \"𝓊\",\n      \"&utdot;\": \"⋰\",\n      \"&utilde;\": \"ũ\",\n      \"&utri;\": \"▵\",\n      \"&utrif;\": \"▴\",\n      \"&uuarr;\": \"⇈\",\n      \"&uuml\": \"ü\",\n      \"&uuml;\": \"ü\",\n      \"&uwangle;\": \"⦧\",\n      \"&vArr;\": \"⇕\",\n      \"&vBar;\": \"⫨\",\n      \"&vBarv;\": \"⫩\",\n      \"&vDash;\": \"⊨\",\n      \"&vangrt;\": \"⦜\",\n      \"&varepsilon;\": \"ϵ\",\n      \"&varkappa;\": \"ϰ\",\n      \"&varnothing;\": \"∅\",\n      \"&varphi;\": \"ϕ\",\n      \"&varpi;\": \"ϖ\",\n      \"&varpropto;\": \"∝\",\n      \"&varr;\": \"↕\",\n      \"&varrho;\": \"ϱ\",\n      \"&varsigma;\": \"ς\",\n      \"&varsubsetneq;\": \"⊊︀\",\n      \"&varsubsetneqq;\": \"⫋︀\",\n      \"&varsupsetneq;\": \"⊋︀\",\n      \"&varsupsetneqq;\": \"⫌︀\",\n      \"&vartheta;\": \"ϑ\",\n      \"&vartriangleleft;\": \"⊲\",\n      \"&vartriangleright;\": \"⊳\",\n      \"&vcy;\": \"в\",\n      \"&vdash;\": \"⊢\",\n      \"&vee;\": \"∨\",\n      \"&veebar;\": \"⊻\",\n      \"&veeeq;\": \"≚\",\n      \"&vellip;\": \"⋮\",\n      \"&verbar;\": \"|\",\n      \"&vert;\": \"|\",\n      \"&vfr;\": \"𝔳\",\n      \"&vltri;\": \"⊲\",\n      \"&vnsub;\": \"⊂⃒\",\n      \"&vnsup;\": \"⊃⃒\",\n      \"&vopf;\": \"𝕧\",\n      \"&vprop;\": \"∝\",\n      \"&vrtri;\": \"⊳\",\n      \"&vscr;\": \"𝓋\",\n      \"&vsubnE;\": \"⫋︀\",\n      \"&vsubne;\": \"⊊︀\",\n      \"&vsupnE;\": \"⫌︀\",\n      \"&vsupne;\": \"⊋︀\",\n      \"&vzigzag;\": \"⦚\",\n      \"&wcirc;\": \"ŵ\",\n      \"&wedbar;\": \"⩟\",\n      \"&wedge;\": \"∧\",\n      \"&wedgeq;\": \"≙\",\n      \"&weierp;\": \"℘\",\n      \"&wfr;\": \"𝔴\",\n      \"&wopf;\": \"𝕨\",\n      \"&wp;\": \"℘\",\n      \"&wr;\": \"≀\",\n      \"&wreath;\": \"≀\",\n      \"&wscr;\": \"𝓌\",\n      \"&xcap;\": \"⋂\",\n      \"&xcirc;\": \"◯\",\n      \"&xcup;\": \"⋃\",\n      \"&xdtri;\": \"▽\",\n      \"&xfr;\": \"𝔵\",\n      \"&xhArr;\": \"⟺\",\n      \"&xharr;\": \"⟷\",\n      \"&xi;\": \"ξ\",\n      \"&xlArr;\": \"⟸\",\n      \"&xlarr;\": \"⟵\",\n      \"&xmap;\": \"⟼\",\n      \"&xnis;\": \"⋻\",\n      \"&xodot;\": \"⨀\",\n      \"&xopf;\": \"𝕩\",\n      \"&xoplus;\": \"⨁\",\n      \"&xotime;\": \"⨂\",\n      \"&xrArr;\": \"⟹\",\n      \"&xrarr;\": \"⟶\",\n      \"&xscr;\": \"𝓍\",\n      \"&xsqcup;\": \"⨆\",\n      \"&xuplus;\": \"⨄\",\n      \"&xutri;\": \"△\",\n      \"&xvee;\": \"⋁\",\n      \"&xwedge;\": \"⋀\",\n      \"&yacute\": \"ý\",\n      \"&yacute;\": \"ý\",\n      \"&yacy;\": \"я\",\n      \"&ycirc;\": \"ŷ\",\n      \"&ycy;\": \"ы\",\n      \"&yen\": \"¥\",\n      \"&yen;\": \"¥\",\n      \"&yfr;\": \"𝔶\",\n      \"&yicy;\": \"ї\",\n      \"&yopf;\": \"𝕪\",\n      \"&yscr;\": \"𝓎\",\n      \"&yucy;\": \"ю\",\n      \"&yuml\": \"ÿ\",\n      \"&yuml;\": \"ÿ\",\n      \"&zacute;\": \"ź\",\n      \"&zcaron;\": \"ž\",\n      \"&zcy;\": \"з\",\n      \"&zdot;\": \"ż\",\n      \"&zeetrf;\": \"ℨ\",\n      \"&zeta;\": \"ζ\",\n      \"&zfr;\": \"𝔷\",\n      \"&zhcy;\": \"ж\",\n      \"&zigrarr;\": \"⇝\",\n      \"&zopf;\": \"𝕫\",\n      \"&zscr;\": \"𝓏\",\n      \"&zwj;\": \"‍\",\n      \"&zwnj;\": \"‌\"\n    },\n    characters: {\n      \"Æ\": \"&AElig;\",\n      \"&\": \"&amp;\",\n      \"Á\": \"&Aacute;\",\n      \"Ă\": \"&Abreve;\",\n      \"Â\": \"&Acirc;\",\n      \"А\": \"&Acy;\",\n      \"𝔄\": \"&Afr;\",\n      \"À\": \"&Agrave;\",\n      \"Α\": \"&Alpha;\",\n      \"Ā\": \"&Amacr;\",\n      \"⩓\": \"&And;\",\n      \"Ą\": \"&Aogon;\",\n      \"𝔸\": \"&Aopf;\",\n      \"⁡\": \"&af;\",\n      \"Å\": \"&angst;\",\n      \"𝒜\": \"&Ascr;\",\n      \"≔\": \"&coloneq;\",\n      \"Ã\": \"&Atilde;\",\n      \"Ä\": \"&Auml;\",\n      \"∖\": \"&ssetmn;\",\n      \"⫧\": \"&Barv;\",\n      \"⌆\": \"&doublebarwedge;\",\n      \"Б\": \"&Bcy;\",\n      \"∵\": \"&because;\",\n      \"ℬ\": \"&bernou;\",\n      \"Β\": \"&Beta;\",\n      \"𝔅\": \"&Bfr;\",\n      \"𝔹\": \"&Bopf;\",\n      \"˘\": \"&breve;\",\n      \"≎\": \"&bump;\",\n      \"Ч\": \"&CHcy;\",\n      \"©\": \"&copy;\",\n      \"Ć\": \"&Cacute;\",\n      \"⋒\": \"&Cap;\",\n      \"ⅅ\": \"&DD;\",\n      \"ℭ\": \"&Cfr;\",\n      \"Č\": \"&Ccaron;\",\n      \"Ç\": \"&Ccedil;\",\n      \"Ĉ\": \"&Ccirc;\",\n      \"∰\": \"&Cconint;\",\n      \"Ċ\": \"&Cdot;\",\n      \"¸\": \"&cedil;\",\n      \"·\": \"&middot;\",\n      \"Χ\": \"&Chi;\",\n      \"⊙\": \"&odot;\",\n      \"⊖\": \"&ominus;\",\n      \"⊕\": \"&oplus;\",\n      \"⊗\": \"&otimes;\",\n      \"∲\": \"&cwconint;\",\n      \"”\": \"&rdquor;\",\n      \"’\": \"&rsquor;\",\n      \"∷\": \"&Proportion;\",\n      \"⩴\": \"&Colone;\",\n      \"≡\": \"&equiv;\",\n      \"∯\": \"&DoubleContourIntegral;\",\n      \"∮\": \"&oint;\",\n      \"ℂ\": \"&complexes;\",\n      \"∐\": \"&coprod;\",\n      \"∳\": \"&awconint;\",\n      \"⨯\": \"&Cross;\",\n      \"𝒞\": \"&Cscr;\",\n      \"⋓\": \"&Cup;\",\n      \"≍\": \"&asympeq;\",\n      \"⤑\": \"&DDotrahd;\",\n      \"Ђ\": \"&DJcy;\",\n      \"Ѕ\": \"&DScy;\",\n      \"Џ\": \"&DZcy;\",\n      \"‡\": \"&ddagger;\",\n      \"↡\": \"&Darr;\",\n      \"⫤\": \"&DoubleLeftTee;\",\n      \"Ď\": \"&Dcaron;\",\n      \"Д\": \"&Dcy;\",\n      \"∇\": \"&nabla;\",\n      \"Δ\": \"&Delta;\",\n      \"𝔇\": \"&Dfr;\",\n      \"´\": \"&acute;\",\n      \"˙\": \"&dot;\",\n      \"˝\": \"&dblac;\",\n      \"`\": \"&grave;\",\n      \"˜\": \"&tilde;\",\n      \"⋄\": \"&diamond;\",\n      \"ⅆ\": \"&dd;\",\n      \"𝔻\": \"&Dopf;\",\n      \"¨\": \"&uml;\",\n      \"⃜\": \"&DotDot;\",\n      \"≐\": \"&esdot;\",\n      \"⇓\": \"&dArr;\",\n      \"⇐\": \"&lArr;\",\n      \"⇔\": \"&iff;\",\n      \"⟸\": \"&xlArr;\",\n      \"⟺\": \"&xhArr;\",\n      \"⟹\": \"&xrArr;\",\n      \"⇒\": \"&rArr;\",\n      \"⊨\": \"&vDash;\",\n      \"⇑\": \"&uArr;\",\n      \"⇕\": \"&vArr;\",\n      \"∥\": \"&spar;\",\n      \"↓\": \"&downarrow;\",\n      \"⤓\": \"&DownArrowBar;\",\n      \"⇵\": \"&duarr;\",\n      \"̑\": \"&DownBreve;\",\n      \"⥐\": \"&DownLeftRightVector;\",\n      \"⥞\": \"&DownLeftTeeVector;\",\n      \"↽\": \"&lhard;\",\n      \"⥖\": \"&DownLeftVectorBar;\",\n      \"⥟\": \"&DownRightTeeVector;\",\n      \"⇁\": \"&rightharpoondown;\",\n      \"⥗\": \"&DownRightVectorBar;\",\n      \"⊤\": \"&top;\",\n      \"↧\": \"&mapstodown;\",\n      \"𝒟\": \"&Dscr;\",\n      \"Đ\": \"&Dstrok;\",\n      \"Ŋ\": \"&ENG;\",\n      \"Ð\": \"&ETH;\",\n      \"É\": \"&Eacute;\",\n      \"Ě\": \"&Ecaron;\",\n      \"Ê\": \"&Ecirc;\",\n      \"Э\": \"&Ecy;\",\n      \"Ė\": \"&Edot;\",\n      \"𝔈\": \"&Efr;\",\n      \"È\": \"&Egrave;\",\n      \"∈\": \"&isinv;\",\n      \"Ē\": \"&Emacr;\",\n      \"◻\": \"&EmptySmallSquare;\",\n      \"▫\": \"&EmptyVerySmallSquare;\",\n      \"Ę\": \"&Eogon;\",\n      \"𝔼\": \"&Eopf;\",\n      \"Ε\": \"&Epsilon;\",\n      \"⩵\": \"&Equal;\",\n      \"≂\": \"&esim;\",\n      \"⇌\": \"&rlhar;\",\n      \"ℰ\": \"&expectation;\",\n      \"⩳\": \"&Esim;\",\n      \"Η\": \"&Eta;\",\n      \"Ë\": \"&Euml;\",\n      \"∃\": \"&exist;\",\n      \"ⅇ\": \"&exponentiale;\",\n      \"Ф\": \"&Fcy;\",\n      \"𝔉\": \"&Ffr;\",\n      \"◼\": \"&FilledSmallSquare;\",\n      \"▪\": \"&squf;\",\n      \"𝔽\": \"&Fopf;\",\n      \"∀\": \"&forall;\",\n      \"ℱ\": \"&Fscr;\",\n      \"Ѓ\": \"&GJcy;\",\n      \">\": \"&gt;\",\n      \"Γ\": \"&Gamma;\",\n      \"Ϝ\": \"&Gammad;\",\n      \"Ğ\": \"&Gbreve;\",\n      \"Ģ\": \"&Gcedil;\",\n      \"Ĝ\": \"&Gcirc;\",\n      \"Г\": \"&Gcy;\",\n      \"Ġ\": \"&Gdot;\",\n      \"𝔊\": \"&Gfr;\",\n      \"⋙\": \"&ggg;\",\n      \"𝔾\": \"&Gopf;\",\n      \"≥\": \"&geq;\",\n      \"⋛\": \"&gtreqless;\",\n      \"≧\": \"&geqq;\",\n      \"⪢\": \"&GreaterGreater;\",\n      \"≷\": \"&gtrless;\",\n      \"⩾\": \"&ges;\",\n      \"≳\": \"&gtrsim;\",\n      \"𝒢\": \"&Gscr;\",\n      \"≫\": \"&gg;\",\n      \"Ъ\": \"&HARDcy;\",\n      \"ˇ\": \"&caron;\",\n      \"^\": \"&Hat;\",\n      \"Ĥ\": \"&Hcirc;\",\n      \"ℌ\": \"&Poincareplane;\",\n      \"ℋ\": \"&hamilt;\",\n      \"ℍ\": \"&quaternions;\",\n      \"─\": \"&boxh;\",\n      \"Ħ\": \"&Hstrok;\",\n      \"≏\": \"&bumpeq;\",\n      \"Е\": \"&IEcy;\",\n      \"Ĳ\": \"&IJlig;\",\n      \"Ё\": \"&IOcy;\",\n      \"Í\": \"&Iacute;\",\n      \"Î\": \"&Icirc;\",\n      \"И\": \"&Icy;\",\n      \"İ\": \"&Idot;\",\n      \"ℑ\": \"&imagpart;\",\n      \"Ì\": \"&Igrave;\",\n      \"Ī\": \"&Imacr;\",\n      \"ⅈ\": \"&ii;\",\n      \"∬\": \"&Int;\",\n      \"∫\": \"&int;\",\n      \"⋂\": \"&xcap;\",\n      \"⁣\": \"&ic;\",\n      \"⁢\": \"&it;\",\n      \"Į\": \"&Iogon;\",\n      \"𝕀\": \"&Iopf;\",\n      \"Ι\": \"&Iota;\",\n      \"ℐ\": \"&imagline;\",\n      \"Ĩ\": \"&Itilde;\",\n      \"І\": \"&Iukcy;\",\n      \"Ï\": \"&Iuml;\",\n      \"Ĵ\": \"&Jcirc;\",\n      \"Й\": \"&Jcy;\",\n      \"𝔍\": \"&Jfr;\",\n      \"𝕁\": \"&Jopf;\",\n      \"𝒥\": \"&Jscr;\",\n      \"Ј\": \"&Jsercy;\",\n      \"Є\": \"&Jukcy;\",\n      \"Х\": \"&KHcy;\",\n      \"Ќ\": \"&KJcy;\",\n      \"Κ\": \"&Kappa;\",\n      \"Ķ\": \"&Kcedil;\",\n      \"К\": \"&Kcy;\",\n      \"𝔎\": \"&Kfr;\",\n      \"𝕂\": \"&Kopf;\",\n      \"𝒦\": \"&Kscr;\",\n      \"Љ\": \"&LJcy;\",\n      \"<\": \"&lt;\",\n      \"Ĺ\": \"&Lacute;\",\n      \"Λ\": \"&Lambda;\",\n      \"⟪\": \"&Lang;\",\n      \"ℒ\": \"&lagran;\",\n      \"↞\": \"&twoheadleftarrow;\",\n      \"Ľ\": \"&Lcaron;\",\n      \"Ļ\": \"&Lcedil;\",\n      \"Л\": \"&Lcy;\",\n      \"⟨\": \"&langle;\",\n      \"←\": \"&slarr;\",\n      \"⇤\": \"&larrb;\",\n      \"⇆\": \"&lrarr;\",\n      \"⌈\": \"&lceil;\",\n      \"⟦\": \"&lobrk;\",\n      \"⥡\": \"&LeftDownTeeVector;\",\n      \"⇃\": \"&downharpoonleft;\",\n      \"⥙\": \"&LeftDownVectorBar;\",\n      \"⌊\": \"&lfloor;\",\n      \"↔\": \"&leftrightarrow;\",\n      \"⥎\": \"&LeftRightVector;\",\n      \"⊣\": \"&dashv;\",\n      \"↤\": \"&mapstoleft;\",\n      \"⥚\": \"&LeftTeeVector;\",\n      \"⊲\": \"&vltri;\",\n      \"⧏\": \"&LeftTriangleBar;\",\n      \"⊴\": \"&trianglelefteq;\",\n      \"⥑\": \"&LeftUpDownVector;\",\n      \"⥠\": \"&LeftUpTeeVector;\",\n      \"↿\": \"&upharpoonleft;\",\n      \"⥘\": \"&LeftUpVectorBar;\",\n      \"↼\": \"&lharu;\",\n      \"⥒\": \"&LeftVectorBar;\",\n      \"⋚\": \"&lesseqgtr;\",\n      \"≦\": \"&leqq;\",\n      \"≶\": \"&lg;\",\n      \"⪡\": \"&LessLess;\",\n      \"⩽\": \"&les;\",\n      \"≲\": \"&lsim;\",\n      \"𝔏\": \"&Lfr;\",\n      \"⋘\": \"&Ll;\",\n      \"⇚\": \"&lAarr;\",\n      \"Ŀ\": \"&Lmidot;\",\n      \"⟵\": \"&xlarr;\",\n      \"⟷\": \"&xharr;\",\n      \"⟶\": \"&xrarr;\",\n      \"𝕃\": \"&Lopf;\",\n      \"↙\": \"&swarrow;\",\n      \"↘\": \"&searrow;\",\n      \"↰\": \"&lsh;\",\n      \"Ł\": \"&Lstrok;\",\n      \"≪\": \"&ll;\",\n      \"⤅\": \"&Map;\",\n      \"М\": \"&Mcy;\",\n      \" \": \"&MediumSpace;\",\n      \"ℳ\": \"&phmmat;\",\n      \"𝔐\": \"&Mfr;\",\n      \"∓\": \"&mp;\",\n      \"𝕄\": \"&Mopf;\",\n      \"Μ\": \"&Mu;\",\n      \"Њ\": \"&NJcy;\",\n      \"Ń\": \"&Nacute;\",\n      \"Ň\": \"&Ncaron;\",\n      \"Ņ\": \"&Ncedil;\",\n      \"Н\": \"&Ncy;\",\n      \"​\": \"&ZeroWidthSpace;\",\n      \"\\n\": \"&NewLine;\",\n      \"𝔑\": \"&Nfr;\",\n      \"⁠\": \"&NoBreak;\",\n      \" \": \"&nbsp;\",\n      \"ℕ\": \"&naturals;\",\n      \"⫬\": \"&Not;\",\n      \"≢\": \"&nequiv;\",\n      \"≭\": \"&NotCupCap;\",\n      \"∦\": \"&nspar;\",\n      \"∉\": \"&notinva;\",\n      \"≠\": \"&ne;\",\n      \"≂̸\": \"&nesim;\",\n      \"∄\": \"&nexists;\",\n      \"≯\": \"&ngtr;\",\n      \"≱\": \"&ngeq;\",\n      \"≧̸\": \"&ngeqq;\",\n      \"≫̸\": \"&nGtv;\",\n      \"≹\": \"&ntgl;\",\n      \"⩾̸\": \"&nges;\",\n      \"≵\": \"&ngsim;\",\n      \"≎̸\": \"&nbump;\",\n      \"≏̸\": \"&nbumpe;\",\n      \"⋪\": \"&ntriangleleft;\",\n      \"⧏̸\": \"&NotLeftTriangleBar;\",\n      \"⋬\": \"&ntrianglelefteq;\",\n      \"≮\": \"&nlt;\",\n      \"≰\": \"&nleq;\",\n      \"≸\": \"&ntlg;\",\n      \"≪̸\": \"&nLtv;\",\n      \"⩽̸\": \"&nles;\",\n      \"≴\": \"&nlsim;\",\n      \"⪢̸\": \"&NotNestedGreaterGreater;\",\n      \"⪡̸\": \"&NotNestedLessLess;\",\n      \"⊀\": \"&nprec;\",\n      \"⪯̸\": \"&npreceq;\",\n      \"⋠\": \"&nprcue;\",\n      \"∌\": \"&notniva;\",\n      \"⋫\": \"&ntriangleright;\",\n      \"⧐̸\": \"&NotRightTriangleBar;\",\n      \"⋭\": \"&ntrianglerighteq;\",\n      \"⊏̸\": \"&NotSquareSubset;\",\n      \"⋢\": \"&nsqsube;\",\n      \"⊐̸\": \"&NotSquareSuperset;\",\n      \"⋣\": \"&nsqsupe;\",\n      \"⊂⃒\": \"&vnsub;\",\n      \"⊈\": \"&nsubseteq;\",\n      \"⊁\": \"&nsucc;\",\n      \"⪰̸\": \"&nsucceq;\",\n      \"⋡\": \"&nsccue;\",\n      \"≿̸\": \"&NotSucceedsTilde;\",\n      \"⊃⃒\": \"&vnsup;\",\n      \"⊉\": \"&nsupseteq;\",\n      \"≁\": \"&nsim;\",\n      \"≄\": \"&nsimeq;\",\n      \"≇\": \"&ncong;\",\n      \"≉\": \"&napprox;\",\n      \"∤\": \"&nsmid;\",\n      \"𝒩\": \"&Nscr;\",\n      \"Ñ\": \"&Ntilde;\",\n      \"Ν\": \"&Nu;\",\n      \"Œ\": \"&OElig;\",\n      \"Ó\": \"&Oacute;\",\n      \"Ô\": \"&Ocirc;\",\n      \"О\": \"&Ocy;\",\n      \"Ő\": \"&Odblac;\",\n      \"𝔒\": \"&Ofr;\",\n      \"Ò\": \"&Ograve;\",\n      \"Ō\": \"&Omacr;\",\n      \"Ω\": \"&ohm;\",\n      \"Ο\": \"&Omicron;\",\n      \"𝕆\": \"&Oopf;\",\n      \"“\": \"&ldquo;\",\n      \"‘\": \"&lsquo;\",\n      \"⩔\": \"&Or;\",\n      \"𝒪\": \"&Oscr;\",\n      \"Ø\": \"&Oslash;\",\n      \"Õ\": \"&Otilde;\",\n      \"⨷\": \"&Otimes;\",\n      \"Ö\": \"&Ouml;\",\n      \"‾\": \"&oline;\",\n      \"⏞\": \"&OverBrace;\",\n      \"⎴\": \"&tbrk;\",\n      \"⏜\": \"&OverParenthesis;\",\n      \"∂\": \"&part;\",\n      \"П\": \"&Pcy;\",\n      \"𝔓\": \"&Pfr;\",\n      \"Φ\": \"&Phi;\",\n      \"Π\": \"&Pi;\",\n      \"±\": \"&pm;\",\n      \"ℙ\": \"&primes;\",\n      \"⪻\": \"&Pr;\",\n      \"≺\": \"&prec;\",\n      \"⪯\": \"&preceq;\",\n      \"≼\": \"&preccurlyeq;\",\n      \"≾\": \"&prsim;\",\n      \"″\": \"&Prime;\",\n      \"∏\": \"&prod;\",\n      \"∝\": \"&vprop;\",\n      \"𝒫\": \"&Pscr;\",\n      \"Ψ\": \"&Psi;\",\n      '\"': \"&quot;\",\n      \"𝔔\": \"&Qfr;\",\n      \"ℚ\": \"&rationals;\",\n      \"𝒬\": \"&Qscr;\",\n      \"⤐\": \"&drbkarow;\",\n      \"®\": \"&reg;\",\n      \"Ŕ\": \"&Racute;\",\n      \"⟫\": \"&Rang;\",\n      \"↠\": \"&twoheadrightarrow;\",\n      \"⤖\": \"&Rarrtl;\",\n      \"Ř\": \"&Rcaron;\",\n      \"Ŗ\": \"&Rcedil;\",\n      \"Р\": \"&Rcy;\",\n      \"ℜ\": \"&realpart;\",\n      \"∋\": \"&niv;\",\n      \"⇋\": \"&lrhar;\",\n      \"⥯\": \"&duhar;\",\n      \"Ρ\": \"&Rho;\",\n      \"⟩\": \"&rangle;\",\n      \"→\": \"&srarr;\",\n      \"⇥\": \"&rarrb;\",\n      \"⇄\": \"&rlarr;\",\n      \"⌉\": \"&rceil;\",\n      \"⟧\": \"&robrk;\",\n      \"⥝\": \"&RightDownTeeVector;\",\n      \"⇂\": \"&downharpoonright;\",\n      \"⥕\": \"&RightDownVectorBar;\",\n      \"⌋\": \"&rfloor;\",\n      \"⊢\": \"&vdash;\",\n      \"↦\": \"&mapsto;\",\n      \"⥛\": \"&RightTeeVector;\",\n      \"⊳\": \"&vrtri;\",\n      \"⧐\": \"&RightTriangleBar;\",\n      \"⊵\": \"&trianglerighteq;\",\n      \"⥏\": \"&RightUpDownVector;\",\n      \"⥜\": \"&RightUpTeeVector;\",\n      \"↾\": \"&upharpoonright;\",\n      \"⥔\": \"&RightUpVectorBar;\",\n      \"⇀\": \"&rightharpoonup;\",\n      \"⥓\": \"&RightVectorBar;\",\n      \"ℝ\": \"&reals;\",\n      \"⥰\": \"&RoundImplies;\",\n      \"⇛\": \"&rAarr;\",\n      \"ℛ\": \"&realine;\",\n      \"↱\": \"&rsh;\",\n      \"⧴\": \"&RuleDelayed;\",\n      \"Щ\": \"&SHCHcy;\",\n      \"Ш\": \"&SHcy;\",\n      \"Ь\": \"&SOFTcy;\",\n      \"Ś\": \"&Sacute;\",\n      \"⪼\": \"&Sc;\",\n      \"Š\": \"&Scaron;\",\n      \"Ş\": \"&Scedil;\",\n      \"Ŝ\": \"&Scirc;\",\n      \"С\": \"&Scy;\",\n      \"𝔖\": \"&Sfr;\",\n      \"↑\": \"&uparrow;\",\n      \"Σ\": \"&Sigma;\",\n      \"∘\": \"&compfn;\",\n      \"𝕊\": \"&Sopf;\",\n      \"√\": \"&radic;\",\n      \"□\": \"&square;\",\n      \"⊓\": \"&sqcap;\",\n      \"⊏\": \"&sqsubset;\",\n      \"⊑\": \"&sqsubseteq;\",\n      \"⊐\": \"&sqsupset;\",\n      \"⊒\": \"&sqsupseteq;\",\n      \"⊔\": \"&sqcup;\",\n      \"𝒮\": \"&Sscr;\",\n      \"⋆\": \"&sstarf;\",\n      \"⋐\": \"&Subset;\",\n      \"⊆\": \"&subseteq;\",\n      \"≻\": \"&succ;\",\n      \"⪰\": \"&succeq;\",\n      \"≽\": \"&succcurlyeq;\",\n      \"≿\": \"&succsim;\",\n      \"∑\": \"&sum;\",\n      \"⋑\": \"&Supset;\",\n      \"⊃\": \"&supset;\",\n      \"⊇\": \"&supseteq;\",\n      \"Þ\": \"&THORN;\",\n      \"™\": \"&trade;\",\n      \"Ћ\": \"&TSHcy;\",\n      \"Ц\": \"&TScy;\",\n      \"\\t\": \"&Tab;\",\n      \"Τ\": \"&Tau;\",\n      \"Ť\": \"&Tcaron;\",\n      \"Ţ\": \"&Tcedil;\",\n      \"Т\": \"&Tcy;\",\n      \"𝔗\": \"&Tfr;\",\n      \"∴\": \"&therefore;\",\n      \"Θ\": \"&Theta;\",\n      \"  \": \"&ThickSpace;\",\n      \" \": \"&thinsp;\",\n      \"∼\": \"&thksim;\",\n      \"≃\": \"&simeq;\",\n      \"≅\": \"&cong;\",\n      \"≈\": \"&thkap;\",\n      \"𝕋\": \"&Topf;\",\n      \"⃛\": \"&tdot;\",\n      \"𝒯\": \"&Tscr;\",\n      \"Ŧ\": \"&Tstrok;\",\n      \"Ú\": \"&Uacute;\",\n      \"↟\": \"&Uarr;\",\n      \"⥉\": \"&Uarrocir;\",\n      \"Ў\": \"&Ubrcy;\",\n      \"Ŭ\": \"&Ubreve;\",\n      \"Û\": \"&Ucirc;\",\n      \"У\": \"&Ucy;\",\n      \"Ű\": \"&Udblac;\",\n      \"𝔘\": \"&Ufr;\",\n      \"Ù\": \"&Ugrave;\",\n      \"Ū\": \"&Umacr;\",\n      _: \"&lowbar;\",\n      \"⏟\": \"&UnderBrace;\",\n      \"⎵\": \"&bbrk;\",\n      \"⏝\": \"&UnderParenthesis;\",\n      \"⋃\": \"&xcup;\",\n      \"⊎\": \"&uplus;\",\n      \"Ų\": \"&Uogon;\",\n      \"𝕌\": \"&Uopf;\",\n      \"⤒\": \"&UpArrowBar;\",\n      \"⇅\": \"&udarr;\",\n      \"↕\": \"&varr;\",\n      \"⥮\": \"&udhar;\",\n      \"⊥\": \"&perp;\",\n      \"↥\": \"&mapstoup;\",\n      \"↖\": \"&nwarrow;\",\n      \"↗\": \"&nearrow;\",\n      \"ϒ\": \"&upsih;\",\n      \"Υ\": \"&Upsilon;\",\n      \"Ů\": \"&Uring;\",\n      \"𝒰\": \"&Uscr;\",\n      \"Ũ\": \"&Utilde;\",\n      \"Ü\": \"&Uuml;\",\n      \"⊫\": \"&VDash;\",\n      \"⫫\": \"&Vbar;\",\n      \"В\": \"&Vcy;\",\n      \"⊩\": \"&Vdash;\",\n      \"⫦\": \"&Vdashl;\",\n      \"⋁\": \"&xvee;\",\n      \"‖\": \"&Vert;\",\n      \"∣\": \"&smid;\",\n      \"|\": \"&vert;\",\n      \"❘\": \"&VerticalSeparator;\",\n      \"≀\": \"&wreath;\",\n      \" \": \"&hairsp;\",\n      \"𝔙\": \"&Vfr;\",\n      \"𝕍\": \"&Vopf;\",\n      \"𝒱\": \"&Vscr;\",\n      \"⊪\": \"&Vvdash;\",\n      \"Ŵ\": \"&Wcirc;\",\n      \"⋀\": \"&xwedge;\",\n      \"𝔚\": \"&Wfr;\",\n      \"𝕎\": \"&Wopf;\",\n      \"𝒲\": \"&Wscr;\",\n      \"𝔛\": \"&Xfr;\",\n      \"Ξ\": \"&Xi;\",\n      \"𝕏\": \"&Xopf;\",\n      \"𝒳\": \"&Xscr;\",\n      \"Я\": \"&YAcy;\",\n      \"Ї\": \"&YIcy;\",\n      \"Ю\": \"&YUcy;\",\n      \"Ý\": \"&Yacute;\",\n      \"Ŷ\": \"&Ycirc;\",\n      \"Ы\": \"&Ycy;\",\n      \"𝔜\": \"&Yfr;\",\n      \"𝕐\": \"&Yopf;\",\n      \"𝒴\": \"&Yscr;\",\n      \"Ÿ\": \"&Yuml;\",\n      \"Ж\": \"&ZHcy;\",\n      \"Ź\": \"&Zacute;\",\n      \"Ž\": \"&Zcaron;\",\n      \"З\": \"&Zcy;\",\n      \"Ż\": \"&Zdot;\",\n      \"Ζ\": \"&Zeta;\",\n      \"ℨ\": \"&zeetrf;\",\n      \"ℤ\": \"&integers;\",\n      \"𝒵\": \"&Zscr;\",\n      \"á\": \"&aacute;\",\n      \"ă\": \"&abreve;\",\n      \"∾\": \"&mstpos;\",\n      \"∾̳\": \"&acE;\",\n      \"∿\": \"&acd;\",\n      \"â\": \"&acirc;\",\n      \"а\": \"&acy;\",\n      \"æ\": \"&aelig;\",\n      \"𝔞\": \"&afr;\",\n      \"à\": \"&agrave;\",\n      \"ℵ\": \"&aleph;\",\n      \"α\": \"&alpha;\",\n      \"ā\": \"&amacr;\",\n      \"⨿\": \"&amalg;\",\n      \"∧\": \"&wedge;\",\n      \"⩕\": \"&andand;\",\n      \"⩜\": \"&andd;\",\n      \"⩘\": \"&andslope;\",\n      \"⩚\": \"&andv;\",\n      \"∠\": \"&angle;\",\n      \"⦤\": \"&ange;\",\n      \"∡\": \"&measuredangle;\",\n      \"⦨\": \"&angmsdaa;\",\n      \"⦩\": \"&angmsdab;\",\n      \"⦪\": \"&angmsdac;\",\n      \"⦫\": \"&angmsdad;\",\n      \"⦬\": \"&angmsdae;\",\n      \"⦭\": \"&angmsdaf;\",\n      \"⦮\": \"&angmsdag;\",\n      \"⦯\": \"&angmsdah;\",\n      \"∟\": \"&angrt;\",\n      \"⊾\": \"&angrtvb;\",\n      \"⦝\": \"&angrtvbd;\",\n      \"∢\": \"&angsph;\",\n      \"⍼\": \"&angzarr;\",\n      \"ą\": \"&aogon;\",\n      \"𝕒\": \"&aopf;\",\n      \"⩰\": \"&apE;\",\n      \"⩯\": \"&apacir;\",\n      \"≊\": \"&approxeq;\",\n      \"≋\": \"&apid;\",\n      \"'\": \"&apos;\",\n      \"å\": \"&aring;\",\n      \"𝒶\": \"&ascr;\",\n      \"*\": \"&midast;\",\n      \"ã\": \"&atilde;\",\n      \"ä\": \"&auml;\",\n      \"⨑\": \"&awint;\",\n      \"⫭\": \"&bNot;\",\n      \"≌\": \"&bcong;\",\n      \"϶\": \"&bepsi;\",\n      \"‵\": \"&bprime;\",\n      \"∽\": \"&bsim;\",\n      \"⋍\": \"&bsime;\",\n      \"⊽\": \"&barvee;\",\n      \"⌅\": \"&barwedge;\",\n      \"⎶\": \"&bbrktbrk;\",\n      \"б\": \"&bcy;\",\n      \"„\": \"&ldquor;\",\n      \"⦰\": \"&bemptyv;\",\n      \"β\": \"&beta;\",\n      \"ℶ\": \"&beth;\",\n      \"≬\": \"&twixt;\",\n      \"𝔟\": \"&bfr;\",\n      \"◯\": \"&xcirc;\",\n      \"⨀\": \"&xodot;\",\n      \"⨁\": \"&xoplus;\",\n      \"⨂\": \"&xotime;\",\n      \"⨆\": \"&xsqcup;\",\n      \"★\": \"&starf;\",\n      \"▽\": \"&xdtri;\",\n      \"△\": \"&xutri;\",\n      \"⨄\": \"&xuplus;\",\n      \"⤍\": \"&rbarr;\",\n      \"⧫\": \"&lozf;\",\n      \"▴\": \"&utrif;\",\n      \"▾\": \"&dtrif;\",\n      \"◂\": \"&ltrif;\",\n      \"▸\": \"&rtrif;\",\n      \"␣\": \"&blank;\",\n      \"▒\": \"&blk12;\",\n      \"░\": \"&blk14;\",\n      \"▓\": \"&blk34;\",\n      \"█\": \"&block;\",\n      \"=⃥\": \"&bne;\",\n      \"≡⃥\": \"&bnequiv;\",\n      \"⌐\": \"&bnot;\",\n      \"𝕓\": \"&bopf;\",\n      \"⋈\": \"&bowtie;\",\n      \"╗\": \"&boxDL;\",\n      \"╔\": \"&boxDR;\",\n      \"╖\": \"&boxDl;\",\n      \"╓\": \"&boxDr;\",\n      \"═\": \"&boxH;\",\n      \"╦\": \"&boxHD;\",\n      \"╩\": \"&boxHU;\",\n      \"╤\": \"&boxHd;\",\n      \"╧\": \"&boxHu;\",\n      \"╝\": \"&boxUL;\",\n      \"╚\": \"&boxUR;\",\n      \"╜\": \"&boxUl;\",\n      \"╙\": \"&boxUr;\",\n      \"║\": \"&boxV;\",\n      \"╬\": \"&boxVH;\",\n      \"╣\": \"&boxVL;\",\n      \"╠\": \"&boxVR;\",\n      \"╫\": \"&boxVh;\",\n      \"╢\": \"&boxVl;\",\n      \"╟\": \"&boxVr;\",\n      \"⧉\": \"&boxbox;\",\n      \"╕\": \"&boxdL;\",\n      \"╒\": \"&boxdR;\",\n      \"┐\": \"&boxdl;\",\n      \"┌\": \"&boxdr;\",\n      \"╥\": \"&boxhD;\",\n      \"╨\": \"&boxhU;\",\n      \"┬\": \"&boxhd;\",\n      \"┴\": \"&boxhu;\",\n      \"⊟\": \"&minusb;\",\n      \"⊞\": \"&plusb;\",\n      \"⊠\": \"&timesb;\",\n      \"╛\": \"&boxuL;\",\n      \"╘\": \"&boxuR;\",\n      \"┘\": \"&boxul;\",\n      \"└\": \"&boxur;\",\n      \"│\": \"&boxv;\",\n      \"╪\": \"&boxvH;\",\n      \"╡\": \"&boxvL;\",\n      \"╞\": \"&boxvR;\",\n      \"┼\": \"&boxvh;\",\n      \"┤\": \"&boxvl;\",\n      \"├\": \"&boxvr;\",\n      \"¦\": \"&brvbar;\",\n      \"𝒷\": \"&bscr;\",\n      \"⁏\": \"&bsemi;\",\n      \"\\\\\": \"&bsol;\",\n      \"⧅\": \"&bsolb;\",\n      \"⟈\": \"&bsolhsub;\",\n      \"•\": \"&bullet;\",\n      \"⪮\": \"&bumpE;\",\n      \"ć\": \"&cacute;\",\n      \"∩\": \"&cap;\",\n      \"⩄\": \"&capand;\",\n      \"⩉\": \"&capbrcup;\",\n      \"⩋\": \"&capcap;\",\n      \"⩇\": \"&capcup;\",\n      \"⩀\": \"&capdot;\",\n      \"∩︀\": \"&caps;\",\n      \"⁁\": \"&caret;\",\n      \"⩍\": \"&ccaps;\",\n      \"č\": \"&ccaron;\",\n      \"ç\": \"&ccedil;\",\n      \"ĉ\": \"&ccirc;\",\n      \"⩌\": \"&ccups;\",\n      \"⩐\": \"&ccupssm;\",\n      \"ċ\": \"&cdot;\",\n      \"⦲\": \"&cemptyv;\",\n      \"¢\": \"&cent;\",\n      \"𝔠\": \"&cfr;\",\n      \"ч\": \"&chcy;\",\n      \"✓\": \"&checkmark;\",\n      \"χ\": \"&chi;\",\n      \"○\": \"&cir;\",\n      \"⧃\": \"&cirE;\",\n      \"ˆ\": \"&circ;\",\n      \"≗\": \"&cire;\",\n      \"↺\": \"&olarr;\",\n      \"↻\": \"&orarr;\",\n      \"Ⓢ\": \"&oS;\",\n      \"⊛\": \"&oast;\",\n      \"⊚\": \"&ocir;\",\n      \"⊝\": \"&odash;\",\n      \"⨐\": \"&cirfnint;\",\n      \"⫯\": \"&cirmid;\",\n      \"⧂\": \"&cirscir;\",\n      \"♣\": \"&clubsuit;\",\n      \":\": \"&colon;\",\n      \",\": \"&comma;\",\n      \"@\": \"&commat;\",\n      \"∁\": \"&complement;\",\n      \"⩭\": \"&congdot;\",\n      \"𝕔\": \"&copf;\",\n      \"℗\": \"&copysr;\",\n      \"↵\": \"&crarr;\",\n      \"✗\": \"&cross;\",\n      \"𝒸\": \"&cscr;\",\n      \"⫏\": \"&csub;\",\n      \"⫑\": \"&csube;\",\n      \"⫐\": \"&csup;\",\n      \"⫒\": \"&csupe;\",\n      \"⋯\": \"&ctdot;\",\n      \"⤸\": \"&cudarrl;\",\n      \"⤵\": \"&cudarrr;\",\n      \"⋞\": \"&curlyeqprec;\",\n      \"⋟\": \"&curlyeqsucc;\",\n      \"↶\": \"&curvearrowleft;\",\n      \"⤽\": \"&cularrp;\",\n      \"∪\": \"&cup;\",\n      \"⩈\": \"&cupbrcap;\",\n      \"⩆\": \"&cupcap;\",\n      \"⩊\": \"&cupcup;\",\n      \"⊍\": \"&cupdot;\",\n      \"⩅\": \"&cupor;\",\n      \"∪︀\": \"&cups;\",\n      \"↷\": \"&curvearrowright;\",\n      \"⤼\": \"&curarrm;\",\n      \"⋎\": \"&cuvee;\",\n      \"⋏\": \"&cuwed;\",\n      \"¤\": \"&curren;\",\n      \"∱\": \"&cwint;\",\n      \"⌭\": \"&cylcty;\",\n      \"⥥\": \"&dHar;\",\n      \"†\": \"&dagger;\",\n      \"ℸ\": \"&daleth;\",\n      \"‐\": \"&hyphen;\",\n      \"⤏\": \"&rBarr;\",\n      \"ď\": \"&dcaron;\",\n      \"д\": \"&dcy;\",\n      \"⇊\": \"&downdownarrows;\",\n      \"⩷\": \"&eDDot;\",\n      \"°\": \"&deg;\",\n      \"δ\": \"&delta;\",\n      \"⦱\": \"&demptyv;\",\n      \"⥿\": \"&dfisht;\",\n      \"𝔡\": \"&dfr;\",\n      \"♦\": \"&diams;\",\n      \"ϝ\": \"&gammad;\",\n      \"⋲\": \"&disin;\",\n      \"÷\": \"&divide;\",\n      \"⋇\": \"&divonx;\",\n      \"ђ\": \"&djcy;\",\n      \"⌞\": \"&llcorner;\",\n      \"⌍\": \"&dlcrop;\",\n      $: \"&dollar;\",\n      \"𝕕\": \"&dopf;\",\n      \"≑\": \"&eDot;\",\n      \"∸\": \"&minusd;\",\n      \"∔\": \"&plusdo;\",\n      \"⊡\": \"&sdotb;\",\n      \"⌟\": \"&lrcorner;\",\n      \"⌌\": \"&drcrop;\",\n      \"𝒹\": \"&dscr;\",\n      \"ѕ\": \"&dscy;\",\n      \"⧶\": \"&dsol;\",\n      \"đ\": \"&dstrok;\",\n      \"⋱\": \"&dtdot;\",\n      \"▿\": \"&triangledown;\",\n      \"⦦\": \"&dwangle;\",\n      \"џ\": \"&dzcy;\",\n      \"⟿\": \"&dzigrarr;\",\n      \"é\": \"&eacute;\",\n      \"⩮\": \"&easter;\",\n      \"ě\": \"&ecaron;\",\n      \"≖\": \"&eqcirc;\",\n      \"ê\": \"&ecirc;\",\n      \"≕\": \"&eqcolon;\",\n      \"э\": \"&ecy;\",\n      \"ė\": \"&edot;\",\n      \"≒\": \"&fallingdotseq;\",\n      \"𝔢\": \"&efr;\",\n      \"⪚\": \"&eg;\",\n      \"è\": \"&egrave;\",\n      \"⪖\": \"&eqslantgtr;\",\n      \"⪘\": \"&egsdot;\",\n      \"⪙\": \"&el;\",\n      \"⏧\": \"&elinters;\",\n      \"ℓ\": \"&ell;\",\n      \"⪕\": \"&eqslantless;\",\n      \"⪗\": \"&elsdot;\",\n      \"ē\": \"&emacr;\",\n      \"∅\": \"&varnothing;\",\n      \" \": \"&emsp13;\",\n      \" \": \"&emsp14;\",\n      \" \": \"&emsp;\",\n      \"ŋ\": \"&eng;\",\n      \" \": \"&ensp;\",\n      \"ę\": \"&eogon;\",\n      \"𝕖\": \"&eopf;\",\n      \"⋕\": \"&epar;\",\n      \"⧣\": \"&eparsl;\",\n      \"⩱\": \"&eplus;\",\n      \"ε\": \"&epsilon;\",\n      \"ϵ\": \"&varepsilon;\",\n      \"=\": \"&equals;\",\n      \"≟\": \"&questeq;\",\n      \"⩸\": \"&equivDD;\",\n      \"⧥\": \"&eqvparsl;\",\n      \"≓\": \"&risingdotseq;\",\n      \"⥱\": \"&erarr;\",\n      \"ℯ\": \"&escr;\",\n      \"η\": \"&eta;\",\n      \"ð\": \"&eth;\",\n      \"ë\": \"&euml;\",\n      \"€\": \"&euro;\",\n      \"!\": \"&excl;\",\n      \"ф\": \"&fcy;\",\n      \"♀\": \"&female;\",\n      \"ﬃ\": \"&ffilig;\",\n      \"ﬀ\": \"&fflig;\",\n      \"ﬄ\": \"&ffllig;\",\n      \"𝔣\": \"&ffr;\",\n      \"ﬁ\": \"&filig;\",\n      fj: \"&fjlig;\",\n      \"♭\": \"&flat;\",\n      \"ﬂ\": \"&fllig;\",\n      \"▱\": \"&fltns;\",\n      \"ƒ\": \"&fnof;\",\n      \"𝕗\": \"&fopf;\",\n      \"⋔\": \"&pitchfork;\",\n      \"⫙\": \"&forkv;\",\n      \"⨍\": \"&fpartint;\",\n      \"½\": \"&half;\",\n      \"⅓\": \"&frac13;\",\n      \"¼\": \"&frac14;\",\n      \"⅕\": \"&frac15;\",\n      \"⅙\": \"&frac16;\",\n      \"⅛\": \"&frac18;\",\n      \"⅔\": \"&frac23;\",\n      \"⅖\": \"&frac25;\",\n      \"¾\": \"&frac34;\",\n      \"⅗\": \"&frac35;\",\n      \"⅜\": \"&frac38;\",\n      \"⅘\": \"&frac45;\",\n      \"⅚\": \"&frac56;\",\n      \"⅝\": \"&frac58;\",\n      \"⅞\": \"&frac78;\",\n      \"⁄\": \"&frasl;\",\n      \"⌢\": \"&sfrown;\",\n      \"𝒻\": \"&fscr;\",\n      \"⪌\": \"&gtreqqless;\",\n      \"ǵ\": \"&gacute;\",\n      \"γ\": \"&gamma;\",\n      \"⪆\": \"&gtrapprox;\",\n      \"ğ\": \"&gbreve;\",\n      \"ĝ\": \"&gcirc;\",\n      \"г\": \"&gcy;\",\n      \"ġ\": \"&gdot;\",\n      \"⪩\": \"&gescc;\",\n      \"⪀\": \"&gesdot;\",\n      \"⪂\": \"&gesdoto;\",\n      \"⪄\": \"&gesdotol;\",\n      \"⋛︀\": \"&gesl;\",\n      \"⪔\": \"&gesles;\",\n      \"𝔤\": \"&gfr;\",\n      \"ℷ\": \"&gimel;\",\n      \"ѓ\": \"&gjcy;\",\n      \"⪒\": \"&glE;\",\n      \"⪥\": \"&gla;\",\n      \"⪤\": \"&glj;\",\n      \"≩\": \"&gneqq;\",\n      \"⪊\": \"&gnapprox;\",\n      \"⪈\": \"&gneq;\",\n      \"⋧\": \"&gnsim;\",\n      \"𝕘\": \"&gopf;\",\n      \"ℊ\": \"&gscr;\",\n      \"⪎\": \"&gsime;\",\n      \"⪐\": \"&gsiml;\",\n      \"⪧\": \"&gtcc;\",\n      \"⩺\": \"&gtcir;\",\n      \"⋗\": \"&gtrdot;\",\n      \"⦕\": \"&gtlPar;\",\n      \"⩼\": \"&gtquest;\",\n      \"⥸\": \"&gtrarr;\",\n      \"≩︀\": \"&gvnE;\",\n      \"ъ\": \"&hardcy;\",\n      \"⥈\": \"&harrcir;\",\n      \"↭\": \"&leftrightsquigarrow;\",\n      \"ℏ\": \"&plankv;\",\n      \"ĥ\": \"&hcirc;\",\n      \"♥\": \"&heartsuit;\",\n      \"…\": \"&mldr;\",\n      \"⊹\": \"&hercon;\",\n      \"𝔥\": \"&hfr;\",\n      \"⤥\": \"&searhk;\",\n      \"⤦\": \"&swarhk;\",\n      \"⇿\": \"&hoarr;\",\n      \"∻\": \"&homtht;\",\n      \"↩\": \"&larrhk;\",\n      \"↪\": \"&rarrhk;\",\n      \"𝕙\": \"&hopf;\",\n      \"―\": \"&horbar;\",\n      \"𝒽\": \"&hscr;\",\n      \"ħ\": \"&hstrok;\",\n      \"⁃\": \"&hybull;\",\n      \"í\": \"&iacute;\",\n      \"î\": \"&icirc;\",\n      \"и\": \"&icy;\",\n      \"е\": \"&iecy;\",\n      \"¡\": \"&iexcl;\",\n      \"𝔦\": \"&ifr;\",\n      \"ì\": \"&igrave;\",\n      \"⨌\": \"&qint;\",\n      \"∭\": \"&tint;\",\n      \"⧜\": \"&iinfin;\",\n      \"℩\": \"&iiota;\",\n      \"ĳ\": \"&ijlig;\",\n      \"ī\": \"&imacr;\",\n      \"ı\": \"&inodot;\",\n      \"⊷\": \"&imof;\",\n      \"Ƶ\": \"&imped;\",\n      \"℅\": \"&incare;\",\n      \"∞\": \"&infin;\",\n      \"⧝\": \"&infintie;\",\n      \"⊺\": \"&intercal;\",\n      \"⨗\": \"&intlarhk;\",\n      \"⨼\": \"&iprod;\",\n      \"ё\": \"&iocy;\",\n      \"į\": \"&iogon;\",\n      \"𝕚\": \"&iopf;\",\n      \"ι\": \"&iota;\",\n      \"¿\": \"&iquest;\",\n      \"𝒾\": \"&iscr;\",\n      \"⋹\": \"&isinE;\",\n      \"⋵\": \"&isindot;\",\n      \"⋴\": \"&isins;\",\n      \"⋳\": \"&isinsv;\",\n      \"ĩ\": \"&itilde;\",\n      \"і\": \"&iukcy;\",\n      \"ï\": \"&iuml;\",\n      \"ĵ\": \"&jcirc;\",\n      \"й\": \"&jcy;\",\n      \"𝔧\": \"&jfr;\",\n      \"ȷ\": \"&jmath;\",\n      \"𝕛\": \"&jopf;\",\n      \"𝒿\": \"&jscr;\",\n      \"ј\": \"&jsercy;\",\n      \"є\": \"&jukcy;\",\n      \"κ\": \"&kappa;\",\n      \"ϰ\": \"&varkappa;\",\n      \"ķ\": \"&kcedil;\",\n      \"к\": \"&kcy;\",\n      \"𝔨\": \"&kfr;\",\n      \"ĸ\": \"&kgreen;\",\n      \"х\": \"&khcy;\",\n      \"ќ\": \"&kjcy;\",\n      \"𝕜\": \"&kopf;\",\n      \"𝓀\": \"&kscr;\",\n      \"⤛\": \"&lAtail;\",\n      \"⤎\": \"&lBarr;\",\n      \"⪋\": \"&lesseqqgtr;\",\n      \"⥢\": \"&lHar;\",\n      \"ĺ\": \"&lacute;\",\n      \"⦴\": \"&laemptyv;\",\n      \"λ\": \"&lambda;\",\n      \"⦑\": \"&langd;\",\n      \"⪅\": \"&lessapprox;\",\n      \"«\": \"&laquo;\",\n      \"⤟\": \"&larrbfs;\",\n      \"⤝\": \"&larrfs;\",\n      \"↫\": \"&looparrowleft;\",\n      \"⤹\": \"&larrpl;\",\n      \"⥳\": \"&larrsim;\",\n      \"↢\": \"&leftarrowtail;\",\n      \"⪫\": \"&lat;\",\n      \"⤙\": \"&latail;\",\n      \"⪭\": \"&late;\",\n      \"⪭︀\": \"&lates;\",\n      \"⤌\": \"&lbarr;\",\n      \"❲\": \"&lbbrk;\",\n      \"{\": \"&lcub;\",\n      \"[\": \"&lsqb;\",\n      \"⦋\": \"&lbrke;\",\n      \"⦏\": \"&lbrksld;\",\n      \"⦍\": \"&lbrkslu;\",\n      \"ľ\": \"&lcaron;\",\n      \"ļ\": \"&lcedil;\",\n      \"л\": \"&lcy;\",\n      \"⤶\": \"&ldca;\",\n      \"⥧\": \"&ldrdhar;\",\n      \"⥋\": \"&ldrushar;\",\n      \"↲\": \"&ldsh;\",\n      \"≤\": \"&leq;\",\n      \"⇇\": \"&llarr;\",\n      \"⋋\": \"&lthree;\",\n      \"⪨\": \"&lescc;\",\n      \"⩿\": \"&lesdot;\",\n      \"⪁\": \"&lesdoto;\",\n      \"⪃\": \"&lesdotor;\",\n      \"⋚︀\": \"&lesg;\",\n      \"⪓\": \"&lesges;\",\n      \"⋖\": \"&ltdot;\",\n      \"⥼\": \"&lfisht;\",\n      \"𝔩\": \"&lfr;\",\n      \"⪑\": \"&lgE;\",\n      \"⥪\": \"&lharul;\",\n      \"▄\": \"&lhblk;\",\n      \"љ\": \"&ljcy;\",\n      \"⥫\": \"&llhard;\",\n      \"◺\": \"&lltri;\",\n      \"ŀ\": \"&lmidot;\",\n      \"⎰\": \"&lmoustache;\",\n      \"≨\": \"&lneqq;\",\n      \"⪉\": \"&lnapprox;\",\n      \"⪇\": \"&lneq;\",\n      \"⋦\": \"&lnsim;\",\n      \"⟬\": \"&loang;\",\n      \"⇽\": \"&loarr;\",\n      \"⟼\": \"&xmap;\",\n      \"↬\": \"&rarrlp;\",\n      \"⦅\": \"&lopar;\",\n      \"𝕝\": \"&lopf;\",\n      \"⨭\": \"&loplus;\",\n      \"⨴\": \"&lotimes;\",\n      \"∗\": \"&lowast;\",\n      \"◊\": \"&lozenge;\",\n      \"(\": \"&lpar;\",\n      \"⦓\": \"&lparlt;\",\n      \"⥭\": \"&lrhard;\",\n      \"‎\": \"&lrm;\",\n      \"⊿\": \"&lrtri;\",\n      \"‹\": \"&lsaquo;\",\n      \"𝓁\": \"&lscr;\",\n      \"⪍\": \"&lsime;\",\n      \"⪏\": \"&lsimg;\",\n      \"‚\": \"&sbquo;\",\n      \"ł\": \"&lstrok;\",\n      \"⪦\": \"&ltcc;\",\n      \"⩹\": \"&ltcir;\",\n      \"⋉\": \"&ltimes;\",\n      \"⥶\": \"&ltlarr;\",\n      \"⩻\": \"&ltquest;\",\n      \"⦖\": \"&ltrPar;\",\n      \"◃\": \"&triangleleft;\",\n      \"⥊\": \"&lurdshar;\",\n      \"⥦\": \"&luruhar;\",\n      \"≨︀\": \"&lvnE;\",\n      \"∺\": \"&mDDot;\",\n      \"¯\": \"&strns;\",\n      \"♂\": \"&male;\",\n      \"✠\": \"&maltese;\",\n      \"▮\": \"&marker;\",\n      \"⨩\": \"&mcomma;\",\n      \"м\": \"&mcy;\",\n      \"—\": \"&mdash;\",\n      \"𝔪\": \"&mfr;\",\n      \"℧\": \"&mho;\",\n      \"µ\": \"&micro;\",\n      \"⫰\": \"&midcir;\",\n      \"−\": \"&minus;\",\n      \"⨪\": \"&minusdu;\",\n      \"⫛\": \"&mlcp;\",\n      \"⊧\": \"&models;\",\n      \"𝕞\": \"&mopf;\",\n      \"𝓂\": \"&mscr;\",\n      \"μ\": \"&mu;\",\n      \"⊸\": \"&mumap;\",\n      \"⋙̸\": \"&nGg;\",\n      \"≫⃒\": \"&nGt;\",\n      \"⇍\": \"&nlArr;\",\n      \"⇎\": \"&nhArr;\",\n      \"⋘̸\": \"&nLl;\",\n      \"≪⃒\": \"&nLt;\",\n      \"⇏\": \"&nrArr;\",\n      \"⊯\": \"&nVDash;\",\n      \"⊮\": \"&nVdash;\",\n      \"ń\": \"&nacute;\",\n      \"∠⃒\": \"&nang;\",\n      \"⩰̸\": \"&napE;\",\n      \"≋̸\": \"&napid;\",\n      \"ŉ\": \"&napos;\",\n      \"♮\": \"&natural;\",\n      \"⩃\": \"&ncap;\",\n      \"ň\": \"&ncaron;\",\n      \"ņ\": \"&ncedil;\",\n      \"⩭̸\": \"&ncongdot;\",\n      \"⩂\": \"&ncup;\",\n      \"н\": \"&ncy;\",\n      \"–\": \"&ndash;\",\n      \"⇗\": \"&neArr;\",\n      \"⤤\": \"&nearhk;\",\n      \"≐̸\": \"&nedot;\",\n      \"⤨\": \"&toea;\",\n      \"𝔫\": \"&nfr;\",\n      \"↮\": \"&nleftrightarrow;\",\n      \"⫲\": \"&nhpar;\",\n      \"⋼\": \"&nis;\",\n      \"⋺\": \"&nisd;\",\n      \"њ\": \"&njcy;\",\n      \"≦̸\": \"&nleqq;\",\n      \"↚\": \"&nleftarrow;\",\n      \"‥\": \"&nldr;\",\n      \"𝕟\": \"&nopf;\",\n      \"¬\": \"&not;\",\n      \"⋹̸\": \"&notinE;\",\n      \"⋵̸\": \"&notindot;\",\n      \"⋷\": \"&notinvb;\",\n      \"⋶\": \"&notinvc;\",\n      \"⋾\": \"&notnivb;\",\n      \"⋽\": \"&notnivc;\",\n      \"⫽⃥\": \"&nparsl;\",\n      \"∂̸\": \"&npart;\",\n      \"⨔\": \"&npolint;\",\n      \"↛\": \"&nrightarrow;\",\n      \"⤳̸\": \"&nrarrc;\",\n      \"↝̸\": \"&nrarrw;\",\n      \"𝓃\": \"&nscr;\",\n      \"⊄\": \"&nsub;\",\n      \"⫅̸\": \"&nsubseteqq;\",\n      \"⊅\": \"&nsup;\",\n      \"⫆̸\": \"&nsupseteqq;\",\n      \"ñ\": \"&ntilde;\",\n      \"ν\": \"&nu;\",\n      \"#\": \"&num;\",\n      \"№\": \"&numero;\",\n      \" \": \"&numsp;\",\n      \"⊭\": \"&nvDash;\",\n      \"⤄\": \"&nvHarr;\",\n      \"≍⃒\": \"&nvap;\",\n      \"⊬\": \"&nvdash;\",\n      \"≥⃒\": \"&nvge;\",\n      \">⃒\": \"&nvgt;\",\n      \"⧞\": \"&nvinfin;\",\n      \"⤂\": \"&nvlArr;\",\n      \"≤⃒\": \"&nvle;\",\n      \"<⃒\": \"&nvlt;\",\n      \"⊴⃒\": \"&nvltrie;\",\n      \"⤃\": \"&nvrArr;\",\n      \"⊵⃒\": \"&nvrtrie;\",\n      \"∼⃒\": \"&nvsim;\",\n      \"⇖\": \"&nwArr;\",\n      \"⤣\": \"&nwarhk;\",\n      \"⤧\": \"&nwnear;\",\n      \"ó\": \"&oacute;\",\n      \"ô\": \"&ocirc;\",\n      \"о\": \"&ocy;\",\n      \"ő\": \"&odblac;\",\n      \"⨸\": \"&odiv;\",\n      \"⦼\": \"&odsold;\",\n      \"œ\": \"&oelig;\",\n      \"⦿\": \"&ofcir;\",\n      \"𝔬\": \"&ofr;\",\n      \"˛\": \"&ogon;\",\n      \"ò\": \"&ograve;\",\n      \"⧁\": \"&ogt;\",\n      \"⦵\": \"&ohbar;\",\n      \"⦾\": \"&olcir;\",\n      \"⦻\": \"&olcross;\",\n      \"⧀\": \"&olt;\",\n      \"ō\": \"&omacr;\",\n      \"ω\": \"&omega;\",\n      \"ο\": \"&omicron;\",\n      \"⦶\": \"&omid;\",\n      \"𝕠\": \"&oopf;\",\n      \"⦷\": \"&opar;\",\n      \"⦹\": \"&operp;\",\n      \"∨\": \"&vee;\",\n      \"⩝\": \"&ord;\",\n      \"ℴ\": \"&oscr;\",\n      \"ª\": \"&ordf;\",\n      \"º\": \"&ordm;\",\n      \"⊶\": \"&origof;\",\n      \"⩖\": \"&oror;\",\n      \"⩗\": \"&orslope;\",\n      \"⩛\": \"&orv;\",\n      \"ø\": \"&oslash;\",\n      \"⊘\": \"&osol;\",\n      \"õ\": \"&otilde;\",\n      \"⨶\": \"&otimesas;\",\n      \"ö\": \"&ouml;\",\n      \"⌽\": \"&ovbar;\",\n      \"¶\": \"&para;\",\n      \"⫳\": \"&parsim;\",\n      \"⫽\": \"&parsl;\",\n      \"п\": \"&pcy;\",\n      \"%\": \"&percnt;\",\n      \".\": \"&period;\",\n      \"‰\": \"&permil;\",\n      \"‱\": \"&pertenk;\",\n      \"𝔭\": \"&pfr;\",\n      \"φ\": \"&phi;\",\n      \"ϕ\": \"&varphi;\",\n      \"☎\": \"&phone;\",\n      \"π\": \"&pi;\",\n      \"ϖ\": \"&varpi;\",\n      \"ℎ\": \"&planckh;\",\n      \"+\": \"&plus;\",\n      \"⨣\": \"&plusacir;\",\n      \"⨢\": \"&pluscir;\",\n      \"⨥\": \"&plusdu;\",\n      \"⩲\": \"&pluse;\",\n      \"⨦\": \"&plussim;\",\n      \"⨧\": \"&plustwo;\",\n      \"⨕\": \"&pointint;\",\n      \"𝕡\": \"&popf;\",\n      \"£\": \"&pound;\",\n      \"⪳\": \"&prE;\",\n      \"⪷\": \"&precapprox;\",\n      \"⪹\": \"&prnap;\",\n      \"⪵\": \"&prnE;\",\n      \"⋨\": \"&prnsim;\",\n      \"′\": \"&prime;\",\n      \"⌮\": \"&profalar;\",\n      \"⌒\": \"&profline;\",\n      \"⌓\": \"&profsurf;\",\n      \"⊰\": \"&prurel;\",\n      \"𝓅\": \"&pscr;\",\n      \"ψ\": \"&psi;\",\n      \" \": \"&puncsp;\",\n      \"𝔮\": \"&qfr;\",\n      \"𝕢\": \"&qopf;\",\n      \"⁗\": \"&qprime;\",\n      \"𝓆\": \"&qscr;\",\n      \"⨖\": \"&quatint;\",\n      \"?\": \"&quest;\",\n      \"⤜\": \"&rAtail;\",\n      \"⥤\": \"&rHar;\",\n      \"∽̱\": \"&race;\",\n      \"ŕ\": \"&racute;\",\n      \"⦳\": \"&raemptyv;\",\n      \"⦒\": \"&rangd;\",\n      \"⦥\": \"&range;\",\n      \"»\": \"&raquo;\",\n      \"⥵\": \"&rarrap;\",\n      \"⤠\": \"&rarrbfs;\",\n      \"⤳\": \"&rarrc;\",\n      \"⤞\": \"&rarrfs;\",\n      \"⥅\": \"&rarrpl;\",\n      \"⥴\": \"&rarrsim;\",\n      \"↣\": \"&rightarrowtail;\",\n      \"↝\": \"&rightsquigarrow;\",\n      \"⤚\": \"&ratail;\",\n      \"∶\": \"&ratio;\",\n      \"❳\": \"&rbbrk;\",\n      \"}\": \"&rcub;\",\n      \"]\": \"&rsqb;\",\n      \"⦌\": \"&rbrke;\",\n      \"⦎\": \"&rbrksld;\",\n      \"⦐\": \"&rbrkslu;\",\n      \"ř\": \"&rcaron;\",\n      \"ŗ\": \"&rcedil;\",\n      \"р\": \"&rcy;\",\n      \"⤷\": \"&rdca;\",\n      \"⥩\": \"&rdldhar;\",\n      \"↳\": \"&rdsh;\",\n      \"▭\": \"&rect;\",\n      \"⥽\": \"&rfisht;\",\n      \"𝔯\": \"&rfr;\",\n      \"⥬\": \"&rharul;\",\n      \"ρ\": \"&rho;\",\n      \"ϱ\": \"&varrho;\",\n      \"⇉\": \"&rrarr;\",\n      \"⋌\": \"&rthree;\",\n      \"˚\": \"&ring;\",\n      \"‏\": \"&rlm;\",\n      \"⎱\": \"&rmoustache;\",\n      \"⫮\": \"&rnmid;\",\n      \"⟭\": \"&roang;\",\n      \"⇾\": \"&roarr;\",\n      \"⦆\": \"&ropar;\",\n      \"𝕣\": \"&ropf;\",\n      \"⨮\": \"&roplus;\",\n      \"⨵\": \"&rotimes;\",\n      \")\": \"&rpar;\",\n      \"⦔\": \"&rpargt;\",\n      \"⨒\": \"&rppolint;\",\n      \"›\": \"&rsaquo;\",\n      \"𝓇\": \"&rscr;\",\n      \"⋊\": \"&rtimes;\",\n      \"▹\": \"&triangleright;\",\n      \"⧎\": \"&rtriltri;\",\n      \"⥨\": \"&ruluhar;\",\n      \"℞\": \"&rx;\",\n      \"ś\": \"&sacute;\",\n      \"⪴\": \"&scE;\",\n      \"⪸\": \"&succapprox;\",\n      \"š\": \"&scaron;\",\n      \"ş\": \"&scedil;\",\n      \"ŝ\": \"&scirc;\",\n      \"⪶\": \"&succneqq;\",\n      \"⪺\": \"&succnapprox;\",\n      \"⋩\": \"&succnsim;\",\n      \"⨓\": \"&scpolint;\",\n      \"с\": \"&scy;\",\n      \"⋅\": \"&sdot;\",\n      \"⩦\": \"&sdote;\",\n      \"⇘\": \"&seArr;\",\n      \"§\": \"&sect;\",\n      \";\": \"&semi;\",\n      \"⤩\": \"&tosa;\",\n      \"✶\": \"&sext;\",\n      \"𝔰\": \"&sfr;\",\n      \"♯\": \"&sharp;\",\n      \"щ\": \"&shchcy;\",\n      \"ш\": \"&shcy;\",\n      \"­\": \"&shy;\",\n      \"σ\": \"&sigma;\",\n      \"ς\": \"&varsigma;\",\n      \"⩪\": \"&simdot;\",\n      \"⪞\": \"&simg;\",\n      \"⪠\": \"&simgE;\",\n      \"⪝\": \"&siml;\",\n      \"⪟\": \"&simlE;\",\n      \"≆\": \"&simne;\",\n      \"⨤\": \"&simplus;\",\n      \"⥲\": \"&simrarr;\",\n      \"⨳\": \"&smashp;\",\n      \"⧤\": \"&smeparsl;\",\n      \"⌣\": \"&ssmile;\",\n      \"⪪\": \"&smt;\",\n      \"⪬\": \"&smte;\",\n      \"⪬︀\": \"&smtes;\",\n      \"ь\": \"&softcy;\",\n      \"/\": \"&sol;\",\n      \"⧄\": \"&solb;\",\n      \"⌿\": \"&solbar;\",\n      \"𝕤\": \"&sopf;\",\n      \"♠\": \"&spadesuit;\",\n      \"⊓︀\": \"&sqcaps;\",\n      \"⊔︀\": \"&sqcups;\",\n      \"𝓈\": \"&sscr;\",\n      \"☆\": \"&star;\",\n      \"⊂\": \"&subset;\",\n      \"⫅\": \"&subseteqq;\",\n      \"⪽\": \"&subdot;\",\n      \"⫃\": \"&subedot;\",\n      \"⫁\": \"&submult;\",\n      \"⫋\": \"&subsetneqq;\",\n      \"⊊\": \"&subsetneq;\",\n      \"⪿\": \"&subplus;\",\n      \"⥹\": \"&subrarr;\",\n      \"⫇\": \"&subsim;\",\n      \"⫕\": \"&subsub;\",\n      \"⫓\": \"&subsup;\",\n      \"♪\": \"&sung;\",\n      \"¹\": \"&sup1;\",\n      \"²\": \"&sup2;\",\n      \"³\": \"&sup3;\",\n      \"⫆\": \"&supseteqq;\",\n      \"⪾\": \"&supdot;\",\n      \"⫘\": \"&supdsub;\",\n      \"⫄\": \"&supedot;\",\n      \"⟉\": \"&suphsol;\",\n      \"⫗\": \"&suphsub;\",\n      \"⥻\": \"&suplarr;\",\n      \"⫂\": \"&supmult;\",\n      \"⫌\": \"&supsetneqq;\",\n      \"⊋\": \"&supsetneq;\",\n      \"⫀\": \"&supplus;\",\n      \"⫈\": \"&supsim;\",\n      \"⫔\": \"&supsub;\",\n      \"⫖\": \"&supsup;\",\n      \"⇙\": \"&swArr;\",\n      \"⤪\": \"&swnwar;\",\n      \"ß\": \"&szlig;\",\n      \"⌖\": \"&target;\",\n      \"τ\": \"&tau;\",\n      \"ť\": \"&tcaron;\",\n      \"ţ\": \"&tcedil;\",\n      \"т\": \"&tcy;\",\n      \"⌕\": \"&telrec;\",\n      \"𝔱\": \"&tfr;\",\n      \"θ\": \"&theta;\",\n      \"ϑ\": \"&vartheta;\",\n      \"þ\": \"&thorn;\",\n      \"×\": \"&times;\",\n      \"⨱\": \"&timesbar;\",\n      \"⨰\": \"&timesd;\",\n      \"⌶\": \"&topbot;\",\n      \"⫱\": \"&topcir;\",\n      \"𝕥\": \"&topf;\",\n      \"⫚\": \"&topfork;\",\n      \"‴\": \"&tprime;\",\n      \"▵\": \"&utri;\",\n      \"≜\": \"&trie;\",\n      \"◬\": \"&tridot;\",\n      \"⨺\": \"&triminus;\",\n      \"⨹\": \"&triplus;\",\n      \"⧍\": \"&trisb;\",\n      \"⨻\": \"&tritime;\",\n      \"⏢\": \"&trpezium;\",\n      \"𝓉\": \"&tscr;\",\n      \"ц\": \"&tscy;\",\n      \"ћ\": \"&tshcy;\",\n      \"ŧ\": \"&tstrok;\",\n      \"⥣\": \"&uHar;\",\n      \"ú\": \"&uacute;\",\n      \"ў\": \"&ubrcy;\",\n      \"ŭ\": \"&ubreve;\",\n      \"û\": \"&ucirc;\",\n      \"у\": \"&ucy;\",\n      \"ű\": \"&udblac;\",\n      \"⥾\": \"&ufisht;\",\n      \"𝔲\": \"&ufr;\",\n      \"ù\": \"&ugrave;\",\n      \"▀\": \"&uhblk;\",\n      \"⌜\": \"&ulcorner;\",\n      \"⌏\": \"&ulcrop;\",\n      \"◸\": \"&ultri;\",\n      \"ū\": \"&umacr;\",\n      \"ų\": \"&uogon;\",\n      \"𝕦\": \"&uopf;\",\n      \"υ\": \"&upsilon;\",\n      \"⇈\": \"&uuarr;\",\n      \"⌝\": \"&urcorner;\",\n      \"⌎\": \"&urcrop;\",\n      \"ů\": \"&uring;\",\n      \"◹\": \"&urtri;\",\n      \"𝓊\": \"&uscr;\",\n      \"⋰\": \"&utdot;\",\n      \"ũ\": \"&utilde;\",\n      \"ü\": \"&uuml;\",\n      \"⦧\": \"&uwangle;\",\n      \"⫨\": \"&vBar;\",\n      \"⫩\": \"&vBarv;\",\n      \"⦜\": \"&vangrt;\",\n      \"⊊︀\": \"&vsubne;\",\n      \"⫋︀\": \"&vsubnE;\",\n      \"⊋︀\": \"&vsupne;\",\n      \"⫌︀\": \"&vsupnE;\",\n      \"в\": \"&vcy;\",\n      \"⊻\": \"&veebar;\",\n      \"≚\": \"&veeeq;\",\n      \"⋮\": \"&vellip;\",\n      \"𝔳\": \"&vfr;\",\n      \"𝕧\": \"&vopf;\",\n      \"𝓋\": \"&vscr;\",\n      \"⦚\": \"&vzigzag;\",\n      \"ŵ\": \"&wcirc;\",\n      \"⩟\": \"&wedbar;\",\n      \"≙\": \"&wedgeq;\",\n      \"℘\": \"&wp;\",\n      \"𝔴\": \"&wfr;\",\n      \"𝕨\": \"&wopf;\",\n      \"𝓌\": \"&wscr;\",\n      \"𝔵\": \"&xfr;\",\n      \"ξ\": \"&xi;\",\n      \"⋻\": \"&xnis;\",\n      \"𝕩\": \"&xopf;\",\n      \"𝓍\": \"&xscr;\",\n      \"ý\": \"&yacute;\",\n      \"я\": \"&yacy;\",\n      \"ŷ\": \"&ycirc;\",\n      \"ы\": \"&ycy;\",\n      \"¥\": \"&yen;\",\n      \"𝔶\": \"&yfr;\",\n      \"ї\": \"&yicy;\",\n      \"𝕪\": \"&yopf;\",\n      \"𝓎\": \"&yscr;\",\n      \"ю\": \"&yucy;\",\n      \"ÿ\": \"&yuml;\",\n      \"ź\": \"&zacute;\",\n      \"ž\": \"&zcaron;\",\n      \"з\": \"&zcy;\",\n      \"ż\": \"&zdot;\",\n      \"ζ\": \"&zeta;\",\n      \"𝔷\": \"&zfr;\",\n      \"ж\": \"&zhcy;\",\n      \"⇝\": \"&zigrarr;\",\n      \"𝕫\": \"&zopf;\",\n      \"𝓏\": \"&zscr;\",\n      \"‍\": \"&zwj;\",\n      \"‌\": \"&zwnj;\"\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/named-references.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/numeric-unicode-map.js":
/*!***************************************************************!*\
  !*** ./node_modules/html-entities/lib/numeric-unicode-map.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.numericUnicodeMap = {\n  0: 65533,\n  128: 8364,\n  130: 8218,\n  131: 402,\n  132: 8222,\n  133: 8230,\n  134: 8224,\n  135: 8225,\n  136: 710,\n  137: 8240,\n  138: 352,\n  139: 8249,\n  140: 338,\n  142: 381,\n  145: 8216,\n  146: 8217,\n  147: 8220,\n  148: 8221,\n  149: 8226,\n  150: 8211,\n  151: 8212,\n  152: 732,\n  153: 8482,\n  154: 353,\n  155: 8250,\n  156: 339,\n  158: 382,\n  159: 376\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIvbnVtZXJpYy11bmljb2RlLW1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIvbnVtZXJpYy11bmljb2RlLW1hcC5qcz9kMDRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5udW1lcmljVW5pY29kZU1hcCA9IHtcbiAgMDogNjU1MzMsXG4gIDEyODogODM2NCxcbiAgMTMwOiA4MjE4LFxuICAxMzE6IDQwMixcbiAgMTMyOiA4MjIyLFxuICAxMzM6IDgyMzAsXG4gIDEzNDogODIyNCxcbiAgMTM1OiA4MjI1LFxuICAxMzY6IDcxMCxcbiAgMTM3OiA4MjQwLFxuICAxMzg6IDM1MixcbiAgMTM5OiA4MjQ5LFxuICAxNDA6IDMzOCxcbiAgMTQyOiAzODEsXG4gIDE0NTogODIxNixcbiAgMTQ2OiA4MjE3LFxuICAxNDc6IDgyMjAsXG4gIDE0ODogODIyMSxcbiAgMTQ5OiA4MjI2LFxuICAxNTA6IDgyMTEsXG4gIDE1MTogODIxMixcbiAgMTUyOiA3MzIsXG4gIDE1MzogODQ4MixcbiAgMTU0OiAzNTMsXG4gIDE1NTogODI1MCxcbiAgMTU2OiAzMzksXG4gIDE1ODogMzgyLFxuICAxNTk6IDM3NlxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/numeric-unicode-map.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/surrogate-pairs.js":
/*!***********************************************************!*\
  !*** ./node_modules/html-entities/lib/surrogate-pairs.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.fromCodePoint = String.fromCodePoint || function (astralCodePoint) {\n  return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);\n};\nexports.getCodePoint = String.prototype.codePointAt ? function (input, position) {\n  return input.codePointAt(position);\n} : function (input, position) {\n  return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;\n};\nexports.highSurrogateFrom = 55296;\nexports.highSurrogateTo = 56319;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIvc3Vycm9nYXRlLXBhaXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy9odG1sLWVudGl0aWVzL2xpYi9zdXJyb2dhdGUtcGFpcnMuanM/OWVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZnJvbUNvZGVQb2ludCA9IFN0cmluZy5mcm9tQ29kZVBvaW50IHx8IGZ1bmN0aW9uIChhc3RyYWxDb2RlUG9pbnQpIHtcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoTWF0aC5mbG9vcigoYXN0cmFsQ29kZVBvaW50IC0gNjU1MzYpIC8gMTAyNCkgKyA1NTI5NiwgKGFzdHJhbENvZGVQb2ludCAtIDY1NTM2KSAlIDEwMjQgKyA1NjMyMCk7XG59O1xuZXhwb3J0cy5nZXRDb2RlUG9pbnQgPSBTdHJpbmcucHJvdG90eXBlLmNvZGVQb2ludEF0ID8gZnVuY3Rpb24gKGlucHV0LCBwb3NpdGlvbikge1xuICByZXR1cm4gaW5wdXQuY29kZVBvaW50QXQocG9zaXRpb24pO1xufSA6IGZ1bmN0aW9uIChpbnB1dCwgcG9zaXRpb24pIHtcbiAgcmV0dXJuIChpbnB1dC5jaGFyQ29kZUF0KHBvc2l0aW9uKSAtIDU1Mjk2KSAqIDEwMjQgKyBpbnB1dC5jaGFyQ29kZUF0KHBvc2l0aW9uICsgMSkgLSA1NjMyMCArIDY1NTM2O1xufTtcbmV4cG9ydHMuaGlnaFN1cnJvZ2F0ZUZyb20gPSA1NTI5NjtcbmV4cG9ydHMuaGlnaFN1cnJvZ2F0ZVRvID0gNTYzMTk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/surrogate-pairs.js\n");

/***/ }),

/***/ "./node_modules/webpack/hot/dev-server.js":
/*!************************************************!*\
  !*** ./node_modules/webpack/hot/dev-server.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/* globals __webpack_hash__ */\nif (true) {\n  /** @type {undefined|string} */\n  var lastHash;\n  var upToDate = function upToDate() {\n    return /** @type {string} */lastHash.indexOf(__webpack_require__.h()) >= 0;\n  };\n  var log = __webpack_require__(/*! ./log */ \"./node_modules/webpack/hot/log.js\");\n  var check = function check() {\n    module.hot.check(true).then(function (updatedModules) {\n      if (!updatedModules) {\n        log(\"warning\", \"[HMR] Cannot find update. \" + (typeof window !== \"undefined\" ? \"Need to do a full reload!\" : \"Please reload manually!\"));\n        log(\"warning\", \"[HMR] (Probably because of restarting the webpack-dev-server)\");\n        if (typeof window !== \"undefined\") {\n          window.location.reload();\n        }\n        return;\n      }\n      if (!upToDate()) {\n        check();\n      }\n      __webpack_require__(/*! ./log-apply-result */ \"./node_modules/webpack/hot/log-apply-result.js\")(updatedModules, updatedModules);\n      if (upToDate()) {\n        log(\"info\", \"[HMR] App is up to date.\");\n      }\n    }).catch(function (err) {\n      var status = module.hot.status();\n      if ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n        log(\"warning\", \"[HMR] Cannot apply update. \" + (typeof window !== \"undefined\" ? \"Need to do a full reload!\" : \"Please reload manually!\"));\n        log(\"warning\", \"[HMR] \" + log.formatError(err));\n        if (typeof window !== \"undefined\") {\n          window.location.reload();\n        }\n      } else {\n        log(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n      }\n    });\n  };\n  var hotEmitter = __webpack_require__(/*! ./emitter */ \"./node_modules/webpack/hot/emitter.js\");\n  hotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n    lastHash = currentHash;\n    if (!upToDate() && module.hot.status() === \"idle\") {\n      log(\"info\", \"[HMR] Checking for updates on the server...\");\n      check();\n    }\n  });\n  log(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvZGV2LXNlcnZlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBLHNCQUFzQixRQUFRLG1CQUFtQix1QkFBZ0I7QUFDakU7QUFDQSxZQUFZLG1CQUFPLENBQUMsZ0RBQU87QUFDM0I7QUFDQSxJQUFJLFVBQVU7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxtQkFBTyxDQUFDLDBFQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CLFVBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyx3REFBVztBQUN0QztBQUNBO0FBQ0EsdUJBQXVCLFVBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsRUFBRSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2hvdC9kZXYtc2VydmVyLmpzPzEyYzgiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8qIGdsb2JhbHMgX193ZWJwYWNrX2hhc2hfXyAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgLyoqIEB0eXBlIHt1bmRlZmluZWR8c3RyaW5nfSAqL1xuICB2YXIgbGFzdEhhc2g7XG4gIHZhciB1cFRvRGF0ZSA9IGZ1bmN0aW9uIHVwVG9EYXRlKCkge1xuICAgIHJldHVybiAvKiogQHR5cGUge3N0cmluZ30gKi9sYXN0SGFzaC5pbmRleE9mKF9fd2VicGFja19oYXNoX18pID49IDA7XG4gIH07XG4gIHZhciBsb2cgPSByZXF1aXJlKFwiLi9sb2dcIik7XG4gIHZhciBjaGVjayA9IGZ1bmN0aW9uIGNoZWNrKCkge1xuICAgIG1vZHVsZS5ob3QuY2hlY2sodHJ1ZSkudGhlbihmdW5jdGlvbiAodXBkYXRlZE1vZHVsZXMpIHtcbiAgICAgIGlmICghdXBkYXRlZE1vZHVsZXMpIHtcbiAgICAgICAgbG9nKFwid2FybmluZ1wiLCBcIltITVJdIENhbm5vdCBmaW5kIHVwZGF0ZS4gXCIgKyAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IFwiTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiIDogXCJQbGVhc2UgcmVsb2FkIG1hbnVhbGx5IVwiKSk7XG4gICAgICAgIGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSAoUHJvYmFibHkgYmVjYXVzZSBvZiByZXN0YXJ0aW5nIHRoZSB3ZWJwYWNrLWRldi1zZXJ2ZXIpXCIpO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoIXVwVG9EYXRlKCkpIHtcbiAgICAgICAgY2hlY2soKTtcbiAgICAgIH1cbiAgICAgIHJlcXVpcmUoXCIuL2xvZy1hcHBseS1yZXN1bHRcIikodXBkYXRlZE1vZHVsZXMsIHVwZGF0ZWRNb2R1bGVzKTtcbiAgICAgIGlmICh1cFRvRGF0ZSgpKSB7XG4gICAgICAgIGxvZyhcImluZm9cIiwgXCJbSE1SXSBBcHAgaXMgdXAgdG8gZGF0ZS5cIik7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgdmFyIHN0YXR1cyA9IG1vZHVsZS5ob3Quc3RhdHVzKCk7XG4gICAgICBpZiAoW1wiYWJvcnRcIiwgXCJmYWlsXCJdLmluZGV4T2Yoc3RhdHVzKSA+PSAwKSB7XG4gICAgICAgIGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSBDYW5ub3QgYXBwbHkgdXBkYXRlLiBcIiArICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gXCJOZWVkIHRvIGRvIGEgZnVsbCByZWxvYWQhXCIgOiBcIlBsZWFzZSByZWxvYWQgbWFudWFsbHkhXCIpKTtcbiAgICAgICAgbG9nKFwid2FybmluZ1wiLCBcIltITVJdIFwiICsgbG9nLmZvcm1hdEVycm9yKGVycikpO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9nKFwid2FybmluZ1wiLCBcIltITVJdIFVwZGF0ZSBmYWlsZWQ6IFwiICsgbG9nLmZvcm1hdEVycm9yKGVycikpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICB2YXIgaG90RW1pdHRlciA9IHJlcXVpcmUoXCIuL2VtaXR0ZXJcIik7XG4gIGhvdEVtaXR0ZXIub24oXCJ3ZWJwYWNrSG90VXBkYXRlXCIsIGZ1bmN0aW9uIChjdXJyZW50SGFzaCkge1xuICAgIGxhc3RIYXNoID0gY3VycmVudEhhc2g7XG4gICAgaWYgKCF1cFRvRGF0ZSgpICYmIG1vZHVsZS5ob3Quc3RhdHVzKCkgPT09IFwiaWRsZVwiKSB7XG4gICAgICBsb2coXCJpbmZvXCIsIFwiW0hNUl0gQ2hlY2tpbmcgZm9yIHVwZGF0ZXMgb24gdGhlIHNlcnZlci4uLlwiKTtcbiAgICAgIGNoZWNrKCk7XG4gICAgfVxuICB9KTtcbiAgbG9nKFwiaW5mb1wiLCBcIltITVJdIFdhaXRpbmcgZm9yIHVwZGF0ZSBzaWduYWwgZnJvbSBXRFMuLi5cIik7XG59IGVsc2Uge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJbSE1SXSBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGlzIGRpc2FibGVkLlwiKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/hot/dev-server.js\n");

/***/ }),

/***/ "./node_modules/webpack/hot/emitter.js":
/*!*********************************************!*\
  !*** ./node_modules/webpack/hot/emitter.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var EventEmitter = __webpack_require__(/*! events */ \"events\");\nmodule.exports = new EventEmitter();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvZW1pdHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvZW1pdHRlci5qcz8xMjBmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/hot/emitter.js\n");

/***/ }),

/***/ "./node_modules/webpack/hot/log-apply-result.js":
/*!******************************************************!*\
  !*** ./node_modules/webpack/hot/log-apply-result.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/**\n * @param {(string | number)[]} updatedModules updated modules\n * @param {(string | number)[] | null} renewedModules renewed modules\n */\nmodule.exports = function (updatedModules, renewedModules) {\n  var unacceptedModules = updatedModules.filter(function (moduleId) {\n    return renewedModules && renewedModules.indexOf(moduleId) < 0;\n  });\n  var log = __webpack_require__(/*! ./log */ \"./node_modules/webpack/hot/log.js\");\n  if (unacceptedModules.length > 0) {\n    log(\"warning\", \"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\");\n    unacceptedModules.forEach(function (moduleId) {\n      log(\"warning\", \"[HMR]  - \" + moduleId);\n    });\n  }\n  if (!renewedModules || renewedModules.length === 0) {\n    log(\"info\", \"[HMR] Nothing hot updated.\");\n  } else {\n    log(\"info\", \"[HMR] Updated modules:\");\n    renewedModules.forEach(function (moduleId) {\n      if (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n        var parts = moduleId.split(\"!\");\n        log.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n        log(\"info\", \"[HMR]  - \" + moduleId);\n        log.groupEnd(\"info\");\n      } else {\n        log(\"info\", \"[HMR]  - \" + moduleId);\n      }\n    });\n    var numberIds = renewedModules.every(function (moduleId) {\n      return typeof moduleId === \"number\";\n    });\n    if (numberIds) log(\"info\", '[HMR] Consider using the optimization.moduleIds: \"named\" for module names.');\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvbG9nLWFwcGx5LXJlc3VsdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILFlBQVksbUJBQU8sQ0FBQyxnREFBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZzFfZWxlY3Ryb24vLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvbG9nLWFwcGx5LXJlc3VsdC5qcz9mZjM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbi8qKlxuICogQHBhcmFtIHsoc3RyaW5nIHwgbnVtYmVyKVtdfSB1cGRhdGVkTW9kdWxlcyB1cGRhdGVkIG1vZHVsZXNcbiAqIEBwYXJhbSB7KHN0cmluZyB8IG51bWJlcilbXSB8IG51bGx9IHJlbmV3ZWRNb2R1bGVzIHJlbmV3ZWQgbW9kdWxlc1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cGRhdGVkTW9kdWxlcywgcmVuZXdlZE1vZHVsZXMpIHtcbiAgdmFyIHVuYWNjZXB0ZWRNb2R1bGVzID0gdXBkYXRlZE1vZHVsZXMuZmlsdGVyKGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuICAgIHJldHVybiByZW5ld2VkTW9kdWxlcyAmJiByZW5ld2VkTW9kdWxlcy5pbmRleE9mKG1vZHVsZUlkKSA8IDA7XG4gIH0pO1xuICB2YXIgbG9nID0gcmVxdWlyZShcIi4vbG9nXCIpO1xuICBpZiAodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xuICAgIGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSBUaGUgZm9sbG93aW5nIG1vZHVsZXMgY291bGRuJ3QgYmUgaG90IHVwZGF0ZWQ6IChUaGV5IHdvdWxkIG5lZWQgYSBmdWxsIHJlbG9hZCEpXCIpO1xuICAgIHVuYWNjZXB0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG4gICAgICBsb2coXCJ3YXJuaW5nXCIsIFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XG4gICAgfSk7XG4gIH1cbiAgaWYgKCFyZW5ld2VkTW9kdWxlcyB8fCByZW5ld2VkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcbiAgICBsb2coXCJpbmZvXCIsIFwiW0hNUl0gTm90aGluZyBob3QgdXBkYXRlZC5cIik7XG4gIH0gZWxzZSB7XG4gICAgbG9nKFwiaW5mb1wiLCBcIltITVJdIFVwZGF0ZWQgbW9kdWxlczpcIik7XG4gICAgcmVuZXdlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlSWQpIHtcbiAgICAgIGlmICh0eXBlb2YgbW9kdWxlSWQgPT09IFwic3RyaW5nXCIgJiYgbW9kdWxlSWQuaW5kZXhPZihcIiFcIikgIT09IC0xKSB7XG4gICAgICAgIHZhciBwYXJ0cyA9IG1vZHVsZUlkLnNwbGl0KFwiIVwiKTtcbiAgICAgICAgbG9nLmdyb3VwQ29sbGFwc2VkKFwiaW5mb1wiLCBcIltITVJdICAtIFwiICsgcGFydHMucG9wKCkpO1xuICAgICAgICBsb2coXCJpbmZvXCIsIFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XG4gICAgICAgIGxvZy5ncm91cEVuZChcImluZm9cIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2coXCJpbmZvXCIsIFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdmFyIG51bWJlcklkcyA9IHJlbmV3ZWRNb2R1bGVzLmV2ZXJ5KGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuICAgICAgcmV0dXJuIHR5cGVvZiBtb2R1bGVJZCA9PT0gXCJudW1iZXJcIjtcbiAgICB9KTtcbiAgICBpZiAobnVtYmVySWRzKSBsb2coXCJpbmZvXCIsICdbSE1SXSBDb25zaWRlciB1c2luZyB0aGUgb3B0aW1pemF0aW9uLm1vZHVsZUlkczogXCJuYW1lZFwiIGZvciBtb2R1bGUgbmFtZXMuJyk7XG4gIH1cbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/hot/log-apply-result.js\n");

/***/ }),

/***/ "./node_modules/webpack/hot/log.js":
/*!*****************************************!*\
  !*** ./node_modules/webpack/hot/log.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/** @typedef {\"info\" | \"warning\" | \"error\"} LogLevel */\n\n/** @type {LogLevel} */\nvar logLevel = \"info\";\nfunction dummy() {}\n\n/**\n * @param {LogLevel} level log level\n * @returns {boolean} true, if should log\n */\nfunction shouldLog(level) {\n  var shouldLog = logLevel === \"info\" && level === \"info\" || [\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\" || [\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\";\n  return shouldLog;\n}\n\n/**\n * @param {(msg?: string) => void} logFn log function\n * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient\n */\nfunction logGroup(logFn) {\n  return function (level, msg) {\n    if (shouldLog(level)) {\n      logFn(msg);\n    }\n  };\n}\n\n/**\n * @param {LogLevel} level log level\n * @param {string|Error} msg message\n */\nmodule.exports = function (level, msg) {\n  if (shouldLog(level)) {\n    if (level === \"info\") {\n      console.log(msg);\n    } else if (level === \"warning\") {\n      console.warn(msg);\n    } else if (level === \"error\") {\n      console.error(msg);\n    }\n  }\n};\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\nmodule.exports.group = logGroup(group);\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\nmodule.exports.groupEnd = logGroup(groupEnd);\n\n/**\n * @param {LogLevel} level log level\n */\nmodule.exports.setLogLevel = function (level) {\n  logLevel = level;\n};\n\n/**\n * @param {Error} err error\n * @returns {string} formatted error\n */\nmodule.exports.formatError = function (err) {\n  var message = err.message;\n  var stack = err.stack;\n  if (!stack) {\n    return message;\n  } else if (stack.indexOf(message) < 0) {\n    return message + \"\\n\" + stack;\n  }\n  return stack;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvbG9nLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsOEJBQThCOztBQUU1QyxXQUFXLFVBQVU7QUFDckI7QUFDQTs7QUFFQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DLGFBQWEseUNBQXlDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsNkJBQTZCO0FBQzdCLHVCQUF1Qjs7QUFFdkI7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWcxX2VsZWN0cm9uLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2svaG90L2xvZy5qcz85M2RlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAdHlwZWRlZiB7XCJpbmZvXCIgfCBcIndhcm5pbmdcIiB8IFwiZXJyb3JcIn0gTG9nTGV2ZWwgKi9cblxuLyoqIEB0eXBlIHtMb2dMZXZlbH0gKi9cbnZhciBsb2dMZXZlbCA9IFwiaW5mb1wiO1xuZnVuY3Rpb24gZHVtbXkoKSB7fVxuXG4vKipcbiAqIEBwYXJhbSB7TG9nTGV2ZWx9IGxldmVsIGxvZyBsZXZlbFxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUsIGlmIHNob3VsZCBsb2dcbiAqL1xuZnVuY3Rpb24gc2hvdWxkTG9nKGxldmVsKSB7XG4gIHZhciBzaG91bGRMb2cgPSBsb2dMZXZlbCA9PT0gXCJpbmZvXCIgJiYgbGV2ZWwgPT09IFwiaW5mb1wiIHx8IFtcImluZm9cIiwgXCJ3YXJuaW5nXCJdLmluZGV4T2YobG9nTGV2ZWwpID49IDAgJiYgbGV2ZWwgPT09IFwid2FybmluZ1wiIHx8IFtcImluZm9cIiwgXCJ3YXJuaW5nXCIsIFwiZXJyb3JcIl0uaW5kZXhPZihsb2dMZXZlbCkgPj0gMCAmJiBsZXZlbCA9PT0gXCJlcnJvclwiO1xuICByZXR1cm4gc2hvdWxkTG9nO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7KG1zZz86IHN0cmluZykgPT4gdm9pZH0gbG9nRm4gbG9nIGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7KGxldmVsOiBMb2dMZXZlbCwgbXNnPzogc3RyaW5nKSA9PiB2b2lkfSBmdW5jdGlvbiB0aGF0IGxvZ3Mgd2hlbiBsb2cgbGV2ZWwgaXMgc3VmZmljaWVudFxuICovXG5mdW5jdGlvbiBsb2dHcm91cChsb2dGbikge1xuICByZXR1cm4gZnVuY3Rpb24gKGxldmVsLCBtc2cpIHtcbiAgICBpZiAoc2hvdWxkTG9nKGxldmVsKSkge1xuICAgICAgbG9nRm4obXNnKTtcbiAgICB9XG4gIH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtMb2dMZXZlbH0gbGV2ZWwgbG9nIGxldmVsXG4gKiBAcGFyYW0ge3N0cmluZ3xFcnJvcn0gbXNnIG1lc3NhZ2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGV2ZWwsIG1zZykge1xuICBpZiAoc2hvdWxkTG9nKGxldmVsKSkge1xuICAgIGlmIChsZXZlbCA9PT0gXCJpbmZvXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKG1zZyk7XG4gICAgfSBlbHNlIGlmIChsZXZlbCA9PT0gXCJ3YXJuaW5nXCIpIHtcbiAgICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICAgIH0gZWxzZSBpZiAobGV2ZWwgPT09IFwiZXJyb3JcIikge1xuICAgICAgY29uc29sZS5lcnJvcihtc2cpO1xuICAgIH1cbiAgfVxufTtcbnZhciBncm91cCA9IGNvbnNvbGUuZ3JvdXAgfHwgZHVtbXk7XG52YXIgZ3JvdXBDb2xsYXBzZWQgPSBjb25zb2xlLmdyb3VwQ29sbGFwc2VkIHx8IGR1bW15O1xudmFyIGdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZCB8fCBkdW1teTtcbm1vZHVsZS5leHBvcnRzLmdyb3VwID0gbG9nR3JvdXAoZ3JvdXApO1xubW9kdWxlLmV4cG9ydHMuZ3JvdXBDb2xsYXBzZWQgPSBsb2dHcm91cChncm91cENvbGxhcHNlZCk7XG5tb2R1bGUuZXhwb3J0cy5ncm91cEVuZCA9IGxvZ0dyb3VwKGdyb3VwRW5kKTtcblxuLyoqXG4gKiBAcGFyYW0ge0xvZ0xldmVsfSBsZXZlbCBsb2cgbGV2ZWxcbiAqL1xubW9kdWxlLmV4cG9ydHMuc2V0TG9nTGV2ZWwgPSBmdW5jdGlvbiAobGV2ZWwpIHtcbiAgbG9nTGV2ZWwgPSBsZXZlbDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyIGVycm9yXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBmb3JtYXR0ZWQgZXJyb3JcbiAqL1xubW9kdWxlLmV4cG9ydHMuZm9ybWF0RXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIHZhciBtZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHZhciBzdGFjayA9IGVyci5zdGFjaztcbiAgaWYgKCFzdGFjaykge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9IGVsc2UgaWYgKHN0YWNrLmluZGV4T2YobWVzc2FnZSkgPCAwKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2UgKyBcIlxcblwiICsgc3RhY2s7XG4gIH1cbiAgcmV0dXJuIHN0YWNrO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/hot/log.js\n");

/***/ }),

/***/ "./src/preload.js":
/*!************************!*\
  !*** ./src/preload.js ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// See the Electron documentation for details on how to use preload scripts:\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\nconst {\n  contextBridge,\n  ipcRenderer\n} = __webpack_require__(/*! electron */ \"electron\");\ncontextBridge.exposeInMainWorld('electronAPI', {\n  addTaskItem: (userId, title, type, parentId) => ipcRenderer.invoke('add-taskItem', userId, title, type, parentId),\n  getTaskItemById: id => ipcRenderer.invoke('get-taskItemById', id),\n  getTaskItemsByParentId: (userId, parentId) => ipcRenderer.invoke('get-taskItemsByParentId', userId, parentId),\n  deleteTaskItem: taskItemId => ipcRenderer.invoke('delete-taskItem', taskItemId),\n  updateTaskItem: (taskItemId, taskItemTitle) => ipcRenderer.invoke('update-taskItem', taskItemId, taskItemTitle),\n  searchTaskItems: searchQuery => ipcRenderer.invoke('search_taskitems', searchQuery),\n  addTask: newTask => ipcRenderer.invoke('add-task', newTask),\n  getTasks: tasklistId => ipcRenderer.invoke('get-tasks', tasklistId),\n  editTask: taskToEdit => ipcRenderer.invoke('edit-task', taskToEdit),\n  deleteTask: taskId => ipcRenderer.invoke('delete-task', taskId),\n  changeTaskStatus: (taskId, newStatus) => ipcRenderer.invoke('change-task-status', taskId, newStatus),\n  changeTaskCompleteAlready: (taskId, completeAlready) => ipcRenderer.invoke('change-task-complete-already', taskId, completeAlready),\n  getCompletedPercent: taskItemId => ipcRenderer.invoke('get-completed-percent', taskItemId),\n  getItemsFromParent: taskItemId => ipcRenderer.invoke('get-items-from-parent', taskItemId),\n  registerUser: (username, email, password) => ipcRenderer.invoke('register-user', username, email, password),\n  loginUser: (email, password) => ipcRenderer.invoke('login-user', email, password)\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcHJlbG9hZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsTUFBTTtFQUFFQSxhQUFhO0VBQUVDO0FBQVksQ0FBQyxHQUFHQyxtQkFBTyxDQUFDLDBCQUFVLENBQUM7QUFFMURGLGFBQWEsQ0FBQ0csaUJBQWlCLENBQUMsYUFBYSxFQUFFO0VBQzdDQyxXQUFXLEVBQUVBLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsS0FBS1AsV0FBVyxDQUFDUSxNQUFNLENBQUMsY0FBYyxFQUFFSixNQUFNLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxRQUFRLENBQUM7RUFDakhFLGVBQWUsRUFBR0MsRUFBRSxJQUFLVixXQUFXLENBQUNRLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRUUsRUFBRSxDQUFDO0VBQ25FQyxzQkFBc0IsRUFBRUEsQ0FBQ1AsTUFBTSxFQUFFRyxRQUFRLEtBQUtQLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLHlCQUF5QixFQUFFSixNQUFNLEVBQUVHLFFBQVEsQ0FBQztFQUM3R0ssY0FBYyxFQUFHQyxVQUFVLElBQUtiLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLGlCQUFpQixFQUFFSyxVQUFVLENBQUM7RUFDakZDLGNBQWMsRUFBRUEsQ0FBQ0QsVUFBVSxFQUFFRSxhQUFhLEtBQUtmLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLGlCQUFpQixFQUFFSyxVQUFVLEVBQUVFLGFBQWEsQ0FBQztFQUMvR0MsZUFBZSxFQUFHQyxXQUFXLElBQUtqQixXQUFXLENBQUNRLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRVMsV0FBVyxDQUFDO0VBRXJGQyxPQUFPLEVBQUdDLE9BQU8sSUFBS25CLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLFVBQVUsRUFBRVcsT0FBTyxDQUFDO0VBQzdEQyxRQUFRLEVBQUdDLFVBQVUsSUFBS3JCLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLFdBQVcsRUFBRWEsVUFBVSxDQUFDO0VBQ3JFQyxRQUFRLEVBQUdDLFVBQVUsSUFBS3ZCLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLFdBQVcsRUFBRWUsVUFBVSxDQUFDO0VBQ3JFQyxVQUFVLEVBQUdDLE1BQU0sSUFBS3pCLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLGFBQWEsRUFBRWlCLE1BQU0sQ0FBQztFQUNqRUMsZ0JBQWdCLEVBQUVBLENBQUNELE1BQU0sRUFBRUUsU0FBUyxLQUFLM0IsV0FBVyxDQUFDUSxNQUFNLENBQUMsb0JBQW9CLEVBQUVpQixNQUFNLEVBQUVFLFNBQVMsQ0FBQztFQUNwR0MseUJBQXlCLEVBQUVBLENBQUNILE1BQU0sRUFBRUksZUFBZSxLQUFLN0IsV0FBVyxDQUFDUSxNQUFNLENBQUMsOEJBQThCLEVBQUVpQixNQUFNLEVBQUVJLGVBQWUsQ0FBQztFQUNuSUMsbUJBQW1CLEVBQUdqQixVQUFVLElBQUtiLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLHVCQUF1QixFQUFFSyxVQUFVLENBQUM7RUFDNUZrQixrQkFBa0IsRUFBR2xCLFVBQVUsSUFBS2IsV0FBVyxDQUFDUSxNQUFNLENBQUMsdUJBQXVCLEVBQUVLLFVBQVUsQ0FBQztFQUUzRm1CLFlBQVksRUFBRUEsQ0FBQ0MsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsS0FBS25DLFdBQVcsQ0FBQ1EsTUFBTSxDQUFDLGVBQWUsRUFBRXlCLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxRQUFRLENBQUM7RUFDM0dDLFNBQVMsRUFBRUEsQ0FBQ0YsS0FBSyxFQUFFQyxRQUFRLEtBQUtuQyxXQUFXLENBQUNRLE1BQU0sQ0FBQyxZQUFZLEVBQUUwQixLQUFLLEVBQUVDLFFBQVE7QUFDbEYsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FnMV9lbGVjdHJvbi8uL3NyYy9wcmVsb2FkLmpzPzZlNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VlIHRoZSBFbGVjdHJvbiBkb2N1bWVudGF0aW9uIGZvciBkZXRhaWxzIG9uIGhvdyB0byB1c2UgcHJlbG9hZCBzY3JpcHRzOlxuLy8gaHR0cHM6Ly93d3cuZWxlY3Ryb25qcy5vcmcvZG9jcy9sYXRlc3QvdHV0b3JpYWwvcHJvY2Vzcy1tb2RlbCNwcmVsb2FkLXNjcmlwdHNcbmNvbnN0IHsgY29udGV4dEJyaWRnZSwgaXBjUmVuZGVyZXIgfSA9IHJlcXVpcmUoJ2VsZWN0cm9uJyk7XG5cbmNvbnRleHRCcmlkZ2UuZXhwb3NlSW5NYWluV29ybGQoJ2VsZWN0cm9uQVBJJywge1xuICBhZGRUYXNrSXRlbTogKHVzZXJJZCwgdGl0bGUsIHR5cGUsIHBhcmVudElkKSA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2FkZC10YXNrSXRlbScsIHVzZXJJZCwgdGl0bGUsIHR5cGUsIHBhcmVudElkKSxcbiAgZ2V0VGFza0l0ZW1CeUlkOiAoaWQpID0+IGlwY1JlbmRlcmVyLmludm9rZSgnZ2V0LXRhc2tJdGVtQnlJZCcsIGlkKSxcbiAgZ2V0VGFza0l0ZW1zQnlQYXJlbnRJZDogKHVzZXJJZCwgcGFyZW50SWQpID0+IGlwY1JlbmRlcmVyLmludm9rZSgnZ2V0LXRhc2tJdGVtc0J5UGFyZW50SWQnLCB1c2VySWQsIHBhcmVudElkKSxcbiAgZGVsZXRlVGFza0l0ZW06ICh0YXNrSXRlbUlkKSA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2RlbGV0ZS10YXNrSXRlbScsIHRhc2tJdGVtSWQpLFxuICB1cGRhdGVUYXNrSXRlbTogKHRhc2tJdGVtSWQsIHRhc2tJdGVtVGl0bGUpID0+IGlwY1JlbmRlcmVyLmludm9rZSgndXBkYXRlLXRhc2tJdGVtJywgdGFza0l0ZW1JZCwgdGFza0l0ZW1UaXRsZSksXG4gIHNlYXJjaFRhc2tJdGVtczogKHNlYXJjaFF1ZXJ5KSA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ3NlYXJjaF90YXNraXRlbXMnLCBzZWFyY2hRdWVyeSksXG4gIFxuICBhZGRUYXNrOiAobmV3VGFzaykgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdhZGQtdGFzaycsIG5ld1Rhc2spLFxuICBnZXRUYXNrczogKHRhc2tsaXN0SWQpID0+IGlwY1JlbmRlcmVyLmludm9rZSgnZ2V0LXRhc2tzJywgdGFza2xpc3RJZCksXG4gIGVkaXRUYXNrOiAodGFza1RvRWRpdCkgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdlZGl0LXRhc2snLCB0YXNrVG9FZGl0KSxcbiAgZGVsZXRlVGFzazogKHRhc2tJZCkgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdkZWxldGUtdGFzaycsIHRhc2tJZCksXG4gIGNoYW5nZVRhc2tTdGF0dXM6ICh0YXNrSWQsIG5ld1N0YXR1cykgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdjaGFuZ2UtdGFzay1zdGF0dXMnLCB0YXNrSWQsIG5ld1N0YXR1cyksXG4gIGNoYW5nZVRhc2tDb21wbGV0ZUFscmVhZHk6ICh0YXNrSWQsIGNvbXBsZXRlQWxyZWFkeSkgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdjaGFuZ2UtdGFzay1jb21wbGV0ZS1hbHJlYWR5JywgdGFza0lkLCBjb21wbGV0ZUFscmVhZHkpLFxuICBnZXRDb21wbGV0ZWRQZXJjZW50OiAodGFza0l0ZW1JZCkgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdnZXQtY29tcGxldGVkLXBlcmNlbnQnLCB0YXNrSXRlbUlkKSxcbiAgZ2V0SXRlbXNGcm9tUGFyZW50OiAodGFza0l0ZW1JZCkgPT4gaXBjUmVuZGVyZXIuaW52b2tlKCdnZXQtaXRlbXMtZnJvbS1wYXJlbnQnLCB0YXNrSXRlbUlkKSxcblxuICByZWdpc3RlclVzZXI6ICh1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkKSA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ3JlZ2lzdGVyLXVzZXInLCB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkKSxcbiAgbG9naW5Vc2VyOiAoZW1haWwsIHBhc3N3b3JkKSA9PiBpcGNSZW5kZXJlci5pbnZva2UoJ2xvZ2luLXVzZXInLCBlbWFpbCwgcGFzc3dvcmQpXG59KTsiXSwibmFtZXMiOlsiY29udGV4dEJyaWRnZSIsImlwY1JlbmRlcmVyIiwicmVxdWlyZSIsImV4cG9zZUluTWFpbldvcmxkIiwiYWRkVGFza0l0ZW0iLCJ1c2VySWQiLCJ0aXRsZSIsInR5cGUiLCJwYXJlbnRJZCIsImludm9rZSIsImdldFRhc2tJdGVtQnlJZCIsImlkIiwiZ2V0VGFza0l0ZW1zQnlQYXJlbnRJZCIsImRlbGV0ZVRhc2tJdGVtIiwidGFza0l0ZW1JZCIsInVwZGF0ZVRhc2tJdGVtIiwidGFza0l0ZW1UaXRsZSIsInNlYXJjaFRhc2tJdGVtcyIsInNlYXJjaFF1ZXJ5IiwiYWRkVGFzayIsIm5ld1Rhc2siLCJnZXRUYXNrcyIsInRhc2tsaXN0SWQiLCJlZGl0VGFzayIsInRhc2tUb0VkaXQiLCJkZWxldGVUYXNrIiwidGFza0lkIiwiY2hhbmdlVGFza1N0YXR1cyIsIm5ld1N0YXR1cyIsImNoYW5nZVRhc2tDb21wbGV0ZUFscmVhZHkiLCJjb21wbGV0ZUFscmVhZHkiLCJnZXRDb21wbGV0ZWRQZXJjZW50IiwiZ2V0SXRlbXNGcm9tUGFyZW50IiwicmVnaXN0ZXJVc2VyIiwidXNlcm5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwibG9naW5Vc2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/preload.js\n");

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("electron");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 		__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 		module = execOptions.module;
/******/ 		execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("main_window." + __webpack_require__.h() + ".hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("99fceeb369f1ff35b08f")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "wag1_electron:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId, fetchPriority) {
/******/ 				return trackBlockingPromise(require.e(chunkId, fetchPriority));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				// inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results).then(function () {});
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							}, [])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								}
/******/ 								return setStatus("ready").then(function () {
/******/ 									return updatedModules;
/******/ 								});
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = "D:\\ITSHNICHNAYA\\Projects\\Electron\\bambam\\.webpack\\renderer" + "/native_modules/";
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"main_window": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			currentUpdatedModulesList = updatedModulesList;
/******/ 			return new Promise((resolve, reject) => {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = (event) => {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdatewag1_electron"] = (chunkId, moreModules, runtime) => {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result = newModuleFactory
/******/ 						? getAffectedModuleEffects(moduleId)
/******/ 						: {
/******/ 								type: "disposed",
/******/ 								moduleId: moduleId
/******/ 							};
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err1) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err1,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err1);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				} else {
/******/ 					currentUpdateChunks[chunkId] = false;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						!currentUpdateChunks[chunkId]
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__("./node_modules/@electron-forge/plugin-webpack/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&overlay=true&reconnect=10&hot=true&live-reload=true");
/******/ 	__webpack_require__("./node_modules/webpack/hot/dev-server.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/preload.js");
/******/ 	
/******/ })()
;